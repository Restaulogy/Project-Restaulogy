<?php/**********************************************************************tbl_table_customer_session.class.phpGenerated by STRUCTY 2013.05.11 08:58:44.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define('TBL_TABLE_CUSTOMER_SESSION', 'tbl_table_customer_session'); define('TBL_CUST_SESS_ID', 'tbl_cust_sess_id'); define('TBL_CUST_SESS_TABLE_ID', 'tbl_cust_sess_table_id'); define('TBL_CUST_SESS_CUSTOMER', 'tbl_cust_sess_customer'); define('TBL_CUST_SESS_PARTY_SIZE','tbl_cust_sess_party_size');define('TBL_CUST_SESS_BY_CUST', 'tbl_cust_sess_by_cust'); define('TBL_CUST_SESS_START_DATE', 'tbl_cust_sess_start_date'); define('TBL_CUST_SESS_END_DATE', 'tbl_cust_sess_end_date'); define('TBL_TABLE_CUSTOMER_SESSION_ACTIVE_DATE',  TBL_CUST_SESS_START_DATE);define('TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE',  TBL_CUST_SESS_END_DATE);$tbl_table_customer_session_active_condition= ' ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' = 0) ';class tbl_table_customer_session {	private $tbl_cust_sess_id;	private $tbl_cust_sess_table_id;	private $tbl_cust_sess_customer;	private $tbl_cust_sess_party_size;	private $tbl_cust_sess_by_cust;	private $tbl_cust_sess_start_date;	private $tbl_cust_sess_end_date;	private $tbl_table_customer_session_active_date;	private $tbl_table_customer_session_deactive_date;	public function settbl_cust_sess_id($pArg="0") {$this->tbl_cust_sess_id=$pArg;}	public function settbl_cust_sess_table_id($pArg="0") {$this->tbl_cust_sess_table_id=$pArg;}	public function settbl_cust_sess_customer($pArg="0") {$this->tbl_cust_sess_customer=$pArg;}	public function settbl_cust_sess_party_size($pArg="0") {$this->tbl_cust_sess_party_size=$pArg;}	public function settbl_cust_sess_by_cust($pArg="0") {$this->tbl_cust_sess_by_cust=$pArg;}	public function settbl_cust_sess_start_date($pArg="0") {$this->tbl_cust_sess_start_date=$pArg;}	public function settbl_cust_sess_end_date($pArg="0") {$this->tbl_cust_sess_end_date=$pArg;}	public function settbl_table_customer_session_active_date($pArg="0") {$this->tbl_table_customer_session_active_date=$pArg;}	public function settbl_table_customer_session_deactive_date($pArg="0") {$this->tbl_table_customer_session_deactive_date=$pArg;}	public function gettbl_cust_sess_id() {return $this->tbl_cust_sess_id;}	public function gettbl_cust_sess_table_id() {return $this->tbl_cust_sess_table_id;}	public function gettbl_cust_sess_customer() {return $this->tbl_cust_sess_customer;}	public function gettbl_cust_sess_party_size() {return $this->tbl_cust_sess_party_size;}	public function gettbl_cust_sess_by_cust() {return $this->tbl_cust_sess_by_cust;}	public function gettbl_cust_sess_start_date() {return $this->tbl_cust_sess_start_date;}	public function gettbl_cust_sess_end_date() {return $this->tbl_cust_sess_end_date;}	public function gettbl_table_customer_session_active_date($pArg="0") {return $this->tbl_table_customer_session_active_date;}	public function gettbl_table_customer_session_deactive_date($pArg="0") {return $this->tbl_table_customer_session_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_TABLE_CUSTOMER_SESSION.RET;		$and = "WHERE".RET;		if($array[TBL_CUST_SESS_ID] != "") {			$qry .= $and.TBL_CUST_SESS_ID." = '".$array[TBL_CUST_SESS_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_TABLE_ID] != "") {			$qry .= $and.TBL_CUST_SESS_TABLE_ID." = '".$array[TBL_CUST_SESS_TABLE_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_CUSTOMER] != "") {			$qry .= $and.TBL_CUST_SESS_CUSTOMER." = '".$array[TBL_CUST_SESS_CUSTOMER]."'".RET;			$and = "AND".RET;		}				if($array[SESS_RESTAURANT] != "") {			$qry .= $and.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID,$array[SESS_RESTAURANT]);			$and = "AND".RET;		}						if($array[TBL_CUST_SESS_PARTY_SIZE] != "") {			$qry .= $and.TBL_CUST_SESS_PARTY_SIZE." = '".$array[TBL_CUST_SESS_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_BY_CUST] != "") {			$qry .= $and.TBL_CUST_SESS_BY_CUST." = '".$array[TBL_CUST_SESS_BY_CUST]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_START_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_START_DATE." = '".$array[TBL_CUST_SESS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_END_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_END_DATE." = '".$array[TBL_CUST_SESS_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->settbl_cust_sess_id($record[TBL_CUST_SESS_ID]);				$this->settbl_cust_sess_table_id($record[TBL_CUST_SESS_TABLE_ID]);				$this->settbl_cust_sess_customer($record[TBL_CUST_SESS_CUSTOMER]);				$this->settbl_cust_sess_party_size($record[TBL_CUST_SESS_PARTY_SIZE]);				$this->settbl_cust_sess_by_cust($record[TBL_CUST_SESS_BY_CUST]);				$this->settbl_cust_sess_start_date($record[TBL_CUST_SESS_START_DATE]);				$this->settbl_cust_sess_end_date($record[TBL_CUST_SESS_END_DATE]);				$this->settbl_table_customer_session_active_date($record[TBL_TABLE_CUSTOMER_SESSION_ACTIVE_DATE]);				$this->settbl_table_customer_session_deactive_date($record[TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_table_customer_session_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_TABLE_CUSTOMER_SESSION.RET;		$and = "WHERE".RET;		if($array[TBL_CUST_SESS_ID] != "") {			$qry .= $and.TBL_CUST_SESS_ID." = '".$array[TBL_CUST_SESS_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_TABLE_ID] != "") {			$qry .= $and.TBL_CUST_SESS_TABLE_ID." = '".$array[TBL_CUST_SESS_TABLE_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_CUSTOMER] != "") {			$qry .= $and.TBL_CUST_SESS_CUSTOMER." = '".$array[TBL_CUST_SESS_CUSTOMER]."'".RET;			$and = "AND".RET;		}				if($array[TBL_CUST_SESS_PARTY_SIZE] != "") {			$qry .= $and.TBL_CUST_SESS_PARTY_SIZE." = '".$array[TBL_CUST_SESS_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_BY_CUST] != "") {			$qry .= $and.TBL_CUST_SESS_BY_CUST." = '".$array[TBL_CUST_SESS_BY_CUST]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_START_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_START_DATE." = '".$array[TBL_CUST_SESS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_END_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_END_DATE." = '".$array[TBL_CUST_SESS_END_DATE]."'".RET;			$and = "AND".RET;		}				if($array[SESS_RESTAURANT] != "") {			$qry .= $and.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID,$array[SESS_RESTAURANT]);			$and = "AND".RET;		}				if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_table_customer_session_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["tbl_cust_sess_id"]=$record[TBL_CUST_SESS_ID];					$class_object["tbl_cust_sess_table_id"]=$record[TBL_CUST_SESS_TABLE_ID];					$class_object["tbl_cust_sess_customer"]=$record[TBL_CUST_SESS_CUSTOMER];					$class_object["tbl_cust_sess_party_size"]=$record[TBL_CUST_SESS_PARTY_SIZE];					$class_object["tbl_cust_sess_by_cust"]=$record[TBL_CUST_SESS_BY_CUST];					$class_object["tbl_cust_sess_start_date"]=$record[TBL_CUST_SESS_START_DATE];					$class_object["tbl_cust_sess_end_date"]=$record[TBL_CUST_SESS_END_DATE];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_table_customer_session();					$class_object->settbl_cust_sess_id($record[TBL_CUST_SESS_ID]);					$class_object->settbl_cust_sess_table_id($record[TBL_CUST_SESS_TABLE_ID]);					$class_object->settbl_cust_sess_customer($record[TBL_CUST_SESS_CUSTOMER]);					$class_object->settbl_cust_sess_party_size($record[TBL_CUST_SESS_PARTY_SIZE]);					$class_object->settbl_cust_sess_by_cust($record[TBL_CUST_SESS_BY_CUST]);					$class_object->settbl_cust_sess_start_date($record[TBL_CUST_SESS_START_DATE]);					$class_object->settbl_cust_sess_end_date($record[TBL_CUST_SESS_END_DATE]);				}				$class_objects[$record[TBL_CUST_SESS_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->gettbl_cust_sess_id() != '') {			$qry  = "UPDATE ".TBL_TABLE_CUSTOMER_SESSION.RET."SET".RET."			".TBL_CUST_SESS_ID." = '".$this->gettbl_cust_sess_id()."',".RET."			".TBL_CUST_SESS_TABLE_ID." = '".$this->gettbl_cust_sess_table_id()."',".RET."			".TBL_CUST_SESS_CUSTOMER." = '".$this->gettbl_cust_sess_customer()."',".RET."			".TBL_CUST_SESS_PARTY_SIZE." = '".$this->gettbl_cust_sess_party_size()."',".RET."			".TBL_CUST_SESS_BY_CUST." = '".$this->gettbl_cust_sess_by_cust()."',".RET."			".TBL_CUST_SESS_START_DATE." = '".$this->gettbl_cust_sess_start_date()."',".RET."			".TBL_CUST_SESS_END_DATE." = '".$this->gettbl_cust_sess_end_date()."'".RET.			"WHERE ".TBL_CUST_SESS_ID." = ".$this->gettbl_cust_sess_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_TABLE_CUSTOMER_SESSION." (".RET.			"".TBL_CUST_SESS_TABLE_ID.", ".TBL_CUST_SESS_CUSTOMER.", ".TBL_CUST_SESS_PARTY_SIZE.", ".TBL_CUST_SESS_BY_CUST.", ".TBL_CUST_SESS_START_DATE.", ".TBL_CUST_SESS_END_DATE.RET.				") VALUES (".RET.			"'".$this->gettbl_cust_sess_table_id()."',".RET.			"'".$this->gettbl_cust_sess_customer()."',".RET.			"'".$this->gettbl_cust_sess_party_size()."',".RET.			"'".$this->gettbl_cust_sess_by_cust()."',".RET.			"'".$this->gettbl_cust_sess_start_date()."',".RET.			"'".$this->gettbl_cust_sess_end_date()."'".RET.			")".RET; 			$res = mysql_query($qry);			$this->settbl_cust_sess_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_TABLE_CUSTOMER_SESSION.RET;		$and = "WHERE".RET;		if($array[TBL_CUST_SESS_ID] != "") {			$qry .= $and.TBL_CUST_SESS_ID." = '".$array[TBL_CUST_SESS_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_TABLE_ID] != "") {			$qry .= $and.TBL_CUST_SESS_TABLE_ID." = '".$array[TBL_CUST_SESS_TABLE_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_CUSTOMER] != "") {			$qry .= $and.TBL_CUST_SESS_CUSTOMER." = '".$array[TBL_CUST_SESS_CUSTOMER]."'".RET;			$and = "AND".RET;		}				if($array[TBL_CUST_SESS_PARTY_SIZE] != "") {			$qry .= $and.TBL_CUST_SESS_PARTY_SIZE." = '".$array[TBL_CUST_SESS_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_BY_CUST] != "") {			$qry .= $and.TBL_CUST_SESS_BY_CUST." = '".$array[TBL_CUST_SESS_BY_CUST]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_START_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_START_DATE." = '".$array[TBL_CUST_SESS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_CUST_SESS_END_DATE] != "") {			$qry .= $and.TBL_CUST_SESS_END_DATE." = '".$array[TBL_CUST_SESS_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($tbl_cust_sess_table_id ,$tbl_cust_sess_customer) {		$unique_arr = array(); 			//$unique_arr[TBL_CUST_SESS_TABLE_ID]=$tbl_cust_sess_table_id;			//$unique_arr[TBL_CUST_SESS_CUSTOMER]=$tbl_cust_sess_customer; 		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($tbl_cust_sess_table_id ,$tbl_cust_sess_customer="" ,$tbl_cust_sess_by_cust = 0,$tbl_cust_sess_party_size=0) {		if(is_not_empty($tbl_cust_sess_table_id)){			if($this->isAlreadyThere($tbl_cust_sess_table_id ,$tbl_cust_sess_customer)){				return OPERATION_DUPLICATE;			}else{			    $this->deactivatePrevTblRecords($tbl_cust_sess_table_id);				$this->settbl_cust_sess_id("");				$this->settbl_cust_sess_table_id($tbl_cust_sess_table_id);				$this->settbl_cust_sess_customer($tbl_cust_sess_customer);				$this->settbl_cust_sess_party_size($tbl_cust_sess_party_size);				$this->settbl_cust_sess_by_cust($tbl_cust_sess_by_cust);				$this->settbl_cust_sess_start_date(date(DATE_FORMAT));				$this->insert(); 				return $this->gettbl_cust_sess_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($tbl_cust_sess_id, $tbl_cust_sess_table_id, $tbl_cust_sess_customer, $tbl_cust_sess_start_date, $tbl_cust_sess_end_date) {		if(is_gt_zero_num($tbl_cust_sess_id)){			if ($this->readObject(array(TBL_CUST_SESS_ID=>$tbl_cust_sess_id))){							$this->settbl_cust_sess_table_id($tbl_cust_sess_table_id);				$this->settbl_cust_sess_customer($tbl_cust_sess_customer);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update		 	public function activate($tbl_cust_sess_id){		if(is_gt_zero_num($tbl_cust_sess_id)){			if ($this->readObject(array(TBL_CUST_SESS_ID=>$tbl_cust_sess_id))){				$qry  = "UPDATE ".TBL_TABLE_CUSTOMER_SESSION.RET."SET".RET."			".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".TBL_CUST_SESS_ID."={$tbl_cust_sess_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($tbl_cust_sess_id){		if(is_gt_zero_num($tbl_cust_sess_id)){			if ($this->readObject(array(TBL_CUST_SESS_ID=>$tbl_cust_sess_id))){				$qry  = "UPDATE ".TBL_TABLE_CUSTOMER_SESSION.RET."SET".RET."			".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".TBL_CUST_SESS_ID."={$tbl_cust_sess_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($tbl_cust_sess_id) {		$info = array();		if($tbl_cust_sess_id != ""){			$obj_tbl_table_customer_session = new tbl_table_customer_session();			if($obj_tbl_table_customer_session->readObject(array("tbl_cust_sess_id"=>$tbl_cust_sess_id))){				$info["tbl_cust_sess_id"]=$obj_tbl_table_customer_session->gettbl_cust_sess_id();				$info["tbl_cust_sess_table_id"]=$obj_tbl_table_customer_session->gettbl_cust_sess_table_id();				$info["tbl_cust_sess_customer"]=$obj_tbl_table_customer_session->gettbl_cust_sess_customer();				$info["tbl_cust_sess_party_size"]=$obj_tbl_table_customer_session->gettbl_cust_sess_party_size();				$info["tbl_cust_sess_by_cust"]=$obj_tbl_table_customer_session->gettbl_cust_sess_by_cust();				$info["tbl_cust_sess_start_date"]=$obj_tbl_table_customer_session->gettbl_cust_sess_start_date();				$info["tbl_cust_sess_end_date"]=$obj_tbl_table_customer_session->gettbl_cust_sess_end_date(); 				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_table_customer_session->gettbl_table_customer_session_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_table_customer_session->gettbl_table_customer_session_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_table_customer_session->gettbl_table_customer_session_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_table_customer_session);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_table_customer_session_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_TABLE_CUSTOMER_SESSION."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_table_customer_session_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields		//..this function will return last table session which is active or alive	public static function GetCurrentActiveCustSession($table_id){	   if(is_gt_zero_num($table_id)){		   	global $tbl_table_customer_session_active_condition;			//..new code 			return  DB::ExecScalarQry('SELECT '.TBL_CUST_SESS_ID.' FROM '.TBL_TABLE_CUSTOMER_SESSION.' WHERE '.TBL_CUST_SESS_TABLE_ID.'='.$table_id.' AND '.$tbl_table_customer_session_active_condition.' AND '.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID).' ORDER BY '.TBL_CUST_SESS_ID.' DESC LIMIT 1');			//..previous code with current day			//$res=mysql_query('SELECT '.TBL_CUST_SESS_ID.' FROM '.TBL_TABLE_CUSTOMER_SESSION.' WHERE '.TBL_CUST_SESS_TABLE_ID.'='.$table_id.' AND '.$tbl_table_customer_session_active_condition.' AND DATE('.TBL_CUST_SESS_START_DATE.') = CURDATE() ORDER BY '.TBL_CUST_SESS_ID.' DESC LIMIT 1');			 		 	 	   }		    	   return 0;	}		public static function isPendingCustomerForTables(){		$res = mysql_query('SELECT count('.TBL_CUST_SESS_ID.') FROM (SELECT * FROM '.TBL_TABLE_CUSTOMER_SESSION.'  ORDER BY  '.TBL_CUST_SESS_ID.' DESC, '.TBL_CUST_SESS_TABLE_ID.' ) t GROUP BY  '.TBL_CUST_SESS_TABLE_ID.' HAVING TBL_CUST_SESS_CUSTOMER ="" AND '.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID).'');	 		if($res && mysql_num_rows($res))			return mysql_result($res,0); 		return 0;	}		public static function deactivatePrevTblRecords($table_id){	global $tbl_table_customer_session_active_condition;	  if(is_gt_zero_num($table_id)){	  	 $res = mysql_query('UPDATE '.TBL_TABLE_CUSTOMER_SESSION.' SET '.TBL_CUST_SESS_END_DATE.' = "'.date(DATE_FORMAT).'" WHERE '.TBL_CUST_SESS_TABLE_ID.' = '.$table_id.' AND '.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID).' AND '.$tbl_table_customer_session_active_condition);		 return $res;	  }	  return 0;	} 		public static function getActiveTblSession($tbl_id){		global $tbl_table_customer_session_active_condition;		$res = mysql_query('SELECT  MAX('.TBL_CUST_SESS_ID.') FROM  '.TBL_TABLE_CUSTOMER_SESSION.' WHERE '.TBL_CUST_SESS_TABLE_ID.'='.$tbl_id.' AND ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.'  = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) AND '.$tbl_table_customer_session_active_condition);		//echo 'SELECT  MAX('.TBL_CUST_SESS_ID.') FROM  '.TBL_TABLE_CUSTOMER_SESSION.' WHERE '.TBL_CUST_SESS_TABLE_ID.'='.$tbl_id.'  ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.'  = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) AND '.$tbl_table_customer_session_active_condition;		if($res && mysql_num_rows($res)){			return mysql_result($res,0);		}		return 0;	}		public static function getActiveSessionForAlltables($isArray=0){	 global $tbl_table_customer_session_active_condition;  	 	$info = array();		/*echo ' SELECT '.tbl_cust_sess_id.'  FROM '.TBL_TABLE_CUSTOMER_SESSION.' WHERE  ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) GROUP BY '.TBL_CUST_SESS_TABLE_ID;*/		/*$res = mysql_query(' SELECT MAX('.tbl_cust_sess_id.')  FROM '.TBL_TABLE_CUSTOMER_SESSION.' WHERE  ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) GROUP BY '.TBL_CUST_SESS_TABLE_ID);*/		/*echo 'SELECT  '.TBL_CUST_SESS_TABLE_ID.',MAX('.TBL_CUST_SESS_ID.') FROM  '.TBL_TABLE_CUSTOMER_SESSION.' WHERE  ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.'  = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) AND '.$tbl_table_customer_session_active_condition.' GROUP BY '.TBL_CUST_SESS_TABLE_ID.'';*/		$res = mysql_query('SELECT  '.TBL_CUST_SESS_TABLE_ID.',MAX('.TBL_CUST_SESS_ID.') FROM  '.TBL_TABLE_CUSTOMER_SESSION.' WHERE  ('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.'  = 0 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) AND '.$tbl_table_customer_session_active_condition.' AND '.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID).' GROUP BY '.TBL_CUST_SESS_TABLE_ID.'');		 		if($res && mysql_num_rows($res)){			while($row = mysql_fetch_row($res)){				$info[$row[0]] = $row[1];			} 		}				if(is_not_empty($info)){			if(is_gt_zero_num($isArray)){				return $info;			}else{				return implode(",",$info);			} 		}		return '';	}		public static function is_in_live_session($session){		$active_session = self::getActiveSessionForAlltables();	  return in_array($session, biz_explode(',',$active_session));			 	} 		/**	* Return list of Live sess tables  	*/	public static function getLiveSessTables($_all_details=false){   		global $tbl_table_customer_session_active_condition;		$sql='		SELECT  '.TBL_CUST_SESS_TABLE_ID.','.TABLE_NUMBER.','.TABLE_POS_X.','.TABLE_POS_Y.','.TABLE_DWG_WIDTH.','.TABLE_DWG_HEIGHT.','.TABLE_SEATING_CAPACITY.','.TBL_CUST_SESS_PARTY_SIZE.', '.TBL_CUST_SESS_ID.'				FROM  		'.TBL_TABLE_CUSTOMER_SESSION.' 		INNER JOIN '.TBL_DINING_TABLE.' 		ON '.TBL_CUST_SESS_TABLE_ID.'='.TABLE_ID.' 		WHERE  		('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.' is NULL		 OR '.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.'  = 0 		 OR TIME('.TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.') > CURTIME( )) 		 AND '.$tbl_table_customer_session_active_condition.'		 AND '.chkTableInRestaurant(TBL_CUST_SESS_TABLE_ID).'		 AND '.TBL_CUST_SESS_ID.' IN (		 SELECT MAX('.TBL_CUST_SESS_ID.') 		 FROM '.TBL_TABLE_CUSTOMER_SESSION.' 		 GROUP BY '.TBL_CUST_SESS_TABLE_ID.');';		$res = mysql_query($sql);		//echo $sql;					 if($res){		 	 while($row= mysql_fetch_assoc($res)){			 					if($_all_details==TRUE){					$arr[$row[TBL_CUST_SESS_TABLE_ID]] = $row;				}else{					$arr[$row[TBL_CUST_SESS_TABLE_ID]] = $row[TABLE_NUMBER];				}			 }		 }		 return $arr;  	}	 }//..End tbl_table_customer_session?>