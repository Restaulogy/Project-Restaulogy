<?php/**********************************************************************tbl_ord_paypal_trans.class.phpGenerated by STRUCTY 2013.11.09 06:44:08.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_ORD_PAYPAL_TRANS", "tbl_ord_paypal_trans"); define('PAYPAL_ID', 'paypal_id'); define('PAYPAL_TXN_ID', 'paypal_txn_id'); define('PAYPAL_TXN_AMNT', 'paypal_txn_amnt'); define('PAYPAL_PAYMENT_ID', 'paypal_payment_id'); define('PAYPAL_REFUND_TYPE', 'paypal_refund_type'); define('PAYPAL_REFUND_COMPLETE', 'paypal_refund_complete'); define('PAYPAL_START_DATE', 'paypal_start_date'); define('PAYPAL_END_DATE', 'paypal_end_date'); define("TBL_ORD_PAYPAL_TRANS_ACTIVE_DATE",  PAYPAL_START_DATE);define("TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE",  PAYPAL_END_DATE);$tbl_ord_paypal_trans_active_condition= " (".TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE." is NULL OR ".TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE." = 0 OR ".TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE." > CURDATE( )) ";class tbl_ord_paypal_trans {	private $paypal_id;	private $paypal_txn_id;	private $paypal_txn_amnt;	private $paypal_payment_id;	private $paypal_refund_type;	private $paypal_refund_complete;	private $paypal_start_date;	private $paypal_end_date;	private $tbl_ord_paypal_trans_active_date;	private $tbl_ord_paypal_trans_deactive_date;	public function setpaypal_id($pArg="0") {$this->paypal_id=$pArg;}	public function setpaypal_txn_id($pArg="0") {$this->paypal_txn_id=$pArg;}	public function setpaypal_txn_amnt($pArg="0") {$this->paypal_txn_amnt=$pArg;}	public function setpaypal_payment_id($pArg="0") {$this->paypal_payment_id=$pArg;}	public function setpaypal_refund_type($pArg="0") {$this->paypal_refund_type=$pArg;}	public function setpaypal_refund_complete($pArg="0") {$this->paypal_refund_complete=$pArg;}	public function setpaypal_start_date($pArg="0") {$this->paypal_start_date=$pArg;}	public function setpaypal_end_date($pArg="0") {$this->paypal_end_date=$pArg;}	public function settbl_ord_paypal_trans_active_date($pArg="0") {$this->tbl_ord_paypal_trans_active_date=$pArg;}	public function settbl_ord_paypal_trans_deactive_date($pArg="0") {$this->tbl_ord_paypal_trans_deactive_date=$pArg;}	public function getpaypal_id() {return $this->paypal_id;}	public function getpaypal_txn_id() {return $this->paypal_txn_id;}	public function getpaypal_txn_amnt() {return $this->paypal_txn_amnt;}	public function getpaypal_payment_id() {return $this->paypal_payment_id;}	public function getpaypal_refund_type() {return $this->paypal_refund_type;}	public function getpaypal_refund_complete() {return $this->paypal_refund_complete;}	public function getpaypal_start_date() {return $this->paypal_start_date;}	public function getpaypal_end_date() {return $this->paypal_end_date;}	public function gettbl_ord_paypal_trans_active_date($pArg="0") {return $this->tbl_ord_paypal_trans_active_date;}	public function gettbl_ord_paypal_trans_deactive_date($pArg="0") {return $this->tbl_ord_paypal_trans_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_ORD_PAYPAL_TRANS.RET;		$and = "WHERE".RET;		if($array[PAYPAL_ID] != "") {			$qry .= $and.PAYPAL_ID." = '".$array[PAYPAL_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_ID] != "") {			$qry .= $and.PAYPAL_TXN_ID." = '".$array[PAYPAL_TXN_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_AMNT] != "") {			$qry .= $and.PAYPAL_TXN_AMNT." = '".$array[PAYPAL_TXN_AMNT]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_PAYMENT_ID] != "") {			$qry .= $and.PAYPAL_PAYMENT_ID." = '".$array[PAYPAL_PAYMENT_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_TYPE] != "") {			$qry .= $and.PAYPAL_REFUND_TYPE." = '".$array[PAYPAL_REFUND_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_COMPLETE] != "") {			$qry .= $and.PAYPAL_REFUND_COMPLETE." = '".$array[PAYPAL_REFUND_COMPLETE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_START_DATE] != "") {			$qry .= $and.PAYPAL_START_DATE." = '".$array[PAYPAL_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_END_DATE] != "") {			$qry .= $and.PAYPAL_END_DATE." = '".$array[PAYPAL_END_DATE]."'".RET;			$and = "AND".RET;		} 	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else { 				$this->setpaypal_id($record[PAYPAL_ID]);				$this->setpaypal_txn_id($record[PAYPAL_TXN_ID]);				$this->setpaypal_txn_amnt($record[PAYPAL_TXN_AMNT]);				$this->setpaypal_payment_id($record[PAYPAL_PAYMENT_ID]);				$this->setpaypal_refund_type($record[PAYPAL_REFUND_TYPE]);				$this->setpaypal_refund_complete($record[PAYPAL_REFUND_COMPLETE]);				$this->setpaypal_start_date($record[PAYPAL_START_DATE]);				$this->setpaypal_end_date($record[PAYPAL_END_DATE]); 				$this->settbl_ord_paypal_trans_active_date($record[TBL_ORD_PAYPAL_TRANS_ACTIVE_DATE]); 				$this->settbl_ord_paypal_trans_deactive_date($record[TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE]);  				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_ord_paypal_trans_active_condition;		$qry = "SELECT *, (SELECT IFNULL(SUM(".REFUND_AMNT."),0) FROM ".TBL_ORD_REFUND." WHERE ".REFUND_PAYPAL_TXN_ID."=".PAYPAL_ID." ) `refunded_amt` ".RET."FROM ".TBL_ORD_PAYPAL_TRANS.RET;		$and = "WHERE".RET;		if($array[PAYPAL_ID] != "") {			$qry .= $and.PAYPAL_ID." = '".$array[PAYPAL_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_ID] != "") {			$qry .= $and.PAYPAL_TXN_ID." = '".$array[PAYPAL_TXN_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_AMNT] != "") {			$qry .= $and.PAYPAL_TXN_AMNT." = '".$array[PAYPAL_TXN_AMNT]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_PAYMENT_ID] != "") {			$qry .= $and.PAYPAL_PAYMENT_ID." = '".$array[PAYPAL_PAYMENT_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_TYPE] != "") {			$qry .= $and.PAYPAL_REFUND_TYPE." = '".$array[PAYPAL_REFUND_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_COMPLETE] != "") {			$qry .= $and.PAYPAL_REFUND_COMPLETE." = '".$array[PAYPAL_REFUND_COMPLETE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_START_DATE] != "") {			$qry .= $and.PAYPAL_START_DATE." = '".$array[PAYPAL_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_END_DATE] != "") {			$qry .= $and.PAYPAL_END_DATE." = '".$array[PAYPAL_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_ord_paypal_trans_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		 		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["paypal_id"]=$record[PAYPAL_ID];					$class_object["paypal_txn_id"]=$record[PAYPAL_TXN_ID];					$class_object["paypal_txn_amnt"]=$record[PAYPAL_TXN_AMNT];					$class_object["paypal_payment_id"]=$record[PAYPAL_PAYMENT_ID];					$class_object["paypal_refund_type"]=$record[PAYPAL_REFUND_TYPE];					$class_object["paypal_refund_complete"]=$record[PAYPAL_REFUND_COMPLETE];					$class_object["paypal_start_date"]=$record[PAYPAL_START_DATE];					$class_object["paypal_end_date"]=$record[PAYPAL_END_DATE];					$class_object['refunded_amt'] = $record['refunded_amt'];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_ord_paypal_trans();					$class_object->setpaypal_id($record[PAYPAL_ID]);					$class_object->setpaypal_txn_id($record[PAYPAL_TXN_ID]);					$class_object->setpaypal_txn_amnt($record[PAYPAL_TXN_AMNT]);					$class_object->setpaypal_payment_id($record[PAYPAL_PAYMENT_ID]);					$class_object->setpaypal_refund_type($record[PAYPAL_REFUND_TYPE]);					$class_object->setpaypal_refund_complete($record[PAYPAL_REFUND_COMPLETE]);					$class_object->setpaypal_start_date($record[PAYPAL_START_DATE]);					$class_object->setpaypal_end_date($record[PAYPAL_END_DATE]);				}				$class_objects[$record[PAYPAL_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getpaypal_id() != '') {			$qry  = "UPDATE ".TBL_ORD_PAYPAL_TRANS.RET."SET".RET."			".PAYPAL_ID." = '".$this->getpaypal_id()."',".RET."			".PAYPAL_TXN_ID." = '".$this->getpaypal_txn_id()."',".RET."			".PAYPAL_TXN_AMNT." = '".$this->getpaypal_txn_amnt()."',".RET."			".PAYPAL_PAYMENT_ID." = '".$this->getpaypal_payment_id()."',".RET."			".PAYPAL_REFUND_TYPE." = '".$this->getpaypal_refund_type()."',".RET."			".PAYPAL_REFUND_COMPLETE." = '".$this->getpaypal_refund_complete()."',".RET."			".PAYPAL_START_DATE." = '".$this->getpaypal_start_date()."',".RET."			".PAYPAL_END_DATE." = '".$this->getpaypal_end_date()."'".RET.			"WHERE ".PAYPAL_ID." = ".$this->getpaypal_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_ORD_PAYPAL_TRANS." (".RET.			"".PAYPAL_TXN_ID.", ".PAYPAL_TXN_AMNT.", ".PAYPAL_PAYMENT_ID.", ".PAYPAL_REFUND_TYPE.", ".PAYPAL_REFUND_COMPLETE.", ".PAYPAL_START_DATE.", ".PAYPAL_END_DATE.RET.				") VALUES (".RET.			"'".$this->getpaypal_txn_id()."',".RET.			"'".$this->getpaypal_txn_amnt()."',".RET.			"'".$this->getpaypal_payment_id()."',".RET.			"'".$this->getpaypal_refund_type()."',".RET.			"'".$this->getpaypal_refund_complete()."',".RET.			"'".$this->getpaypal_start_date()."',".RET.			"'".$this->getpaypal_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setpaypal_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_ORD_PAYPAL_TRANS.RET;		$and = "WHERE".RET;		if($array[PAYPAL_ID] != "") {			$qry .= $and.PAYPAL_ID." = '".$array[PAYPAL_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_ID] != "") {			$qry .= $and.PAYPAL_TXN_ID." = '".$array[PAYPAL_TXN_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_TXN_AMNT] != "") {			$qry .= $and.PAYPAL_TXN_AMNT." = '".$array[PAYPAL_TXN_AMNT]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_PAYMENT_ID] != "") {			$qry .= $and.PAYPAL_PAYMENT_ID." = '".$array[PAYPAL_PAYMENT_ID]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_TYPE] != "") {			$qry .= $and.PAYPAL_REFUND_TYPE." = '".$array[PAYPAL_REFUND_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_REFUND_COMPLETE] != "") {			$qry .= $and.PAYPAL_REFUND_COMPLETE." = '".$array[PAYPAL_REFUND_COMPLETE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_START_DATE] != "") {			$qry .= $and.PAYPAL_START_DATE." = '".$array[PAYPAL_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[PAYPAL_END_DATE] != "") {			$qry .= $and.PAYPAL_END_DATE." = '".$array[PAYPAL_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($paypal_txn_id ,$paypal_txn_amnt ,$paypal_payment_id ,$paypal_refund_type ,$paypal_refund_complete ,$paypal_start_date ,$paypal_end_date) {		$unique_arr = array();			//$unique_arr[PAYPAL_ID]=$paypal_id;			//$unique_arr[PAYPAL_TXN_ID]=$paypal_txn_id;			//$unique_arr[PAYPAL_TXN_AMNT]=$paypal_txn_amnt;			//$unique_arr[PAYPAL_PAYMENT_ID]=$paypal_payment_id;			//$unique_arr[PAYPAL_REFUND_TYPE]=$paypal_refund_type;			//$unique_arr[PAYPAL_REFUND_COMPLETE]=$paypal_refund_complete;			//$unique_arr[PAYPAL_START_DATE]=$paypal_start_date;			//$unique_arr[PAYPAL_END_DATE]=$paypal_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($paypal_txn_id ,$paypal_txn_amnt ,$paypal_payment_id ,$paypal_refund_type ,$paypal_refund_complete ,$paypal_start_date ,$paypal_end_date) {		if(is_not_empty($paypal_txn_id)){			if($this->isAlreadyThere($paypal_txn_id ,$paypal_txn_amnt ,$paypal_payment_id ,$paypal_refund_type ,$paypal_refund_complete ,$paypal_start_date ,$paypal_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setpaypal_id("");				$this->setpaypal_txn_id($paypal_txn_id);				$this->setpaypal_txn_amnt($paypal_txn_amnt);				$this->setpaypal_payment_id($paypal_payment_id);				$this->setpaypal_refund_type($paypal_refund_type);				$this->setpaypal_refund_complete($paypal_refund_complete);				$this->setpaypal_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getpaypal_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($paypal_id, $paypal_txn_id, $paypal_txn_amnt, $paypal_payment_id, $paypal_refund_type, $paypal_refund_complete, $paypal_start_date, $paypal_end_date) {		if(is_gt_zero_num($paypal_id)){			if ($this->readObject(array(PAYPAL_ID=>$paypal_id))){				$this->setpaypal_txn_id($paypal_txn_id);				$this->setpaypal_txn_amnt($paypal_txn_amnt);				$this->setpaypal_payment_id($paypal_payment_id);				$this->setpaypal_refund_type($paypal_refund_type);				$this->setpaypal_refund_complete($paypal_refund_complete);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($paypal_id){		if(is_gt_zero_num($paypal_id)){			if ($this->readObject(array(PAYPAL_ID=>$paypal_id))){				$qry  = "UPDATE ".TBL_ORD_PAYPAL_TRANS.RET."SET".RET."			".TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".PAYPAL_ID."={$paypal_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($paypal_id){		if(is_gt_zero_num($paypal_id)){			if ($this->readObject(array(PAYPAL_ID=>$paypal_id))){				$qry  = "UPDATE ".TBL_ORD_PAYPAL_TRANS.RET."SET".RET."			".TBL_ORD_PAYPAL_TRANS_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".PAYPAL_ID."={$paypal_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($paypal_id) {		$info = array();		if($paypal_id != ""){			$obj_tbl_ord_paypal_trans = new tbl_ord_paypal_trans();			if($obj_tbl_ord_paypal_trans->readObject(array("paypal_id"=>$paypal_id))){				$info["paypal_id"]=$obj_tbl_ord_paypal_trans->getpaypal_id();				$info["paypal_txn_id"]=$obj_tbl_ord_paypal_trans->getpaypal_txn_id();				$info["paypal_txn_amnt"]=$obj_tbl_ord_paypal_trans->getpaypal_txn_amnt();				$info["paypal_payment_id"]=$obj_tbl_ord_paypal_trans->getpaypal_payment_id();				$info["paypal_refund_type"]=$obj_tbl_ord_paypal_trans->getpaypal_refund_type();				$info["paypal_refund_complete"]=$obj_tbl_ord_paypal_trans->getpaypal_refund_complete();				$info["paypal_start_date"]=$obj_tbl_ord_paypal_trans->getpaypal_start_date();				$info["paypal_end_date"]=$obj_tbl_ord_paypal_trans->getpaypal_end_date();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_ord_paypal_trans->gettbl_ord_paypal_trans_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_ord_paypal_trans->gettbl_ord_paypal_trans_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_ord_paypal_trans->gettbl_ord_paypal_trans_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_ord_paypal_trans);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_ord_paypal_trans_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_ORD_PAYPAL_TRANS."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_ord_paypal_trans_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields}//..End tbl_ord_paypal_trans?>