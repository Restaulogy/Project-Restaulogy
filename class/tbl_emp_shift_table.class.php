<?php/**********************************************************************tbl_emp_shift_table.class.phpGenerated by STRUCTY 2013.09.26 06:16:52.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_EMP_SHIFT_TABLE", "tbl_emp_shift_table"); define('EMP_SFT_TBL_ID', 'emp_sft_tbl_id'); define('EMP_SFT_TBL_EMPLOYEESHIFT', 'emp_sft_tbl_employeeshift'); define('EMP_SFT_TBL_TABLE', 'emp_sft_tbl_table'); define('EMP_SFT_TBL_ISTRANSFER', 'emp_sft_tbl_istransfer'); define('EMP_SFT_TBL_START_TIME', 'emp_sft_tbl_start_time'); define('EMP_SFT_TBL_END_TIME', 'emp_sft_tbl_end_time'); define("TBL_EMP_SHIFT_TABLE_ACTIVE_DATE",  "");define("TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE",  "");$tbl_emp_shift_table_active_condition= " (".TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE." is NULL OR ".TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE." = 0 OR ".TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE." > CURDATE( )) ";class tbl_emp_shift_table {	private $emp_sft_tbl_id;	private $emp_sft_tbl_employeeshift;	private $emp_sft_tbl_table;	private $emp_sft_tbl_istransfer;	private $emp_sft_tbl_start_time;	private $emp_sft_tbl_end_time;	private $tbl_emp_shift_table_active_date;	private $tbl_emp_shift_table_deactive_date;	public function setemp_sft_tbl_id($pArg="0") {$this->emp_sft_tbl_id=$pArg;}	public function setemp_sft_tbl_employeeshift($pArg="0") {$this->emp_sft_tbl_employeeshift=$pArg;}	public function setemp_sft_tbl_table($pArg="0") {$this->emp_sft_tbl_table=$pArg;}	public function setemp_sft_tbl_istransfer($pArg="0") {$this->emp_sft_tbl_istransfer=$pArg;}	public function setemp_sft_tbl_start_time($pArg="0") {$this->emp_sft_tbl_start_time=$pArg;}	public function setemp_sft_tbl_end_time($pArg="0") {$this->emp_sft_tbl_end_time=$pArg;}	public function settbl_emp_shift_table_active_date($pArg="0") {$this->tbl_emp_shift_table_active_date=$pArg;}	public function settbl_emp_shift_table_deactive_date($pArg="0") {$this->tbl_emp_shift_table_deactive_date=$pArg;}	public function getemp_sft_tbl_id() {return $this->emp_sft_tbl_id;}	public function getemp_sft_tbl_employeeshift() {return $this->emp_sft_tbl_employeeshift;}	public function getemp_sft_tbl_table() {return $this->emp_sft_tbl_table;}	public function getemp_sft_tbl_istransfer() {return $this->emp_sft_tbl_istransfer;}	public function getemp_sft_tbl_start_time() {return $this->emp_sft_tbl_start_time;}	public function getemp_sft_tbl_end_time() {return $this->emp_sft_tbl_end_time;}	public function gettbl_emp_shift_table_active_date($pArg="0") {return $this->tbl_emp_shift_table_active_date;}	public function gettbl_emp_shift_table_deactive_date($pArg="0") {return $this->tbl_emp_shift_table_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_EMP_SHIFT_TABLE.RET;		$and = "WHERE".RET;		if($array[EMP_SFT_TBL_ID] != "") {			$qry .= $and.EMP_SFT_TBL_ID." = '".$array[EMP_SFT_TBL_ID]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_EMPLOYEESHIFT] != "") {			$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." = '".$array[EMP_SFT_TBL_EMPLOYEESHIFT]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_TABLE] != "") {			$qry .= $and.EMP_SFT_TBL_TABLE." = '".$array[EMP_SFT_TBL_TABLE]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_ISTRANSFER] != "") {			$qry .= $and.EMP_SFT_TBL_ISTRANSFER." = '".$array[EMP_SFT_TBL_ISTRANSFER]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_START_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_START_TIME." = '".$array[EMP_SFT_TBL_START_TIME]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_END_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_END_TIME." = '".$array[EMP_SFT_TBL_END_TIME]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setemp_sft_tbl_id($record[EMP_SFT_TBL_ID]);				$this->setemp_sft_tbl_employeeshift($record[EMP_SFT_TBL_EMPLOYEESHIFT]);				$this->setemp_sft_tbl_table($record[EMP_SFT_TBL_TABLE]);				$this->setemp_sft_tbl_istransfer($record[EMP_SFT_TBL_ISTRANSFER]);				$this->setemp_sft_tbl_start_time($record[EMP_SFT_TBL_START_TIME]);				$this->setemp_sft_tbl_end_time($record[EMP_SFT_TBL_END_TIME]);				$this->settbl_emp_shift_table_active_date($record[TBL_EMP_SHIFT_TABLE_ACTIVE_DATE]);				$this->settbl_emp_shift_table_deactive_date($record[TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1,$get_live_only=0) {		global $tbl_emp_shift_table_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_EMP_SHIFT_TABLE.RET;		$and = "WHERE".RET;		if($array[EMP_SFT_TBL_ID] != "") {			$qry .= $and.EMP_SFT_TBL_ID." = '".$array[EMP_SFT_TBL_ID]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_EMPLOYEESHIFT] != "") {			$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." = '".$array[EMP_SFT_TBL_EMPLOYEESHIFT]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_TABLE] != "") {			$qry .= $and.EMP_SFT_TBL_TABLE." = '".$array[EMP_SFT_TBL_TABLE]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_ISTRANSFER] != "") {			$qry .= $and.EMP_SFT_TBL_ISTRANSFER." = '".$array[EMP_SFT_TBL_ISTRANSFER]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_START_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_START_TIME." = '".$array[EMP_SFT_TBL_START_TIME]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_END_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_END_TIME." = '".$array[EMP_SFT_TBL_END_TIME]."'".RET;			$and = "AND".RET;		}				if($get_live_only==1){			$qry .= $and.EMP_SFT_TBL_START_TIME." <= '".date("H:i:s")."' AND ".EMP_SFT_TBL_END_TIME.">= '".date("H:i:s")."'".RET;			$and = "AND".RET;					}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_emp_shift_table_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["emp_sft_tbl_id"]=$record[EMP_SFT_TBL_ID];					$class_object["emp_sft_tbl_employeeshift"]=$record[EMP_SFT_TBL_EMPLOYEESHIFT];					$class_object["emp_sft_tbl_table"]=$record[EMP_SFT_TBL_TABLE];					$class_object["emp_sft_tbl_istransfer"]=$record[EMP_SFT_TBL_ISTRANSFER];					$class_object["emp_sft_tbl_start_time"]=$record[EMP_SFT_TBL_START_TIME];					$class_object["emp_sft_tbl_end_time"]=$record[EMP_SFT_TBL_END_TIME];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_emp_shift_table();					$class_object->setemp_sft_tbl_id($record[EMP_SFT_TBL_ID]);					$class_object->setemp_sft_tbl_employeeshift($record[EMP_SFT_TBL_EMPLOYEESHIFT]);					$class_object->setemp_sft_tbl_table($record[EMP_SFT_TBL_TABLE]);					$class_object->setemp_sft_tbl_istransfer($record[EMP_SFT_TBL_ISTRANSFER]);					$class_object->setemp_sft_tbl_start_time($record[EMP_SFT_TBL_START_TIME]);					$class_object->setemp_sft_tbl_end_time($record[EMP_SFT_TBL_END_TIME]);				}				$class_objects[$record[EMP_SFT_TBL_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getemp_sft_tbl_id() != '') {			$qry  = "UPDATE ".TBL_EMP_SHIFT_TABLE.RET."SET".RET."			".EMP_SFT_TBL_ID." = '".$this->getemp_sft_tbl_id()."',".RET."			".EMP_SFT_TBL_EMPLOYEESHIFT." = '".$this->getemp_sft_tbl_employeeshift()."',".RET."			".EMP_SFT_TBL_TABLE." = '".$this->getemp_sft_tbl_table()."',".RET."			".EMP_SFT_TBL_ISTRANSFER." = '".$this->getemp_sft_tbl_istransfer()."',".RET."			".EMP_SFT_TBL_START_TIME." = '".$this->getemp_sft_tbl_start_time()."',".RET."			".EMP_SFT_TBL_END_TIME." = '".$this->getemp_sft_tbl_end_time()."'".RET.			"WHERE ".EMP_SFT_TBL_ID." = ".$this->getemp_sft_tbl_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_EMP_SHIFT_TABLE." (".RET.			"".EMP_SFT_TBL_EMPLOYEESHIFT.", ".EMP_SFT_TBL_TABLE.", ".EMP_SFT_TBL_ISTRANSFER.", ".EMP_SFT_TBL_START_TIME.", ".EMP_SFT_TBL_END_TIME.RET.				") VALUES (".RET.			"'".$this->getemp_sft_tbl_employeeshift()."',".RET.			"'".$this->getemp_sft_tbl_table()."',".RET.			"'".$this->getemp_sft_tbl_istransfer()."',".RET.			"'".$this->getemp_sft_tbl_start_time()."',".RET.			"'".$this->getemp_sft_tbl_end_time()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setemp_sft_tbl_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_EMP_SHIFT_TABLE.RET;		$and = "WHERE".RET;		if($array[EMP_SFT_TBL_ID] != "") {			$qry .= $and.EMP_SFT_TBL_ID." = '".$array[EMP_SFT_TBL_ID]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_EMPLOYEESHIFT] != "") {			$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." IN (".$array[EMP_SFT_TBL_EMPLOYEESHIFT].")".RET;			$and = "AND".RET;		}				if(is_not_empty($array[EMP_SFT_DATE])) { 			$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." IN (SELECT ".EMP_SFT_ID." FROM ".TBL_EMP_SHIFT_ASSIGNMENT." WHERE ".EMP_SFT_DATE." ='".$array[EMP_SFT_DATE]."' AND ".chkShiftInRestaurant(EMP_SFT_SHIFT)." )".RET;			$and = "AND".RET;		}				/*if(is_not_empty($array[SES_RESTAURANT])) { 			$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." IN  (SELECT ".EMP_SFT_ID." FROM ".TBL_SHIFT." WHERE ".SHIFT_RESTAURENT." ='".$array[SES_RESTAURANT]."' AND ".chkShiftInRestaurant(EMP_SFT_SHIFT)." )".RET;			$and = "AND".RET;		}*/				if(is_not_empty($array['newer_only'])) { 			if(is_gt_zero_num($array['newer_only'])){				$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." IN  (SELECT ".EMP_SFT_ID." FROM ".TBL_EMP_SHIFT_ASSIGNMENT." WHERE ".EMP_SFT_DATE." > CURDATE() )".RET;			$and = "AND".RET;			}else{				/*$qry .= $and.EMP_SFT_TBL_EMPLOYEESHIFT." IN  (SELECT ".EMP_SFT_ID." FROM ".TBL_EMP_SHIFT_ASSIGNMENT." WHERE ".EMP_SFT_DATE." < CURDATE() )".RET;			$and = "AND".RET;*/			}		}				if($array[EMP_SFT_TBL_TABLE] != "") {			$qry .= $and.EMP_SFT_TBL_TABLE." IN (".$array[EMP_SFT_TBL_TABLE].") ".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_ISTRANSFER] != "") {			$qry .= $and.EMP_SFT_TBL_ISTRANSFER." = '".$array[EMP_SFT_TBL_ISTRANSFER]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_START_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_START_TIME." = '".$array[EMP_SFT_TBL_START_TIME]."'".RET;			$and = "AND".RET;		}		if($array[EMP_SFT_TBL_END_TIME] != "") {			$qry .= $and.EMP_SFT_TBL_END_TIME." = '".$array[EMP_SFT_TBL_END_TIME]."'".RET;			$and = "AND".RET;		}		 		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		} 		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($emp_sft_tbl_employeeshift ,$emp_sft_tbl_table ,$emp_sft_tbl_istransfer ,$emp_sft_tbl_start_time ,$emp_sft_tbl_end_time) {		$unique_arr = array();			//$unique_arr[EMP_SFT_TBL_ID]=$emp_sft_tbl_id;			//$unique_arr[EMP_SFT_TBL_EMPLOYEESHIFT]=$emp_sft_tbl_employeeshift;			//$unique_arr[EMP_SFT_TBL_TABLE]=$emp_sft_tbl_table;			//$unique_arr[EMP_SFT_TBL_ISTRANSFER]=$emp_sft_tbl_istransfer;			//$unique_arr[EMP_SFT_TBL_START_TIME]=$emp_sft_tbl_start_time;			//$unique_arr[EMP_SFT_TBL_END_TIME]=$emp_sft_tbl_end_time;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($emp_sft_tbl_employeeshift ,$emp_sft_tbl_table ,$emp_sft_tbl_istransfer ,$emp_sft_tbl_start_time ,$emp_sft_tbl_end_time) {		if(is_not_empty($emp_sft_tbl_employeeshift)){			if($this->isAlreadyThere($emp_sft_tbl_employeeshift ,$emp_sft_tbl_table ,$emp_sft_tbl_istransfer ,$emp_sft_tbl_start_time ,$emp_sft_tbl_end_time)){				return OPERATION_DUPLICATE;			}else{				$this->setemp_sft_tbl_id("");				$this->setemp_sft_tbl_employeeshift($emp_sft_tbl_employeeshift);				$this->setemp_sft_tbl_table($emp_sft_tbl_table);				$this->setemp_sft_tbl_istransfer($emp_sft_tbl_istransfer);				$this->setemp_sft_tbl_start_time($emp_sft_tbl_start_time);				$this->setemp_sft_tbl_end_time($emp_sft_tbl_end_time);				$this->insert();				return $this->getemp_sft_tbl_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($emp_sft_tbl_id, $emp_sft_tbl_employeeshift, $emp_sft_tbl_table, $emp_sft_tbl_istransfer, $emp_sft_tbl_start_time, $emp_sft_tbl_end_time) {		if(is_gt_zero_num($emp_sft_tbl_id)){			if ($this->readObject(array(EMP_SFT_TBL_ID=>$emp_sft_tbl_id))){				$this->setemp_sft_tbl_employeeshift($emp_sft_tbl_employeeshift);				$this->setemp_sft_tbl_table($emp_sft_tbl_table);				$this->setemp_sft_tbl_istransfer($emp_sft_tbl_istransfer);				$this->setemp_sft_tbl_start_time($emp_sft_tbl_start_time);				$this->setemp_sft_tbl_end_time($emp_sft_tbl_end_time);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($emp_sft_tbl_id){		if(is_gt_zero_num($emp_sft_tbl_id)){			if ($this->readObject(array(EMP_SFT_TBL_ID=>$emp_sft_tbl_id))){				$qry  = "UPDATE ".TBL_EMP_SHIFT_TABLE.RET."SET".RET."			".TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".EMP_SFT_TBL_ID."={$emp_sft_tbl_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($emp_sft_tbl_id){		if(is_gt_zero_num($emp_sft_tbl_id)){			if ($this->readObject(array(EMP_SFT_TBL_ID=>$emp_sft_tbl_id))){				$qry  = "UPDATE ".TBL_EMP_SHIFT_TABLE.RET."SET".RET."			".TBL_EMP_SHIFT_TABLE_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".EMP_SFT_TBL_ID."={$emp_sft_tbl_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($emp_sft_tbl_id) {		$info = array();		if($emp_sft_tbl_id != ""){			$obj_tbl_emp_shift_table = new tbl_emp_shift_table();			if($obj_tbl_emp_shift_table->readObject(array("emp_sft_tbl_id"=>$emp_sft_tbl_id))){				$info["emp_sft_tbl_id"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_id();				$info["emp_sft_tbl_employeeshift"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_employeeshift();				$info["emp_sft_tbl_table"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_table();				$info["emp_sft_tbl_istransfer"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_istransfer();				$info["emp_sft_tbl_start_time"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_start_time();				$info["emp_sft_tbl_end_time"]=$obj_tbl_emp_shift_table->getemp_sft_tbl_end_time();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_emp_shift_table->gettbl_emp_shift_table_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_emp_shift_table->gettbl_emp_shift_table_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_emp_shift_table->gettbl_emp_shift_table_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_emp_shift_table);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_emp_shift_table_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_EMP_SHIFT_TABLE."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_emp_shift_table_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields	/*** Insert all the given tables for the particular employee shift * @param int $emp_sft_id* @param string $emp_sft_tables* @param int $istransfer* @param time $starttime* @param time $endtime*/public static function bulk_insert($emp_sft_id,$emp_sft_tables='',$istransfer=0,$starttime='',$endtime=''){	  $isSuccess = OPERATION_FAIL;			if(is_gt_zero_num($emp_sft_id)){  		 //..get info of emp_shift		 if($istransfer == 0){		 	 self::delete(array(EMP_SFT_TBL_EMPLOYEESHIFT=>$emp_sft_id));		 }		 		 if(is_not_empty($emp_sft_tables)){  		 		 $emp_shift_info = tbl_emp_shift_assignment::GetInfo($emp_sft_id);		if($istransfer){			$starttime = set_value($starttime,date(TIME_FORMAT));		}	  $shift_start_time = set_value($starttime,$emp_shift_info['shift_start_time']);   		$shift_end_time = set_value($endtime,$emp_shift_info['shift_end_time']);		 		  //.. array of inputed table 		  $ins_tbl = biz_explode(',',$emp_sft_tables);  			$ins_tbl = array_unique($ins_tbl);  			if(is_not_empty($ins_tbl)){ 				foreach($ins_tbl as $tbl){ 				$x = self::isTableAlreadyInTime($tbl,$emp_sft_id); 				 						if (is_gt_zero_num($x)){ 							$isSuccess = OPERATION_DUPLICATE;							}else{ 							$sql_prms[] = '('.$emp_sft_id.','.$tbl.','.$istransfer.',\''.$shift_start_time.'\',\''.$shift_end_time.'\' )';							}						  				} 				if(is_not_empty($sql_prms)){ 					$isSuccess =	DB::ExecNonQry('INSERT INTO '.TBL_EMP_SHIFT_TABLE.' ('.EMP_SFT_TBL_EMPLOYEESHIFT.','.EMP_SFT_TBL_TABLE.','.EMP_SFT_TBL_ISTRANSFER.','.EMP_SFT_TBL_START_TIME.','.EMP_SFT_TBL_END_TIME.') VALUES '.biz_implode(',',$sql_prms).';');  				} 			} 		 }else{		 	 return OPERATION_SUCCESS;		 }	 		} 		 return $isSuccess;	}	 	/*			public static function bulk_insert($emp_sft_id,$emp_sft_tables,$istransfer=0,$starttime='',$endtime=''){		if(is_gt_zero_num($emp_sft_id) && is_not_empty($emp_sft_tables)){  		 //..get info of emp_shift		 $emp_shift_info = tbl_emp_shift_assignment::GetInfo($emp_sft_id);		if($istransfer){			$starttime = set_value($starttime,date(TIME_FORMAT));		}	  $shift_start_time = set_value($starttime,$emp_shift_info['shift_start_time']);   		$shift_end_time = set_value($endtime,$emp_shift_info['shift_end_time']);		 //..get emp_previous table		 $emp_prev_table = 	DB::ExecScalarQry('SELECT GROUP_CONCAT('.EMP_SFT_TBL_TABLE.') FROM '.TBL_EMP_SHIFT_TABLE.' WHERE '.EMP_SFT_TBL_EMPLOYEESHIFT.'='.$emp_sft_id); 		  //.. array of inputed table 		  $tbl_arr = biz_explode(',',$emp_sft_tables);						$ins_tbl = array(); //..for inserting the tables from record 			$dlt_tbl = array(); //..for delete the tables from record 		  if(is_not_empty($emp_prev_table)){				$tbl_prev_arr = biz_explode(',',$emp_prev_table);	  		 				//.get the difference between the inputed and previous array 				$arr_diff = biz_array_diff($tbl_arr,$tbl_prev_arr); 			 				if(is_not_empty($arr_diff)){					//..now for the inserting tables get the difference between previous array and the current different array  					$ins_tbl = biz_array_diff($arr_diff,$tbl_prev_arr); 					//..now for the deleting tables get the difference between inputed array and the current different array 					$dlt_tbl = biz_array_diff($arr_diff,$tbl_arr);				} 			}else{				$ins_tbl = $tbl_arr;			} 						$ins_tbl = array_unique($ins_tbl);  			if(is_not_empty($ins_tbl)){ 				foreach($ins_tbl as $tbl){ 						$sql_cond[] = '('.$emp_sft_id.','.$tbl.','.$istransfer.',\''.$shift_start_time.'\',\''.$shift_end_time.'\' )';	 									}				if(is_not_empty($sql_cond)){					 					DB::ExecNonQry('INSERT INTO '.TBL_EMP_SHIFT_TABLE.' ('.EMP_SFT_TBL_EMPLOYEESHIFT.','.EMP_SFT_TBL_TABLE.','.EMP_SFT_TBL_ISTRANSFER.','.EMP_SFT_TBL_START_TIME.','.EMP_SFT_TBL_END_TIME.') VALUES '.biz_implode(',',$sql_cond).';');  				} 			}  			 //if(is_not_empty($dlt_tbl)){  			//	 DB::ExecNonQry('DELETE FROM '.TBL_EMP_SHIFT_TABLE.' WHERE  '.EMP_SFT_TBL_EMPLOYEESHIFT.' = '.$emp_sft_id.' AND '.EMP_SFT_TBL_TABLE.' in ('.biz_implode(',',$dlt_tbl).');');			//} 			return OPERATION_SUCCESS;		} 		return OPERATION_FAIL; 	 	}*/	 	/**	* Update the end time of last emp_shift with current time.	* @param int $lst_emp_shift	* @param time $end_time	* @param int $tbl_id 	*/ 	public static function updtEndTimeofLstEmpSft($lst_emp_shift,$end_time='',$tbl_id=0){		 if(is_gt_zero_num($lst_emp_shift)){ 		  $sql_cond = (is_gt_zero_num($tbl_id)?' AND '.EMP_SFT_TBL_TABLE.'='.$tbl_id:'');			$end_time = set_value($end_time,date(TIME_FORMAT)); 		 	return DB::ExecNonQry('			UPDATE 					'.TBL_EMP_SHIFT_TABLE.' 			SET 					'.EMP_SFT_TBL_END_TIME.'= \''.$end_time.'\'			WHERE 					'.EMP_SFT_TBL_EMPLOYEESHIFT.'='.$lst_emp_shift.' 					AND `'.EMP_SFT_TBL_START_TIME.'` <= \''.date(TIME_FORMAT).'\' 					AND `'.EMP_SFT_TBL_END_TIME.'` >= \''.date(TIME_FORMAT).'\' 					'.$sql_cond ) ;		 } 		 return OPERATION_FAIL;	}		public static function isTableAlreadyInTime($tbl_id,$emp_shift_id){	$q = 'SELECT COUNT('.EMP_SFT_TBL_ID.') 				FROM '.TBL_EMP_SHIFT_TABLE.' 				INNER JOIN `'.TBL_EMP_SHIFT_ASSIGNMENT.'`				ON `'.TBL_EMP_SHIFT_ASSIGNMENT.'`.`'.EMP_SFT_ID.'`=`'.TBL_EMP_SHIFT_TABLE.'`.`'.EMP_SFT_TBL_EMPLOYEESHIFT.'`				INNER JOIN `'.TBL_SHIFT.'`				ON `'.TBL_SHIFT.'`.`'.SHIFT_ID.'`=`'.TBL_EMP_SHIFT_ASSIGNMENT.'`.`'.EMP_SFT_SHIFT.'` 			 	WHERE `'.EMP_SFT_SHIFT.'`= (SELECT '.EMP_SFT_SHIFT.' FROM  '.TBL_EMP_SHIFT_ASSIGNMENT.' WHERE '.EMP_SFT_ID.'='.$emp_shift_id.')  				AND `'.EMP_SFT_DATE.'`= (SELECT '.EMP_SFT_DATE.' FROM  '.TBL_EMP_SHIFT_ASSIGNMENT.' WHERE '.EMP_SFT_ID.'='.$emp_shift_id.') 			 	AND `'.EMP_SFT_TBL_TABLE.'`='.$tbl_id.' 			 	AND `'.EMP_SFT_TBL_END_TIME.'` = `'.SHIFT_END_TIME.'`'; 			 return  DB::ExecScalarQry($q);	}	 	  /**	* Get only live tables list from the Employee shift tables	* @param int $empshiftid	* @return array	*/	public static function getLiveTablesOnly($empshiftid,$isliveonly=0){			$tbl_lst=array();			if($isliveonly==1){				$qry = "			SELECT GROUP_CONCAT(".EMP_SFT_TBL_TABLE.") as `table_ids`,GROUP_CONCAT(`".TBL_DINING_TABLE."`.`".TABLE_NUMBER."`) as `table_names` FROM ".TBL_EMP_SHIFT_TABLE."			INNER JOIN `".TBL_DINING_TABLE."` 			ON `".TBL_DINING_TABLE."`.`table_id`=`".TBL_EMP_SHIFT_TABLE."`.`emp_sft_tbl_table`			 WHERE `".EMP_SFT_TBL_EMPLOYEESHIFT."`=".$empshiftid." AND `".EMP_SFT_TBL_START_TIME."` <= '".date(TIME_FORMAT)."' AND `".EMP_SFT_TBL_END_TIME."` >= '".date(TIME_FORMAT)."'";			}else{				$qry = "			SELECT GROUP_CONCAT(".EMP_SFT_TBL_TABLE.") as `table_ids`,GROUP_CONCAT(`".TBL_DINING_TABLE."`.`".TABLE_NUMBER."`) as `table_names` FROM ".TBL_EMP_SHIFT_TABLE."			INNER JOIN `".TBL_DINING_TABLE."` 			ON `".TBL_DINING_TABLE."`.`table_id`=`".TBL_EMP_SHIFT_TABLE."`.`emp_sft_tbl_table`			INNER JOIN `".TBL_EMP_SHIFT_ASSIGNMENT."`			ON `".TBL_EMP_SHIFT_ASSIGNMENT."`.`".EMP_SFT_ID."`=`".TBL_EMP_SHIFT_TABLE."`.`".EMP_SFT_TBL_EMPLOYEESHIFT."`			INNER JOIN `".TBL_SHIFT."`			ON `".TBL_SHIFT."`.`".SHIFT_ID."`=`".TBL_EMP_SHIFT_ASSIGNMENT."`.`".EMP_SFT_SHIFT."` 			 WHERE `".EMP_SFT_TBL_EMPLOYEESHIFT."`=".$empshiftid."  AND `".EMP_SFT_TBL_END_TIME."` = `".SHIFT_END_TIME."`  ";			}			// echo '<hr>'.$qry;			$result = mysql_query($qry);			if (($result)&&(mysql_num_rows($result)> 0)){				   while ($row = mysql_fetch_assoc($result)) {				   $tbl_lst['table_ids']= $row['table_ids'];					 $tbl_lst['table_names']= $row['table_names']; 				}			}			return $tbl_lst;			}	 	/**	* Get only old tables list from the Employee shift tables	* @param int $empshiftid	* @return array	*/	/*public static function getOldTables($empshiftid){			$tbl_lst=array();			$qry = "			SELECT GROUP_CONCAT(".EMP_SFT_TBL_TABLE.") as `table_ids`,GROUP_CONCAT(`".TBL_DINING_TABLE."`.`".TABLE_NUMBER."`) as `table_names` FROM ".TBL_EMP_SHIFT_TABLE."			INNER JOIN `".TBL_DINING_TABLE."` 			ON `".TBL_DINING_TABLE."`.`table_id`=`".TBL_EMP_SHIFT_TABLE."`.`emp_sft_tbl_table`			 WHERE `".EMP_SFT_TBL_EMPLOYEESHIFT."`=".$empshiftid." ORDER BY `".EMP_SFT_TBL_ID."` DESC LIMIT 1";			$result = mysql_query($qry);			if (($result)&&(mysql_num_rows($result)> 0)){				   while ($row = mysql_fetch_assoc($result)) {				   $tbl_lst['table_ids']= $row['table_ids'];					 $tbl_lst['table_names']= $row['table_names']; 				}			}			return $tbl_lst;			}*/		}//..End tbl_emp_shift_table?>