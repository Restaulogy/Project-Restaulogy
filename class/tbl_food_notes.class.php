<?php/**********************************************************************tbl_food_notes.class.phpGenerated by STRUCTY 2014.06.23 07:40:12.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_FOOD_NOTES", "tbl_food_notes"); define('FDNOTE_ID', 'fdnote_id'); define('FDNOTE_NUMBER', 'fdnote_number'); define('FDNOTE_DESC', 'fdnote_desc'); define('FDNOTE_RESTARANT', 'fdnote_restarant'); define('FDNOTE_START_DATE', 'fdnote_start_date'); define('FDNOTE_END_DATE', 'fdnote_end_date'); define("TBL_FOOD_NOTES_ACTIVE_DATE",  FDNOTE_START_DATE);define("TBL_FOOD_NOTES_DEACTIVE_DATE",  FDNOTE_END_DATE);$tbl_food_notes_active_condition= " (".TBL_FOOD_NOTES_DEACTIVE_DATE." is NULL OR ".TBL_FOOD_NOTES_DEACTIVE_DATE." = 0 OR ".TBL_FOOD_NOTES_DEACTIVE_DATE." > CURDATE( )) ";class tbl_food_notes {	private $fdnote_id;	private $fdnote_number;	private $fdnote_desc;	private $fdnote_restarant;		private $fdnote_start_date;	private $fdnote_end_date;	private $tbl_food_notes_active_date;	private $tbl_food_notes_deactive_date;	public function setfdnote_id($pArg="0") {$this->fdnote_id=$pArg;}	public function setfdnote_number($pArg="0") {$this->fdnote_number=$pArg;}	public function setfdnote_desc($pArg="0") {$this->fdnote_desc=$pArg;}		public function setfdnote_restarant($pArg="0") {$this->fdnote_restarant=$pArg;}		public function setfdnote_start_date($pArg="0") {$this->fdnote_start_date=$pArg;}	public function setfdnote_end_date($pArg="0") {$this->fdnote_end_date=$pArg;}	public function settbl_food_notes_active_date($pArg="0") {$this->tbl_food_notes_active_date=$pArg;}	public function settbl_food_notes_deactive_date($pArg="0") {$this->tbl_food_notes_deactive_date=$pArg;}	public function getfdnote_id() {return $this->fdnote_id;}	public function getfdnote_number() {return $this->fdnote_number;}	public function getfdnote_desc() {return $this->fdnote_desc;}		public function getfdnote_restarant() {return $this->fdnote_restarant;}		public function getfdnote_start_date() {return $this->fdnote_start_date;}	public function getfdnote_end_date() {return $this->fdnote_end_date;}	public function gettbl_food_notes_active_date($pArg="0") {return $this->tbl_food_notes_active_date;}	public function gettbl_food_notes_deactive_date($pArg="0") {return $this->tbl_food_notes_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_FOOD_NOTES.RET;		$and = "WHERE".RET;		if($array[FDNOTE_ID] != "") {			$qry .= $and.FDNOTE_ID." = '".$array[FDNOTE_ID]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_NUMBER] != "") {			$qry .= $and.FDNOTE_NUMBER." = '".$array[FDNOTE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_DESC] != "") {			$qry .= $and.FDNOTE_DESC." = '".$array[FDNOTE_DESC]."'".RET;			$and = "AND".RET;		}				if($array[FDNOTE_RESTARANT] != "") {			$qry .= $and."(".FDNOTE_RESTARANT." = '".$array[FDNOTE_RESTARANT]."' OR ".FDNOTE_RESTARANT." IS NULL) ".RET;			$and = "AND".RET;		}		if($array[FDNOTE_START_DATE] != "") {			$qry .= $and.FDNOTE_START_DATE." = '".$array[FDNOTE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_END_DATE] != "") {			$qry .= $and.FDNOTE_END_DATE." = '".$array[FDNOTE_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setfdnote_id($record[FDNOTE_ID]);				$this->setfdnote_number($record[FDNOTE_NUMBER]);				$this->setfdnote_desc($record[FDNOTE_DESC]);								$this->setfdnote_restarant($record[FDNOTE_RESTARANT]);								$this->setfdnote_start_date($record[FDNOTE_START_DATE]);				$this->setfdnote_end_date($record[FDNOTE_END_DATE]);				$this->settbl_food_notes_active_date($record[TBL_FOOD_NOTES_ACTIVE_DATE]);				$this->settbl_food_notes_deactive_date($record[TBL_FOOD_NOTES_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_food_notes_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_FOOD_NOTES.RET;		$and = "WHERE".RET;		if($array[FDNOTE_ID] != "") {			$qry .= $and.FDNOTE_ID." = '".$array[FDNOTE_ID]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_NUMBER] != "") {			$qry .= $and.FDNOTE_NUMBER." = '".$array[FDNOTE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_DESC] != "") {			$qry .= $and.FDNOTE_DESC." = '".$array[FDNOTE_DESC]."'".RET;			$and = "AND".RET;		}				if($array[FDNOTE_RESTARANT] != "") {			$qry .= $and."(".FDNOTE_RESTARANT." = '".$array[FDNOTE_RESTARANT]."' OR ".FDNOTE_RESTARANT." IS NULL) ".RET;			$and = "AND".RET;		}		if($array[FDNOTE_START_DATE] != "") {			$qry .= $and.FDNOTE_START_DATE." = '".$array[FDNOTE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_END_DATE] != "") {			$qry .= $and.FDNOTE_END_DATE." = '".$array[FDNOTE_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_food_notes_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_FOOD_NOTES_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_FOOD_NOTES_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_FOOD_NOTES_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["fdnote_id"]=$record[FDNOTE_ID];					$class_object["fdnote_number"]=$record[FDNOTE_NUMBER];					$class_object["fdnote_desc"]=$record[FDNOTE_DESC];										$class_object["fdnote_restarant"]=$record[FDNOTE_RESTARANT];										$class_object["fdnote_start_date"]=$record[FDNOTE_START_DATE];					$class_object["fdnote_end_date"]=$record[FDNOTE_END_DATE];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_food_notes();					$class_object->setfdnote_id($record[FDNOTE_ID]);					$class_object->setfdnote_number($record[FDNOTE_NUMBER]);					$class_object->setfdnote_desc($record[FDNOTE_DESC]);										$class_object->setfdnote_restarant($record[FDNOTE_RESTARANT]);										$class_object->setfdnote_start_date($record[FDNOTE_START_DATE]);					$class_object->setfdnote_end_date($record[FDNOTE_END_DATE]);				}				$class_objects[$record[FDNOTE_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getfdnote_id() != '') {			$qry  = "UPDATE ".TBL_FOOD_NOTES.RET."SET".RET."			".FDNOTE_ID." = '".$this->getfdnote_id()."',".RET."			".FDNOTE_NUMBER." = '".$this->getfdnote_number()."',".RET."			".FDNOTE_DESC." = '".$this->getfdnote_desc()."',".RET."						".FDNOTE_RESTARANT." = ".$this->getfdnote_restarant().",".RET."						".FDNOTE_START_DATE." = '".$this->getfdnote_start_date()."',".RET."			".FDNOTE_END_DATE." = '".$this->getfdnote_end_date()."'".RET.			"WHERE ".FDNOTE_ID." = ".$this->getfdnote_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_FOOD_NOTES." (".RET.			"".FDNOTE_NUMBER.", ".FDNOTE_DESC.", ".FDNOTE_RESTARANT.", ".FDNOTE_START_DATE.", ".FDNOTE_END_DATE.RET.				") VALUES (".RET.			"'".$this->getfdnote_number()."',".RET.			"'".$this->getfdnote_desc()."',".RET.						"".$this->getfdnote_restarant().",".RET.						"'".$this->getfdnote_start_date()."',".RET.			"'".$this->getfdnote_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setfdnote_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_FOOD_NOTES.RET;		$and = "WHERE".RET;		if($array[FDNOTE_ID] != "") {			$qry .= $and.FDNOTE_ID." IN (".$array[FDNOTE_ID].")".RET;			$and = "AND".RET;		}		if($array[FDNOTE_NUMBER] != "") {			$qry .= $and.FDNOTE_NUMBER." = '".$array[FDNOTE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_DESC] != "") {			$qry .= $and.FDNOTE_DESC." = '".$array[FDNOTE_DESC]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_START_DATE] != "") {			$qry .= $and.FDNOTE_START_DATE." = '".$array[FDNOTE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FDNOTE_END_DATE] != "") {			$qry .= $and.FDNOTE_END_DATE." = '".$array[FDNOTE_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($fdnote_number ,$fdnote_desc ,$fdnote_start_date ,$fdnote_end_date) {		$unique_arr = array();			//$unique_arr[FDNOTE_ID]=$fdnote_id;			//$unique_arr[FDNOTE_NUMBER]=$fdnote_number;			//$unique_arr[FDNOTE_DESC]=$fdnote_desc;			//$unique_arr[FDNOTE_START_DATE]=$fdnote_start_date;			//$unique_arr[FDNOTE_END_DATE]=$fdnote_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($fdnote_number ,$fdnote_desc ,$fdnote_start_date ,$fdnote_end_date,$fdnote_restarant=NULL) {		if(is_not_empty($fdnote_number)){			if($this->isAlreadyThere($fdnote_number ,$fdnote_desc ,$fdnote_start_date ,$fdnote_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setfdnote_id("");				$this->setfdnote_number($fdnote_number);				$this->setfdnote_desc($fdnote_desc);								$this->setfdnote_restarant($fdnote_restarant);								$this->setfdnote_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getfdnote_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($fdnote_id, $fdnote_number, $fdnote_desc, $fdnote_start_date, $fdnote_end_date,$fdnote_restarant=NULL) {		if(is_gt_zero_num($fdnote_id)){			if ($this->readObject(array(FDNOTE_ID=>$fdnote_id))){				$this->setfdnote_number($fdnote_number);				$this->setfdnote_desc($fdnote_desc);				$this->setfdnote_restarant($fdnote_restarant);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($fdnote_id){		if(is_not_empty($fdnote_id)){			//if ($this->readObject(array(FDNOTE_ID=>$fdnote_id))){				$qry  = "UPDATE ".TBL_FOOD_NOTES.RET."SET".RET."			".TBL_FOOD_NOTES_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".FDNOTE_ID." IN ({$fdnote_id})";							$res = mysql_query($qry);				if($res){					return 1;				}			//}		}		return 0;	}//..end activate	public function deactivate($fdnote_id){		if(is_not_empty($fdnote_id)){			//if ($this->readObject(array(FDNOTE_ID=>$fdnote_id))){				$qry  = "UPDATE ".TBL_FOOD_NOTES.RET."SET".RET."			".TBL_FOOD_NOTES_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".FDNOTE_ID." IN ({$fdnote_id})";				$res = mysql_query($qry);				if($res){					return 1;				}			//}		}		return 0;	}//..end deactivate	public static function GetInfo($fdnote_id) {		$info = array();		if($fdnote_id != ""){			$obj_tbl_food_notes = new tbl_food_notes();			if($obj_tbl_food_notes->readObject(array("fdnote_id"=>$fdnote_id))){				$info["fdnote_id"]=$obj_tbl_food_notes->getfdnote_id();				$info["fdnote_number"]=$obj_tbl_food_notes->getfdnote_number();				$info["fdnote_desc"]=$obj_tbl_food_notes->getfdnote_desc();								$info["fdnote_restarant"]=$obj_tbl_food_notes->getfdnote_restarant();								$info["fdnote_start_date"]=$obj_tbl_food_notes->getfdnote_start_date();				$info["fdnote_end_date"]=$obj_tbl_food_notes->getfdnote_end_date();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_food_notes->gettbl_food_notes_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_food_notes->gettbl_food_notes_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_food_notes->gettbl_food_notes_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_food_notes);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_food_notes_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_FOOD_NOTES."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_food_notes_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields}//..End tbl_food_notes?>