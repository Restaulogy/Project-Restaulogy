<?php/**********************************************************************tbl_food_pairing.class.phpGenerated by STRUCTY 2014.05.14 05:41:48.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_FOOD_PAIRING", "tbl_food_pairing"); define('FOOD_PAIR_ID', 'food_pair_id'); define('FOOD_PAIR_MAIN_DISH', 'food_pair_main_dish'); define('FOOD_PAIR_PAIRED_DISH', 'food_pair_paired_dish'); define('FOOD_PAIR_START_DATE', 'food_pair_start_date'); define('FOOD_PAIR_END_DATE', 'food_pair_end_date'); define("TBL_FOOD_PAIRING_ACTIVE_DATE",  FOOD_PAIR_START_DATE);define("TBL_FOOD_PAIRING_DEACTIVE_DATE",  FOOD_PAIR_END_DATE);$tbl_food_pairing_active_condition= " (".TBL_FOOD_PAIRING_DEACTIVE_DATE." is NULL OR ".TBL_FOOD_PAIRING_DEACTIVE_DATE." = 0 OR ".TBL_FOOD_PAIRING_DEACTIVE_DATE." > CURDATE( )) ";class tbl_food_pairing {	private $food_pair_id;	private $food_pair_main_dish;	private $food_pair_paired_dish;	private $food_pair_start_date;	private $food_pair_end_date;	private $tbl_food_pairing_active_date;	private $tbl_food_pairing_deactive_date;	public function setfood_pair_id($pArg="0") {$this->food_pair_id=$pArg;}	public function setfood_pair_main_dish($pArg="0") {$this->food_pair_main_dish=$pArg;}	public function setfood_pair_paired_dish($pArg="0") {$this->food_pair_paired_dish=$pArg;}	public function setfood_pair_start_date($pArg="0") {$this->food_pair_start_date=$pArg;}	public function setfood_pair_end_date($pArg="0") {$this->food_pair_end_date=$pArg;}	public function settbl_food_pairing_active_date($pArg="0") {$this->tbl_food_pairing_active_date=$pArg;}	public function settbl_food_pairing_deactive_date($pArg="0") {$this->tbl_food_pairing_deactive_date=$pArg;}	public function getfood_pair_id() {return $this->food_pair_id;}	public function getfood_pair_main_dish() {return $this->food_pair_main_dish;}	public function getfood_pair_paired_dish() {return $this->food_pair_paired_dish;}	public function getfood_pair_start_date() {return $this->food_pair_start_date;}	public function getfood_pair_end_date() {return $this->food_pair_end_date;}	public function gettbl_food_pairing_active_date($pArg="0") {return $this->tbl_food_pairing_active_date;}	public function gettbl_food_pairing_deactive_date($pArg="0") {return $this->tbl_food_pairing_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_FOOD_PAIRING.RET;		$and = "WHERE".RET;		if($array[FOOD_PAIR_ID] != "") {			$qry .= $and.FOOD_PAIR_ID." = '".$array[FOOD_PAIR_ID]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_MAIN_DISH] != "") {			$qry .= $and.FOOD_PAIR_MAIN_DISH." = '".$array[FOOD_PAIR_MAIN_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_PAIRED_DISH] != "") {			$qry .= $and.FOOD_PAIR_PAIRED_DISH." = '".$array[FOOD_PAIR_PAIRED_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_START_DATE] != "") {			$qry .= $and.FOOD_PAIR_START_DATE." = '".$array[FOOD_PAIR_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_END_DATE] != "") {			$qry .= $and.FOOD_PAIR_END_DATE." = '".$array[FOOD_PAIR_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setfood_pair_id($record[FOOD_PAIR_ID]);				$this->setfood_pair_main_dish($record[FOOD_PAIR_MAIN_DISH]);				$this->setfood_pair_paired_dish($record[FOOD_PAIR_PAIRED_DISH]);				$this->setfood_pair_start_date($record[FOOD_PAIR_START_DATE]);				$this->setfood_pair_end_date($record[FOOD_PAIR_END_DATE]);				$this->settbl_food_pairing_active_date($record[TBL_FOOD_PAIRING_ACTIVE_DATE]);				$this->settbl_food_pairing_deactive_date($record[TBL_FOOD_PAIRING_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_food_pairing_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_FOOD_PAIRING.RET;		$and = "WHERE".RET;		if($array[FOOD_PAIR_ID] != "") {			$qry .= $and.FOOD_PAIR_ID." = '".$array[FOOD_PAIR_ID]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_MAIN_DISH] != "") {			$qry .= $and.FOOD_PAIR_MAIN_DISH." = '".$array[FOOD_PAIR_MAIN_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_PAIRED_DISH] != "") {			$qry .= $and.FOOD_PAIR_PAIRED_DISH." = '".$array[FOOD_PAIR_PAIRED_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_START_DATE] != "") {			$qry .= $and.FOOD_PAIR_START_DATE." = '".$array[FOOD_PAIR_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_END_DATE] != "") {			$qry .= $and.FOOD_PAIR_END_DATE." = '".$array[FOOD_PAIR_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_food_pairing_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_FOOD_PAIRING_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_FOOD_PAIRING_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_FOOD_PAIRING_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["food_pair_id"]=$record[FOOD_PAIR_ID];					$class_object["food_pair_main_dish"]=$record[FOOD_PAIR_MAIN_DISH];					$class_object["food_pair_paired_dish"]=$record[FOOD_PAIR_PAIRED_DISH];					$class_object["food_pair_paired_dish_details"]=tbl_dishes::GetInfo($record[FOOD_PAIR_PAIRED_DISH]);					$class_object["food_pair_paired_dish_details"]["submenu"] = tbl_submenu_dishes::readArray(array(SBMNU_DISH_DISH=>$record[FOOD_PAIR_PAIRED_DISH]));						$class_object["food_pair_start_date"]=$record[FOOD_PAIR_START_DATE];					$class_object["food_pair_end_date"]=$record[FOOD_PAIR_END_DATE];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_food_pairing();					$class_object->setfood_pair_id($record[FOOD_PAIR_ID]);					$class_object->setfood_pair_main_dish($record[FOOD_PAIR_MAIN_DISH]);					$class_object->setfood_pair_paired_dish($record[FOOD_PAIR_PAIRED_DISH]);					$class_object->setfood_pair_start_date($record[FOOD_PAIR_START_DATE]);					$class_object->setfood_pair_end_date($record[FOOD_PAIR_END_DATE]);				}				$class_objects[$record[FOOD_PAIR_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getfood_pair_id() != '') {			$qry  = "UPDATE ".TBL_FOOD_PAIRING.RET."SET".RET."			".FOOD_PAIR_ID." = '".$this->getfood_pair_id()."',".RET."			".FOOD_PAIR_MAIN_DISH." = '".$this->getfood_pair_main_dish()."',".RET."			".FOOD_PAIR_PAIRED_DISH." = '".$this->getfood_pair_paired_dish()."',".RET."			".FOOD_PAIR_START_DATE." = '".$this->getfood_pair_start_date()."',".RET."			".FOOD_PAIR_END_DATE." = '".$this->getfood_pair_end_date()."'".RET.			"WHERE ".FOOD_PAIR_ID." = ".$this->getfood_pair_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_FOOD_PAIRING." (".RET.			"".FOOD_PAIR_MAIN_DISH.", ".FOOD_PAIR_PAIRED_DISH.", ".FOOD_PAIR_START_DATE.", ".FOOD_PAIR_END_DATE.RET.				") VALUES (".RET.			"'".$this->getfood_pair_main_dish()."',".RET.			"'".$this->getfood_pair_paired_dish()."',".RET.			"'".$this->getfood_pair_start_date()."',".RET.			"'".$this->getfood_pair_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setfood_pair_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_FOOD_PAIRING.RET;		$and = "WHERE".RET;		if($array[FOOD_PAIR_ID] != "") {			$qry .= $and.FOOD_PAIR_ID." IN (".$array[FOOD_PAIR_ID].")".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_MAIN_DISH] != "") {			$qry .= $and.FOOD_PAIR_MAIN_DISH." = '".$array[FOOD_PAIR_MAIN_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_PAIRED_DISH] != "") {			$qry .= $and.FOOD_PAIR_PAIRED_DISH." = '".$array[FOOD_PAIR_PAIRED_DISH]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_START_DATE] != "") {			$qry .= $and.FOOD_PAIR_START_DATE." = '".$array[FOOD_PAIR_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[FOOD_PAIR_END_DATE] != "") {			$qry .= $and.FOOD_PAIR_END_DATE." = '".$array[FOOD_PAIR_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($food_pair_main_dish ,$food_pair_paired_dish ,$food_pair_start_date ,$food_pair_end_date) {		$unique_arr = array();			//$unique_arr[FOOD_PAIR_ID]=$food_pair_id;			$unique_arr[FOOD_PAIR_MAIN_DISH]=$food_pair_main_dish;			$unique_arr[FOOD_PAIR_PAIRED_DISH]=$food_pair_paired_dish;			//$unique_arr[FOOD_PAIR_START_DATE]=$food_pair_start_date;			//$unique_arr[FOOD_PAIR_END_DATE]=$food_pair_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($food_pair_main_dish ,$food_pair_paired_dish ,$food_pair_start_date ,$food_pair_end_date) {		if(is_not_empty($food_pair_main_dish)){			if($this->isAlreadyThere($food_pair_main_dish ,$food_pair_paired_dish ,$food_pair_start_date ,$food_pair_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setfood_pair_id("");				$this->setfood_pair_main_dish($food_pair_main_dish);				$this->setfood_pair_paired_dish($food_pair_paired_dish);				$this->setfood_pair_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getfood_pair_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($food_pair_id, $food_pair_main_dish, $food_pair_paired_dish, $food_pair_start_date, $food_pair_end_date) {		if(is_gt_zero_num($food_pair_id)){			if ($this->readObject(array(FOOD_PAIR_ID=>$food_pair_id))){				$this->setfood_pair_main_dish($food_pair_main_dish);				$this->setfood_pair_paired_dish($food_pair_paired_dish);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($food_pair_id){		if(is_gt_zero_num($food_pair_id)){			if ($this->readObject(array(FOOD_PAIR_ID=>$food_pair_id))){				$qry  = "UPDATE ".TBL_FOOD_PAIRING.RET."SET".RET."			".TBL_FOOD_PAIRING_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".FOOD_PAIR_ID."={$food_pair_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($food_pair_id){		if(is_gt_zero_num($food_pair_id)){			if ($this->readObject(array(FOOD_PAIR_ID=>$food_pair_id))){				$qry  = "UPDATE ".TBL_FOOD_PAIRING.RET."SET".RET."			".TBL_FOOD_PAIRING_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".FOOD_PAIR_ID."={$food_pair_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($food_pair_id) {		$info = array();		if($food_pair_id != ""){			$obj_tbl_food_pairing = new tbl_food_pairing();			if($obj_tbl_food_pairing->readObject(array("food_pair_id"=>$food_pair_id))){				$info["food_pair_id"]=$obj_tbl_food_pairing->getfood_pair_id();				$info["food_pair_main_dish"]=$obj_tbl_food_pairing->getfood_pair_main_dish();				$info["food_pair_paired_dish"]=$obj_tbl_food_pairing->getfood_pair_paired_dish();				$info["food_pair_start_date"]=$obj_tbl_food_pairing->getfood_pair_start_date();				$info["food_pair_end_date"]=$obj_tbl_food_pairing->getfood_pair_end_date();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_food_pairing->gettbl_food_pairing_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_food_pairing->gettbl_food_pairing_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_food_pairing->gettbl_food_pairing_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_food_pairing);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_food_pairing_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_FOOD_PAIRING."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_food_pairing_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields}//..End tbl_food_pairing?>