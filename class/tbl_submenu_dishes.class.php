<?php/**********************************************************************tbl_submenu_dishes.class.phpGenerated by STRUCTY 2013.04.11 10:41:39.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_SUBMENU_DISHES", "tbl_submenu_dishes"); define('SBMNU_DISH_ID', 'sbmnu_dish_id'); define('SBMNU_DISH_SUBMENU', 'sbmnu_dish_submenu'); define('SBMNU_DISH_DISH', 'sbmnu_dish_dish'); define('SBMNU_DISH_PRICE', 'sbmnu_dish_price'); define('SBMNU_DISH_DISPLAY_ORDER', 'sbmnu_dish_display_order'); define('SBMNU_DISH_DESC', 'sbmnu_dish_desc'); define('SBMNU_DISH_START_DATE', 'sbmnu_dish_start_date'); define('SBMNU_DISH_END_DATE', 'sbmnu_dish_end_date'); define("TBL_SUBMENU_DISHES_ACTIVE_DATE",  SBMNU_DISH_START_DATE);define("TBL_SUBMENU_DISHES_DEACTIVE_DATE",  SBMNU_DISH_END_DATE);$tbl_submenu_dishes_active_condition= " (".TBL_SUBMENU_DISHES_DEACTIVE_DATE." is NULL OR ".TBL_SUBMENU_DISHES_DEACTIVE_DATE." = 0) ";class tbl_submenu_dishes {	private $sbmnu_dish_id;	private $sbmnu_dish_submenu;	private $sbmnu_dish_dish;	private $sbmnu_dish_price;	private $sbmnu_dish_display_order;	private $sbmnu_dish_desc;	private $sbmnu_dish_start_date;	private $sbmnu_dish_end_date;	private $tbl_submenu_dishes_active_date;	private $tbl_submenu_dishes_deactive_date;	public function setsbmnu_dish_id($pArg="0") {$this->sbmnu_dish_id=$pArg;}	public function setsbmnu_dish_submenu($pArg="0") {$this->sbmnu_dish_submenu=$pArg;}	public function setsbmnu_dish_dish($pArg="0") {$this->sbmnu_dish_dish=$pArg;}	public function setsbmnu_dish_price($pArg="0") {$this->sbmnu_dish_price=$pArg;}	public function setsbmnu_dish_display_order($pArg="0") {$this->sbmnu_dish_display_order=$pArg;}	public function setsbmnu_dish_desc($pArg="0") {$this->sbmnu_dish_desc=$pArg;}	public function setsbmnu_dish_start_date($pArg="0") {$this->sbmnu_dish_start_date=$pArg;}	public function setsbmnu_dish_end_date($pArg="0") {$this->sbmnu_dish_end_date=$pArg;}	public function settbl_submenu_dishes_active_date($pArg="0") {$this->tbl_submenu_dishes_active_date=$pArg;}	public function settbl_submenu_dishes_deactive_date($pArg="0") {$this->tbl_submenu_dishes_deactive_date=$pArg;}	public function getsbmnu_dish_id() {return $this->sbmnu_dish_id;}	public function getsbmnu_dish_submenu() {return $this->sbmnu_dish_submenu;}	public function getsbmnu_dish_dish() {return $this->sbmnu_dish_dish;}	public function getsbmnu_dish_price() {return $this->sbmnu_dish_price;}	public function getsbmnu_dish_display_order() {return $this->sbmnu_dish_display_order;}	public function getsbmnu_dish_desc() {return $this->sbmnu_dish_desc;}	public function getsbmnu_dish_start_date() {return $this->sbmnu_dish_start_date;}	public function getsbmnu_dish_end_date() {return $this->sbmnu_dish_end_date;}	public function gettbl_submenu_dishes_active_date($pArg="0") {return $this->tbl_submenu_dishes_active_date;}	public function gettbl_submenu_dishes_deactive_date($pArg="0") {return $this->tbl_submenu_dishes_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_SUBMENU_DISHES.RET;		$and = "WHERE".RET;		if($array[SBMNU_DISH_ID] != "") {			$qry .= $and.SBMNU_DISH_ID." = '".$array[SBMNU_DISH_ID]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_SUBMENU] != "") {			$qry .= $and.SBMNU_DISH_SUBMENU." = '".$array[SBMNU_DISH_SUBMENU]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISH] != "") {			$qry .= $and.SBMNU_DISH_DISH." = '".$array[SBMNU_DISH_DISH]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_PRICE] != "") {			$qry .= $and.SBMNU_DISH_PRICE." = '".$array[SBMNU_DISH_PRICE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISPLAY_ORDER] != "") {			$qry .= $and.SBMNU_DISH_DISPLAY_ORDER." = '".$array[SBMNU_DISH_DISPLAY_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DESC] != "") {			$qry .= $and.SBMNU_DISH_DESC." = '".$array[SBMNU_DISH_DESC]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_START_DATE] != "") {			$qry .= $and.SBMNU_DISH_START_DATE." = '".$array[SBMNU_DISH_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_END_DATE] != "") {			$qry .= $and.SBMNU_DISH_END_DATE." = '".$array[SBMNU_DISH_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setsbmnu_dish_id($record[SBMNU_DISH_ID]);				$this->setsbmnu_dish_submenu($record[SBMNU_DISH_SUBMENU]);				$this->setsbmnu_dish_dish($record[SBMNU_DISH_DISH]);				$this->setsbmnu_dish_price($record[SBMNU_DISH_PRICE]);				$this->setsbmnu_dish_display_order($record[SBMNU_DISH_DISPLAY_ORDER]);				$this->setsbmnu_dish_desc($record[SBMNU_DISH_DESC]);				$this->setsbmnu_dish_start_date($record[SBMNU_DISH_START_DATE]);				$this->setsbmnu_dish_end_date($record[SBMNU_DISH_END_DATE]);				$this->settbl_submenu_dishes_active_date($record[TBL_SUBMENU_DISHES_ACTIVE_DATE]);				$this->settbl_submenu_dishes_deactive_date($record[TBL_SUBMENU_DISHES_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1,$isDishDetailed=0) {		global $tbl_submenu_dishes_active_condition;		/*$qry = "SELECT `sbmnu_dish_id`, `sbmnu_dish_submenu`, `sbmnu_dish_dish`, `sbmnu_dish_price`, `sbmnu_dish_display_order`, `sbmnu_dish_desc`, `sbmnu_dish_start_date`, `sbmnu_dish_end_date`  ".RET."FROM ".TBL_SUBMENU_DISHES.RET;		$qry = "SELECT `sbmnu_dish_id`, `sbmnu_dish_submenu`, `sbmnu_dish_dish`, `sbmnu_dish_price`, `sbmnu_dish_display_order`, `sbmnu_dish_desc`, `sbmnu_dish_start_date`, `sbmnu_dish_end_date`, `submnu_name`, `menu_name`,`menu_id`,`menu_route` ".RET		."FROM ".TBL_SUBMENU_DISHES." INNER JOIN ".TBL_SUB_MENU.		" ON `sbmnu_dish_submenu`=`submnu_id` INNER JOIN  ".TBL_MENU.		" ON `submnu_menu` = `menu_id`".RET;*/		$qry = "SELECT `sbmnu_dish_id`, `sbmnu_dish_submenu`, `sbmnu_dish_dish`, `sbmnu_dish_price`, `sbmnu_dish_display_order`, `sbmnu_dish_desc`, `sbmnu_dish_start_date`, `sbmnu_dish_end_date`, `submnu_name`, `menu_name`,`menu_id`,`menu_route`,`dish_name` ".RET		."FROM ".TBL_SUBMENU_DISHES." 		INNER JOIN ".TBL_SUB_MENU.		" ON `sbmnu_dish_submenu`=`submnu_id` 		INNER JOIN  ".TBL_MENU.		" ON `submnu_menu` = `menu_id`		INNER JOIN  ".TBL_DISHES.		" ON `sbmnu_dish_dish` = `dish_id`		".RET;				$and = "WHERE".RET;		if($array[SBMNU_DISH_ID] != "") {			$qry .= $and.SBMNU_DISH_ID." IN (".$array[SBMNU_DISH_ID].")".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_SUBMENU] != "") {			$qry .= $and.SBMNU_DISH_SUBMENU." = '".$array[SBMNU_DISH_SUBMENU]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISH] != "") {			$qry .= $and.SBMNU_DISH_DISH." = '".$array[SBMNU_DISH_DISH]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_PRICE] != "") {			$qry .= $and.SBMNU_DISH_PRICE." = '".$array[SBMNU_DISH_PRICE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISPLAY_ORDER] != "") {			$qry .= $and.SBMNU_DISH_DISPLAY_ORDER." = '".$array[SBMNU_DISH_DISPLAY_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DESC] != "") {			$qry .= $and.SBMNU_DISH_DESC." = '".$array[SBMNU_DISH_DESC]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_START_DATE] != "") {			$qry .= $and.SBMNU_DISH_START_DATE." = '".$array[SBMNU_DISH_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_END_DATE] != "") {			$qry .= $and.SBMNU_DISH_END_DATE." = '".$array[SBMNU_DISH_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_submenu_dishes_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {				$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];				}else{				$qry .=" ORDER BY ".SBMNU_DISH_DISPLAY_ORDER." ASC"; 		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		//echo $qry_with_limit;				$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_SUBMENU_DISHES_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_SUBMENU_DISHES_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_SUBMENU_DISHES_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["sbmnu_dish_id"]=$record[SBMNU_DISH_ID];										$class_object["sbmnu_dish_submenu"]=$record[SBMNU_DISH_SUBMENU];					$class_object["submnu_name"]=$record["submnu_name"];					$class_object["menu_name"] = $record["menu_name"];					$class_object["menu_id"] = $record["menu_id"];					$class_object["sbmnu_dish_dish"]=$record[SBMNU_DISH_DISH];					$class_object["sbmnu_dish_price"]=$record[SBMNU_DISH_PRICE];					if($isDishDetailed==1){						$objdish=new tbl_dishes();						$class_object["sbmnu_dish_dish_details"]= $objdish->GetInfo($record[SBMNU_DISH_DISH]);				 //..Changes made for getting the submenu dish price show on menu			 $class_object["act_dish_price"]=0;			 if (is_gt_zero_num($class_object['sbmnu_dish_dish_details']['dish_is_drink'])){			 	if (is_gt_zero_num($class_object['sbmnu_dish_dish_details']['dish_bottle_price'])){				 		$class_object["act_dish_price"]=$class_object['sbmnu_dish_dish_details']['dish_bottle_price'];			 	}elseif (is_gt_zero_num($class_object['sbmnu_dish_dish_details']['dish_glass_price'])){				 		$class_object["act_dish_price"]=$class_object['sbmnu_dish_dish_details']['dish_glass_price'];	 						}			 }else{			 	 if (is_gt_zero_num($class_object["sbmnu_dish_price"])){			 	 	$class_object["act_dish_price"]=$class_object["sbmnu_dish_price"];				 	 }             }            										}										$class_object["sbmnu_dish_display_order"]=$record[SBMNU_DISH_DISPLAY_ORDER];					$class_object["sbmnu_dish_desc"]=$record[SBMNU_DISH_DESC];					/*					$js_desc =  nl2br($record[SBMNU_DISH_DESC]);					 $js_desc = str_replace('\r\n','<br/>',$js_desc);					$js_desc = str_replace('\n','<br/>',$js_desc);					$js_desc = str_replace('\r','<br/>',$js_desc);  */					$js_desc  = json_encode($record[SBMNU_DISH_DESC]);					$js_desc = str_replace("'","",$js_desc);					$class_object["sbmnu_dish_desc_for_js"]=$js_desc;					$class_object["sbmnu_dish_start_date"]=$record[SBMNU_DISH_START_DATE];					$class_object["sbmnu_dish_end_date"]=$record[SBMNU_DISH_END_DATE];					$class_object["menu_route"]=$record['menu_route'];										$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_submenu_dishes();					$class_object->setsbmnu_dish_id($record[SBMNU_DISH_ID]);					$class_object->setsbmnu_dish_submenu($record[SBMNU_DISH_SUBMENU]);					$class_object->setsbmnu_dish_dish($record[SBMNU_DISH_DISH]);					$class_object->setsbmnu_dish_price($record[SBMNU_DISH_PRICE]);					$class_object->setsbmnu_dish_display_order($record[SBMNU_DISH_DISPLAY_ORDER]);					$class_object->setsbmnu_dish_desc($record[SBMNU_DISH_DESC]);					$class_object->setsbmnu_dish_start_date($record[SBMNU_DISH_START_DATE]);					$class_object->setsbmnu_dish_end_date($record[SBMNU_DISH_END_DATE]);				}				$class_objects[$record[SBMNU_DISH_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getsbmnu_dish_id() != '') {			$qry  = "UPDATE ".TBL_SUBMENU_DISHES.RET."SET".RET."			".SBMNU_DISH_ID." = '".$this->getsbmnu_dish_id()."',".RET."			".SBMNU_DISH_SUBMENU." = '".$this->getsbmnu_dish_submenu()."',".RET."			".SBMNU_DISH_DISH." = '".$this->getsbmnu_dish_dish()."',".RET."			".SBMNU_DISH_PRICE." = '".$this->getsbmnu_dish_price()."',".RET."			".SBMNU_DISH_DISPLAY_ORDER." = '".$this->getsbmnu_dish_display_order()."',".RET."			".SBMNU_DISH_DESC." = '".$this->getsbmnu_dish_desc()."',".RET."			".SBMNU_DISH_START_DATE." = '".$this->getsbmnu_dish_start_date()."',".RET."			".SBMNU_DISH_END_DATE." = '".$this->getsbmnu_dish_end_date()."'".RET.			"WHERE ".SBMNU_DISH_ID." = ".$this->getsbmnu_dish_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_SUBMENU_DISHES." (".RET.			"".SBMNU_DISH_SUBMENU.", ".SBMNU_DISH_DISH.", ".SBMNU_DISH_PRICE.", ".SBMNU_DISH_DISPLAY_ORDER.", ".SBMNU_DISH_DESC.", ".SBMNU_DISH_START_DATE.", ".SBMNU_DISH_END_DATE.RET.				") VALUES (".RET.			"'".$this->getsbmnu_dish_submenu()."',".RET.			"'".$this->getsbmnu_dish_dish()."',".RET.			"'".$this->getsbmnu_dish_price()."',".RET.			"'".$this->getsbmnu_dish_display_order()."',".RET.			"'".$this->getsbmnu_dish_desc()."',".RET.			"'".$this->getsbmnu_dish_start_date()."',".RET.			"'".$this->getsbmnu_dish_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setsbmnu_dish_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_SUBMENU_DISHES.RET;		$and = "WHERE".RET;		if($array[SBMNU_DISH_ID] != "") {			$qry .= $and.SBMNU_DISH_ID." IN (".$array[SBMNU_DISH_ID].")".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_SUBMENU] != "") {			$qry .= $and.SBMNU_DISH_SUBMENU." = '".$array[SBMNU_DISH_SUBMENU]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISH] != "") {			$qry .= $and.SBMNU_DISH_DISH." = '".$array[SBMNU_DISH_DISH]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_PRICE] != "") {			$qry .= $and.SBMNU_DISH_PRICE." = '".$array[SBMNU_DISH_PRICE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DISPLAY_ORDER] != "") {			$qry .= $and.SBMNU_DISH_DISPLAY_ORDER." = '".$array[SBMNU_DISH_DISPLAY_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_DESC] != "") {			$qry .= $and.SBMNU_DISH_DESC." = '".$array[SBMNU_DISH_DESC]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_START_DATE] != "") {			$qry .= $and.SBMNU_DISH_START_DATE." = '".$array[SBMNU_DISH_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[SBMNU_DISH_END_DATE] != "") {			$qry .= $and.SBMNU_DISH_END_DATE." = '".$array[SBMNU_DISH_END_DATE]."'".RET;			$and = "AND".RET;		} 		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($sbmnu_dish_submenu ,$sbmnu_dish_dish ,$sbmnu_dish_price ,$sbmnu_dish_display_order ,$sbmnu_dish_desc ,$sbmnu_dish_start_date ,$sbmnu_dish_end_date) {		$unique_arr = array();			//$unique_arr[SBMNU_DISH_ID]=$sbmnu_dish_id;			  $unique_arr[SBMNU_DISH_SUBMENU]=$sbmnu_dish_submenu;			  $unique_arr[SBMNU_DISH_DISH]=$sbmnu_dish_dish;			//$unique_arr[SBMNU_DISH_PRICE]=$sbmnu_dish_price;			//$unique_arr[SBMNU_DISH_DISPLAY_ORDER]=$sbmnu_dish_display_order;			//$unique_arr[SBMNU_DISH_DESC]=$sbmnu_dish_desc;			//$unique_arr[SBMNU_DISH_START_DATE]=$sbmnu_dish_start_date;			//$unique_arr[SBMNU_DISH_END_DATE]=$sbmnu_dish_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($sbmnu_dish_submenu ,$sbmnu_dish_dish ,$sbmnu_dish_price ,$sbmnu_dish_display_order ,$sbmnu_dish_desc ,$sbmnu_dish_start_date ,$sbmnu_dish_end_date) {		if(is_not_empty($sbmnu_dish_submenu)){			if($this->isAlreadyThere($sbmnu_dish_submenu ,$sbmnu_dish_dish ,$sbmnu_dish_price ,$sbmnu_dish_display_order ,$sbmnu_dish_desc ,$sbmnu_dish_start_date ,$sbmnu_dish_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setsbmnu_dish_id("");				$this->setsbmnu_dish_submenu($sbmnu_dish_submenu);				$this->setsbmnu_dish_dish($sbmnu_dish_dish);				$this->setsbmnu_dish_price($sbmnu_dish_price);				$this->setsbmnu_dish_display_order($sbmnu_dish_display_order);				$this->setsbmnu_dish_desc($sbmnu_dish_desc);				$this->setsbmnu_dish_start_date(date(DATE_FORMAT));				$this->insert();				$lst_insert_sbmnudishid=$this->getsbmnu_dish_id();				//..if drink then set the price for bottelr and glass.				if(is_gt_zero_num($lst_insert_sbmnudishid)){						self::addBottleGlassPrice($sbmnu_dish_dish,$lst_insert_sbmnudishid);				}								return $lst_insert_sbmnudishid;			}		}		return OPERATION_FAIL;	}//..create		public static function addBottleGlassPrice($sbmnu_dish_dish,$submnu_dish_id){			//...Get the dish deatil to check if the dish is of drink			$dish_det=tbl_dishes::GetInfo($sbmnu_dish_dish);			if(is_gt_zero_num($dish_det['dish_is_drink'])){				$dish_opt_values=tbl_dish_options_values::getAllDishOptionsValuesForDish($sbmnu_dish_dish);				$objtbl_sbmnu_dish_opt_price=new tbl_sbmnu_dish_opt_price();				if(is_not_empty($dish_opt_values)){					foreach($dish_opt_values as $dish_opt_val){							if(strtoupper($dish_opt_val['dish_opt_val_value'])=='BOTTLE'){									$objtbl_sbmnu_dish_opt_price->create($submnu_dish_id ,$dish_opt_val['dish_opt_val_id'] ,$dish_det['dish_bottle_price']);							}elseif(strtoupper($dish_opt_val['dish_opt_val_value'])=='GLASS'){									$objtbl_sbmnu_dish_opt_price->create($submnu_dish_id ,$dish_opt_val['dish_opt_val_id'] ,$dish_det['dish_glass_price']);							}					}				}				unset($objtbl_sbmnu_dish_opt_price);				//..fetch the dish options values			} 			unset($dish_det);	}		//..Function to update the price on changing wine price	public static function updateBottleGlassPrice($sbmnu_dish_dish){			//...Get the dish deatil to check if the dish is of drink			$dish_det=tbl_dishes::GetInfo($sbmnu_dish_dish);			if(is_gt_zero_num($dish_det['dish_is_drink'])){				$dish_opt_values=tbl_dish_options_values::getAllDishOptionsValuesForDish($sbmnu_dish_dish);				$objtbl_sbmnu_dish_opt_price=new tbl_sbmnu_dish_opt_price();				if(is_not_empty($dish_opt_values)){					foreach($dish_opt_values as $dish_opt_val){							if(strtoupper($dish_opt_val['dish_opt_val_value'])=='BOTTLE'){									//$objtbl_sbmnu_dish_opt_price->create($submnu_dish_id ,$dish_opt_val['dish_opt_val_id'] ,$dish_det['dish_bottle_price']);									DB::ExecNonQry('UPDATE `'.TBL_SBMNU_DISH_OPT_PRICE.'` SET `'.SBMDOPT_PR_PRICE.'`='.$dish_det['dish_bottle_price'].' WHERE `'.SBMDOPT_PR_OPTION_VALUE.'`='.$dish_opt_val['dish_opt_val_id']);																}elseif(strtoupper($dish_opt_val['dish_opt_val_value'])=='GLASS'){									//$objtbl_sbmnu_dish_opt_price->create($submnu_dish_id ,$dish_opt_val['dish_opt_val_id'] ,$dish_det['dish_glass_price']);									DB::ExecNonQry('UPDATE `'.TBL_SBMNU_DISH_OPT_PRICE.'` SET `'.SBMDOPT_PR_PRICE.'`='.$dish_det['dish_glass_price'].' WHERE `'.SBMDOPT_PR_OPTION_VALUE.'`='.$dish_opt_val['dish_opt_val_id']);							}					}				}				unset($objtbl_sbmnu_dish_opt_price);				//..fetch the dish options values			} 			unset($dish_det);	}	public function update($sbmnu_dish_id, $sbmnu_dish_submenu, $sbmnu_dish_dish, $sbmnu_dish_price, $sbmnu_dish_display_order, $sbmnu_dish_desc, $sbmnu_dish_start_date, $sbmnu_dish_end_date) {		if(is_gt_zero_num($sbmnu_dish_id)){			if ($this->readObject(array(SBMNU_DISH_ID=>$sbmnu_dish_id))){				$this->setsbmnu_dish_submenu($sbmnu_dish_submenu);				$this->setsbmnu_dish_dish($sbmnu_dish_dish);				$this->setsbmnu_dish_price($sbmnu_dish_price);				$this->setsbmnu_dish_display_order($sbmnu_dish_display_order);				$this->setsbmnu_dish_desc($sbmnu_dish_desc);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($sbmnu_dish_id){		if(is_not_empty($sbmnu_dish_id)){			/*if ($this->readObject(array(SBMNU_DISH_ID=>$sbmnu_dish_id))){*/				$qry  = 'UPDATE '.TBL_SUBMENU_DISHES.RET.'SET'.RET.'			'.TBL_SUBMENU_DISHES_DEACTIVE_DATE.' = \''.date(EMPTY_DATE_FORMAT).'\' WHERE '.SBMNU_DISH_ID.' IN ('.$sbmnu_dish_id.')';			//echo $qry;exit;				$res = mysql_query($qry);				if($res){					return 1;				}			/*}*/		}		return 0;	}//..end activate	public function deactivate($sbmnu_dish_id){		if(is_not_empty($sbmnu_dish_id)){			/*if ($this->readObject(array(SBMNU_DISH_ID=>$sbmnu_dish_id))){*/				$qry  = 'UPDATE '.TBL_SUBMENU_DISHES.RET.'SET'.RET.'			'.TBL_SUBMENU_DISHES_DEACTIVE_DATE.' = \''.date(DATE_FORMAT).'\' WHERE '.SBMNU_DISH_ID.' IN ('.$sbmnu_dish_id.')';		 //echo $qry;exit;				$res = mysql_query($qry);				if($res){					return 1;				}			/*}*/		}		return 0;	}//..end deactivate	public static function GetInfo($sbmnu_dish_id) {		$info = array();		if($sbmnu_dish_id != ""){			$obj_tbl_submenu_dishes = new tbl_submenu_dishes();			if($obj_tbl_submenu_dishes->readObject(array("sbmnu_dish_id"=>$sbmnu_dish_id))){				$info["sbmnu_dish_id"]=$obj_tbl_submenu_dishes->getsbmnu_dish_id();				$info["sbmnu_dish_submenu"]=$obj_tbl_submenu_dishes->getsbmnu_dish_submenu();				$info["sbmnu_dish_dish"]=$obj_tbl_submenu_dishes->getsbmnu_dish_dish();				$info["sbmnu_dish_detail"]=tbl_dishes::GetInfo($info["sbmnu_dish_dish"]);				$info["sbmnu_dish_price"]=$obj_tbl_submenu_dishes->getsbmnu_dish_price();				$info["sbmnu_dish_display_order"]=$obj_tbl_submenu_dishes->getsbmnu_dish_display_order();				$info["sbmnu_dish_desc"]=$obj_tbl_submenu_dishes->getsbmnu_dish_desc();				$info["sbmnu_dish_start_date"]=$obj_tbl_submenu_dishes->getsbmnu_dish_start_date();				$info["sbmnu_dish_end_date"]=$obj_tbl_submenu_dishes->getsbmnu_dish_end_date();								$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_submenu_dishes->gettbl_submenu_dishes_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_submenu_dishes->gettbl_submenu_dishes_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_submenu_dishes->gettbl_submenu_dishes_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_submenu_dishes);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_submenu_dishes_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_SUBMENU_DISHES."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_submenu_dishes_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields			public static function isSubMenuDish($dish,$submenu, $submnu_dish_id=0 ){		$dishes = '';				if(is_gt_zero_num($dish) && is_gt_zero_num($submenu)){		 $res =	mysql_query('SELECT GROUP_CONCAT(`sbmnu_dish_id`) FROM '.TBL_SUBMENU_DISHES.' WHERE '.SBMNU_DISH_DISH.' = '.$dish.' AND '.SBMNU_DISH_SUBMENU.' = '.$submenu) ;		 if($res && is_gt_zero_num(mysql_num_rows($res))){		 		$dishes = mysql_result($res,0);		 } 		  if(is_gt_zero_num($submnu_dish_id)){		 	 if(in_array($submnu_dish_id, biz_explode(',',$dishes))){ 			 		return OPERATION_SUCCESS;			 }  		  }else{ 		 		if(is_not_empty($dishes)){			 		return OPERATION_DUPLICATE;			  } 		  }		} 		return OPERATION_SUCCESS;	}		public static function getAllSubMnuDishes($submenu=0){				$arr = array();			$qry='SELECT smd.`sbmnu_dish_id`, m.`menu_name`, s.`submnu_name`,d.`dish_name` FROM `tbl_submenu_dishes`  smdINNER JOIN `tbl_sub_menu` s ON s.`submnu_id`=smd.`sbmnu_dish_submenu`INNER JOIN `tbl_menu` m ON m.`menu_id`=s.`submnu_menu`INNER JOIN `tbl_dishes` d ON d.`dish_id`=smd.`sbmnu_dish_dish` '.(is_gt_zero_num($submenu)?' AND s.`submnu_id` = '.$submenu:'').'AND (`sbmnu_dish_end_date` is NULL OR `sbmnu_dish_end_date` = 0) AND m.`menu_restaurent`='.$_SESSION[SES_RESTAURANT];//echo $qry;		$res = mysql_query($qry); 		if($res){			while($row=mysql_fetch_assoc($res)){				$arr[$row['sbmnu_dish_id']] = $row['submnu_name'].'&raquo;'.$row['dish_name'];			}		}		return $arr;   }	 	 //..Customer menu SEArch	 public static function _customer_filter_menu($search_attrib,$search_keyword,$search_price,$search_submenu,$search_allergy,$search_menu,$_restaurant=0){			 	if($_restaurant==0)	 		$_restaurant=$_SESSION[SES_RESTAURANT];	 	 	$filt_text='';		$output = array();			//..craete filter condition		$final_cond='';		$str_cond=array();		//..1] atrib condition		$attrib_cond=array();		if(is_not_empty($search_attrib)){			foreach($search_attrib as $attrib){				$attrib_cond[]="FIND_IN_SET('{$attrib}',d.`dish_attributes`)";			}						$lst_atr=tbl_dish_attrib::get_group_concat_attribs($search_attrib);			$filt_text[]="Attributes:{$lst_atr}";		}		if(is_not_empty($attrib_cond)){			$tmp=implode(' OR ',$attrib_cond); 			$str_cond[]="({$tmp})";		}					//..5] Allergy condition	/*	if(is_not_empty($search_allergy)){			$str_cond[]="(d.`dish_allergy` NOT Like '%{$search_allergy}%')";			$filt_text[]=" Allergy : $search_allergy ";									}*/		//print_r($search_allergy);		$alergy_cond=array();		if(is_not_empty($search_allergy)){			foreach($search_allergy as $allergy){				//$alergy_cond[]="NOT FIND_IN_SET('{$allergy}',d.`dish_allergy`)";				$alergy_cond[]=" FIND_IN_SET('{$allergy}',d.`dish_allergy`)";			}						$lst_alergy=tbl_allergy_list::get_group_concat_allergies($search_allergy);			$filt_text[]="Allergies:{$lst_alergy}";		}		if(is_not_empty($alergy_cond)){			$tmp=implode(' AND ',$alergy_cond); 			$str_cond[]="({$tmp})";		}					//print_r($str_cond);		//..2] keyword condition		if(is_not_empty($search_keyword)){			$adv_keyword_search=str_replace(' ','%%',$search_keyword);			$str_cond[]="(d.`dish_name` LIKE '%{$adv_keyword_search}%' OR 										d.`dish_chef_notes` LIKE '%{$adv_keyword_search}%' OR 										d.`dish_ingrad_allergic_contents` LIKE '%{$adv_keyword_search}%' OR 										d.`dish_food_wine_pair` LIKE '%{$adv_keyword_search}%' OR 										d.`dish_nutri_cal_info` LIKE '%{$adv_keyword_search}%' OR										d.`dish_notes` LIKE '%{$adv_keyword_search}%')";			$filt_text[]=" Keyword: $search_keyword ";									}		//..3] price condition		//echo "search_price=$search_price";		if(is_gt_zero_num($search_price)){				switch ($search_price) {					case 1:					   $str_cond[]="((smd.`sbmnu_dish_price` > 0 AND smd.`sbmnu_dish_price` <= 5) OR 						 							(d.`dish_bottle_price` > 0 AND d.`dish_bottle_price` <= 5) OR													(d.`dish_glass_price` > 0 AND d.`dish_glass_price` <= 5)											)";						 $filt_text[]=" Price: $0-$5 ";									   break;					case 2:					   $str_cond[]="((smd.`sbmnu_dish_price` >= 5 AND smd.`sbmnu_dish_price` <= 20) OR 						 							(d.`dish_bottle_price` >= 5 AND d.`dish_bottle_price` <= 20) OR													(d.`dish_glass_price` >= 5 AND d.`dish_glass_price` <= 20)											)";					   $filt_text[]=" Price: $5-$20 ";							 break;					case 3:					   $str_cond[]="((smd.`sbmnu_dish_price` >= 20 AND smd.`sbmnu_dish_price` <= 50) OR 						 							(d.`dish_bottle_price` >= 20 AND d.`dish_bottle_price` <= 50) OR													(d.`dish_glass_price` >= 20 AND d.`dish_glass_price` <= 50)											)";					   $filt_text[]=" Price: $20-$50 ";						 break;					case 4:					   $str_cond[]="((smd.`sbmnu_dish_price` >= 50) OR 						 							(d.`dish_bottle_price` >= 50) OR													(d.`dish_glass_price` >= 50 )											)";					   $filt_text[]=" Price: >$20 ";						 break;	 				}					}				//print_r($str_cond);		//..4] Submenu condition		if(is_gt_zero_num($search_submenu)){			$str_cond[]="(smd.`sbmnu_dish_submenu` = {$search_submenu})";			$submnu_info=tbl_sub_menu::GetInfo($search_submenu);			$filt_text[]=" Submenu:".$submnu_info['submnu_name'];									}				//..4] Submenu condition		if(is_gt_zero_num($search_menu)){			$str_cond[]="(m.`menu_id` = {$search_menu})";			$mnu_info=tbl_menu::GetInfo($search_menu);			$filt_text[]=" Menu:".$mnu_info['menu_name'];									}						//print_r($str_cond);		if(is_not_empty($str_cond)){			$tmp=implode(' AND ',$str_cond); 			$final_cond=" AND ({$tmp})";		}				$qry='SELECT smd.`sbmnu_dish_id`,smd.`sbmnu_dish_price`,smd.`sbmnu_dish_submenu`,					m.`menu_id`, 					d.`dish_name`,d.`dish_chef_notes`,d.`dish_ingrad_allergic_contents`,					d.`dish_allergy`,d.`dish_food_wine_pair`,d.`dish_nutri_cal_info`,					d.`dish_notes`,d.`dish_bottle_price`,d.`dish_glass_price`   					FROM `tbl_submenu_dishes` smd					INNER JOIN `tbl_sub_menu` s ON s.`submnu_id`=smd.`sbmnu_dish_submenu`					INNER JOIN `tbl_menu` m ON m.`menu_id`=s.`submnu_menu`					INNER JOIN `tbl_dishes` d ON d.`dish_id`=smd.`sbmnu_dish_dish` 					WHERE					(`sbmnu_dish_end_date` is NULL OR `sbmnu_dish_end_date` = 0) 					AND m.`menu_restaurent`='.$_restaurant.' '.$final_cond;		//echo $qry;		//exit;		$res = mysql_query($qry); 				$arr_menu=array();$arr_sub_menu=array();$arr_sub_menu_dish=array();		if($res){			while($row=mysql_fetch_assoc($res)){				$arr_menu[]=$row['menu_id'];				$arr_sub_menu[]=$row['sbmnu_dish_submenu'];				$arr_sub_menu_dish[]=$row['sbmnu_dish_id'];							}		}		//..get only unique values only		if(is_not_empty($arr_menu))			$output['menu']=implode(',',array_unique($arr_menu)); 		else				$output['menu']=array(0);	 		if(is_not_empty($arr_sub_menu))				$output['sub_menu']=implode(',',array_unique($arr_sub_menu));		else				$output['sub_menu']=array(0);	  		if(is_not_empty($arr_sub_menu_dish))				$output['sub_menu_dish']=implode(',',array_unique($arr_sub_menu_dish));  		else				$output['sub_menu_dish']=array(0);					if(is_not_empty($filt_text)){			$output['filter_text']=implode('|',array_unique($filt_text));					}		return $output;   }      //..Get the submenu items   public static function getSubMenuItems($submenu){			$items='';		$qry='SELECT GROUP_CONCAT(`sbmnu_dish_id`) as items FROM `tbl_submenu_dishes` WHERE `sbmnu_dish_submenu`='.$submenu.'AND (`sbmnu_dish_end_date` is NULL OR `sbmnu_dish_end_date` = 0)';		$res = mysql_query($qry); 		if($res){			$items=mysql_result($res, 0); 		}		return $items;   }			/**	* Make Activate/Deactive submenu dishes by dishes 	* @param string $dishes_ids	* @param integer $isActived	* @return boolean	*/	 public static function mkActiveDeactiveByDish($dishes_ids,$isActived=0){	 	if(is_not_empty($dishes_ids)){			if(is_gt_zero_num($isActived)){				return DB::ExecNonQry('UPDATE '.TBL_SUBMENU_DISHES.RET.'SET'.RET.' '.TBL_SUBMENU_DISHES_DEACTIVE_DATE.' = \''.date(EMPTY_DATE_FORMAT).'\' WHERE '.SBMNU_DISH_DISH.' IN ('.$dishes_ids.')');			}else{				return DB::ExecNonQry('UPDATE '.TBL_SUBMENU_DISHES.RET.'SET'.RET.' '.TBL_SUBMENU_DISHES_DEACTIVE_DATE.' = \''.date(DATE_FORMAT).'\' WHERE '.SBMNU_DISH_DISH.' IN ('.$dishes_ids.')');			} 		}	 	return OPERATION_FAIL; 	 }			}//..End tbl_submenu_dishes?>