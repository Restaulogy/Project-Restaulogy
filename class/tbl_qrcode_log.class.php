<?php/**********************************************************************tbl_qrcode_log.class.phpGenerated by STRUCTY 2014.04.15 07:35:53.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_QRCODE_LOG", "tbl_qrcode_log"); define('QRLOG_ID', 'qrlog_id'); define('QRLOG_MEMBER_ID', 'qrlog_member_id'); define('QRLOG_TBL_ID', 'qrlog_tbl_id'); define('QRLOG_IN_TIME', 'qrlog_in_time'); define('QRLOG_OUT_TIME', 'qrlog_out_time'); define("TBL_QRCODE_LOG_ACTIVE_DATE",  "");define("TBL_QRCODE_LOG_DEACTIVE_DATE",  "");$tbl_qrcode_log_active_condition= " (".TBL_QRCODE_LOG_DEACTIVE_DATE." is NULL OR ".TBL_QRCODE_LOG_DEACTIVE_DATE." = 0 OR ".TBL_QRCODE_LOG_DEACTIVE_DATE." > CURDATE( )) ";class tbl_qrcode_log {	private $qrlog_id;	private $qrlog_member_id;	private $qrlog_tbl_id;	private $qrlog_in_time;	private $qrlog_out_time;	private $tbl_qrcode_log_active_date;	private $tbl_qrcode_log_deactive_date;	public function setqrlog_id($pArg="0") {$this->qrlog_id=$pArg;}	public function setqrlog_member_id($pArg="0") {$this->qrlog_member_id=$pArg;}	public function setqrlog_tbl_id($pArg="0") {$this->qrlog_tbl_id=$pArg;}	public function setqrlog_in_time($pArg="0") {$this->qrlog_in_time=$pArg;}	public function setqrlog_out_time($pArg="0") {$this->qrlog_out_time=$pArg;}	public function settbl_qrcode_log_active_date($pArg="0") {$this->tbl_qrcode_log_active_date=$pArg;}	public function settbl_qrcode_log_deactive_date($pArg="0") {$this->tbl_qrcode_log_deactive_date=$pArg;}	public function getqrlog_id() {return $this->qrlog_id;}	public function getqrlog_member_id() {return $this->qrlog_member_id;}	public function getqrlog_tbl_id() {return $this->qrlog_tbl_id;}	public function getqrlog_in_time() {return $this->qrlog_in_time;}	public function getqrlog_out_time() {return $this->qrlog_out_time;}	public function gettbl_qrcode_log_active_date($pArg="0") {return $this->tbl_qrcode_log_active_date;}	public function gettbl_qrcode_log_deactive_date($pArg="0") {return $this->tbl_qrcode_log_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_QRCODE_LOG.RET;		$and = "WHERE".RET;		if($array[QRLOG_ID] != "") {			$qry .= $and.QRLOG_ID." = '".$array[QRLOG_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_MEMBER_ID] != "") {			$qry .= $and.QRLOG_MEMBER_ID." = '".$array[QRLOG_MEMBER_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_TBL_ID] != "") {			$qry .= $and.QRLOG_TBL_ID." = '".$array[QRLOG_TBL_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_IN_TIME] != "") {			$qry .= $and.QRLOG_IN_TIME." = '".$array[QRLOG_IN_TIME]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_OUT_TIME] != "") {			$qry .= $and.QRLOG_OUT_TIME." = '".$array[QRLOG_OUT_TIME]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setqrlog_id($record[QRLOG_ID]);				$this->setqrlog_member_id($record[QRLOG_MEMBER_ID]);				$this->setqrlog_tbl_id($record[QRLOG_TBL_ID]);				$this->setqrlog_in_time($record[QRLOG_IN_TIME]);				$this->setqrlog_out_time($record[QRLOG_OUT_TIME]);				$this->settbl_qrcode_log_active_date($record[TBL_QRCODE_LOG_ACTIVE_DATE]);				$this->settbl_qrcode_log_deactive_date($record[TBL_QRCODE_LOG_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1,&$result_found_group=0) {		global $tbl_qrcode_log_active_condition;		$_dy_wk_mnth_cnd='';		$_dy_wk_mnth_cnd_sel='';		$sel_flds='';		if(is_not_empty($array['search_groupby'])){			switch ($array['search_groupby']) {				case "day":				   $_dy_wk_mnth_cnd= "DATE_FORMAT(`qrlog_in_time`, '%m/%d/%Y') ";					 $_dy_wk_mnth_cnd_sel= "DATE_FORMAT(`qrlog_in_time`, '%m/%d/%Y') ";				   break;				case "week":				   $_dy_wk_mnth_cnd= "WEEK(`qrlog_in_time`) ";					 $_dy_wk_mnth_cnd_sel= "WEEK(`qrlog_in_time`),CONCAT(					 DATE(DATE_ADD(`qrlog_in_time`, INTERVAL(1-DAYOFWEEK(`qrlog_in_time`)) DAY)),					 ' to ',    			 DATE(DATE_ADD(`qrlog_in_time`, INTERVAL(7-DAYOFWEEK(`qrlog_in_time`)) DAY))) ";				   break;				case "month":				   $_dy_wk_mnth_cnd= "MONTH(`qrlog_in_time`) ";					 $_dy_wk_mnth_cnd_sel= "MONTH(`qrlog_in_time`), CONCAT(MONTHNAME(`qrlog_in_time`),' ',YEAR(`qrlog_in_time`)) ";				   break;								case "year":				   $_dy_wk_mnth_cnd= "YEAR(`qrlog_in_time`) ";					 $_dy_wk_mnth_cnd_sel= "YEAR(`qrlog_in_time`)";				   break;	 				 			}			$sel_flds=" COUNT(`qrlog_id`) `no_of_recs`,YEAR(`qrlog_in_time`) `year`,{$_dy_wk_mnth_cnd_sel}  `dy_wk_mnth`,";			$group_flds=" GROUP BY YEAR(`qrlog_in_time`),{$_dy_wk_mnth_cnd}";		}				//$qry = "SELECT *".RET."FROM ".TBL_QRCODE_LOG.RET;				$qry = "SELECT {$sel_flds} l.*,t.`".TABLE_NUMBER."`,t.`".TABLE_RESTAURANT."` FROM `".TBL_QRCODE_LOG."` l						INNER JOIN `".TBL_DINING_TABLE."` t	ON						`t`.`".TABLE_ID."`=	`l`.`".QRLOG_TBL_ID."`";		$and = "WHERE".RET;		if($array[QRLOG_ID] != "") {			$qry .= $and.QRLOG_ID." = '".$array[QRLOG_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_MEMBER_ID] != "") {			$qry .= $and.QRLOG_MEMBER_ID." = '".$array[QRLOG_MEMBER_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_TBL_ID] != "") {			$qry .= $and.QRLOG_TBL_ID." = ".$array[QRLOG_TBL_ID]."".RET;			$and = "AND".RET;		}		if($array[QRLOG_IN_TIME] != "") {			$qry .= $and.QRLOG_IN_TIME." = '".$array[QRLOG_IN_TIME]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_OUT_TIME] != "") {			$qry .= $and.QRLOG_OUT_TIME." = '".$array[QRLOG_OUT_TIME]."'".RET;			$and = "AND".RET;		}				if($array[TABLE_RESTAURANT] != "") {			$qry .= $and.TABLE_RESTAURANT." = '".$array[TABLE_RESTAURANT]."'".RET;			$and = "AND".RET;		}				if(is_not_empty($array['search_from_dt']) && is_not_empty($array['search_to_dt'])){						$qry .= $and.QRLOG_IN_TIME.' >= \''.date('Y-m-d 00:00:00',strtotime($array['search_from_dt'])).'\''.RET.'AND '.QRLOG_IN_TIME.' <= \''.date('Y-m-d 23:59:59',strtotime($array['search_to_dt'])).'\''.RET;			$and = 'AND'.RET;		}			if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_qrcode_log_active_condition;;			$and = "AND".RET;		}				if(is_not_empty($array['search_groupby'])){			$qry .= $group_flds;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		//echo $qry_with_limit;				$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			if(is_not_empty($array['search_groupby'])){				$result_found_group =DB::ExecScalarQry("SELECT SUM(`no_of_recs`) FROM ($qry) x",0);			}			$result_found = mysql_num_rows($r1);							}		$class_objects = array();		$_tol_rec_cnt=0;		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_QRCODE_LOG_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_QRCODE_LOG_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_QRCODE_LOG_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["qrlog_id"]=$record[QRLOG_ID];					$class_object["qrlog_member_id"]=$record[QRLOG_MEMBER_ID];					$class_object["qrlog_tbl_id"]=$record[QRLOG_TBL_ID];					$class_object["qrlog_in_time"]=$record[QRLOG_IN_TIME];					$class_object["qrlog_out_time"]=$record[QRLOG_OUT_TIME];					$class_object["qrlog_table_number"]=$record[TABLE_NUMBER];					if(is_not_empty($array['search_groupby'])){						$class_object["dy_wk_mnth"]=$record["dy_wk_mnth"];						$class_object["no_of_recs"]=$record["no_of_recs"];					}									$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_qrcode_log();					$class_object->setqrlog_id($record[QRLOG_ID]);					$class_object->setqrlog_member_id($record[QRLOG_MEMBER_ID]);					$class_object->setqrlog_tbl_id($record[QRLOG_TBL_ID]);					$class_object->setqrlog_in_time($record[QRLOG_IN_TIME]);					$class_object->setqrlog_out_time($record[QRLOG_OUT_TIME]);				}				$class_objects[$record[QRLOG_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getqrlog_id() != '') {			$qry  = "UPDATE ".TBL_QRCODE_LOG.RET."SET".RET."			".QRLOG_ID." = '".$this->getqrlog_id()."',".RET."			".QRLOG_MEMBER_ID." = '".$this->getqrlog_member_id()."',".RET."			".QRLOG_TBL_ID." = '".$this->getqrlog_tbl_id()."',".RET."			".QRLOG_IN_TIME." = '".$this->getqrlog_in_time()."',".RET."			".QRLOG_OUT_TIME." = '".$this->getqrlog_out_time()."'".RET.			"WHERE ".QRLOG_ID." = ".$this->getqrlog_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_QRCODE_LOG." (".RET.			"".QRLOG_MEMBER_ID.", ".QRLOG_TBL_ID.", ".QRLOG_IN_TIME.", ".QRLOG_OUT_TIME.RET.				") VALUES (".RET.			"'".$this->getqrlog_member_id()."',".RET.			"'".$this->getqrlog_tbl_id()."',".RET.			"'".$this->getqrlog_in_time()."',".RET.			"'".$this->getqrlog_out_time()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setqrlog_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_QRCODE_LOG.RET;		$and = "WHERE".RET;		if($array[QRLOG_ID] != "") {			$qry .= $and.QRLOG_ID." = '".$array[QRLOG_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_MEMBER_ID] != "") {			$qry .= $and.QRLOG_MEMBER_ID." = '".$array[QRLOG_MEMBER_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_TBL_ID] != "") {			$qry .= $and.QRLOG_TBL_ID." = '".$array[QRLOG_TBL_ID]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_IN_TIME] != "") {			$qry .= $and.QRLOG_IN_TIME." = '".$array[QRLOG_IN_TIME]."'".RET;			$and = "AND".RET;		}		if($array[QRLOG_OUT_TIME] != "") {			$qry .= $and.QRLOG_OUT_TIME." = '".$array[QRLOG_OUT_TIME]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($qrlog_member_id ,$qrlog_tbl_id ,$qrlog_in_time ,$qrlog_out_time) {		$unique_arr = array();			//$unique_arr[QRLOG_ID]=$qrlog_id;			//$unique_arr[QRLOG_MEMBER_ID]=$qrlog_member_id;			//$unique_arr[QRLOG_TBL_ID]=$qrlog_tbl_id;			//$unique_arr[QRLOG_IN_TIME]=$qrlog_in_time;			//$unique_arr[QRLOG_OUT_TIME]=$qrlog_out_time;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($qrlog_member_id ,$qrlog_tbl_id ,$qrlog_in_time ,$qrlog_out_time) {		if(is_not_empty($qrlog_member_id)){			if($this->isAlreadyThere($qrlog_member_id ,$qrlog_tbl_id ,$qrlog_in_time ,$qrlog_out_time)){				return OPERATION_DUPLICATE;			}else{				$this->setqrlog_id("");				$this->setqrlog_member_id($qrlog_member_id);				$this->setqrlog_tbl_id($qrlog_tbl_id);				$this->setqrlog_in_time($qrlog_in_time);				$this->setqrlog_out_time($qrlog_out_time);				$this->insert();				return $this->getqrlog_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($qrlog_id, $qrlog_member_id, $qrlog_tbl_id, $qrlog_in_time, $qrlog_out_time) {		if(is_gt_zero_num($qrlog_id)){			if ($this->readObject(array(QRLOG_ID=>$qrlog_id))){				$this->setqrlog_member_id($qrlog_member_id);				$this->setqrlog_tbl_id($qrlog_tbl_id);				$this->setqrlog_in_time($qrlog_in_time);				$this->setqrlog_out_time($qrlog_out_time);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($qrlog_id){		if(is_gt_zero_num($qrlog_id)){			if ($this->readObject(array(QRLOG_ID=>$qrlog_id))){				$qry  = "UPDATE ".TBL_QRCODE_LOG.RET."SET".RET."			".TBL_QRCODE_LOG_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".QRLOG_ID."={$qrlog_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($qrlog_id){		if(is_gt_zero_num($qrlog_id)){			if ($this->readObject(array(QRLOG_ID=>$qrlog_id))){				$qry  = "UPDATE ".TBL_QRCODE_LOG.RET."SET".RET."			".TBL_QRCODE_LOG_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".QRLOG_ID."={$qrlog_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($qrlog_id) {		$info = array();		if($qrlog_id != ""){			$obj_tbl_qrcode_log = new tbl_qrcode_log();			if($obj_tbl_qrcode_log->readObject(array("qrlog_id"=>$qrlog_id))){				$info["qrlog_id"]=$obj_tbl_qrcode_log->getqrlog_id();				$info["qrlog_member_id"]=$obj_tbl_qrcode_log->getqrlog_member_id();				$info["qrlog_tbl_id"]=$obj_tbl_qrcode_log->getqrlog_tbl_id();				$info["qrlog_in_time"]=$obj_tbl_qrcode_log->getqrlog_in_time();				$info["qrlog_out_time"]=$obj_tbl_qrcode_log->getqrlog_out_time();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_qrcode_log->gettbl_qrcode_log_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_qrcode_log->gettbl_qrcode_log_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_qrcode_log->gettbl_qrcode_log_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_qrcode_log);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_qrcode_log_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_QRCODE_LOG."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_qrcode_log_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields		//..1] Report for QRcode scans	public function rpt_show_graph_qrcd($time_period, $restaurant, $start_date='', $end_date='',$table='', $show_overall=0, $fts_graph_type=1){				$x_axis='';		$y_axis='';		$img_src = '';		$rpt_lbl_cond='';		if(is_not_empty($time_period)==false){			$time_period = 'day';		}				//..get groupon condition			if($time_period == 'day'){						$x_axis='day';			$x_axis_title = 'Date';				$date_cond = " DATE_FORMAT(`qrlog_in_time`, '%Y%m%d')";			$rpt_lbl_cond .='Daily scans';					}elseif($time_period == 'month'){			$date_cond = ' MONTH(`qrlog_in_time`)';			$x_axis='mon';			$x_axis_title = 'month';			$rpt_lbl_cond .='Monthly scans';		}elseif($time_period == 'week'){			$date_cond = ' WEEK(`qrlog_in_time`)';			$x_axis='wk_nm';			$x_axis_title = 'week';			$rpt_lbl_cond .='Weekly scans';		}elseif($time_period == 'year'){			$date_cond = ' YEAR(`qrlog_in_time`)';			$x_axis='yr';			$x_axis_title = 'year';			$rpt_lbl_cond .='Yearly scans';		} 		//..Table FILTER		if(is_gt_zero_num($table)){				$cond .= ' AND `'.QRLOG_TBL_ID.'` = '.$table.'';								$table_info=tbl_dining_table::GetInfo($table);				$rpt_lbl_cond .=' from '.$table_info["table_number"];		}					if(is_not_empty($start_date) && is_not_empty($end_date)){				$cond .= ' AND `'.QRLOG_IN_TIME.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.QRLOG_IN_TIME.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';				$rpt_lbl_cond .=' for period ['.date('m/d/y',strtotime($start_date)).' -'.date('m/d/y',strtotime($end_date)).'] ';		}			 $final_report=array(); 		 	 //..1] DATE WISE REPORT	 $qry = "SELECT SQL_NO_CACHE	 					COUNT(`qrlog_id`) `no_of_recs`,						YEAR(`qrlog_in_time`) `yr`,						CONCAT(MONTHNAME(`qrlog_in_time`),'-',DATE_FORMAT(`qrlog_in_time`, '%y')) as `mon`,						MONTH(`qrlog_in_time`) as `mon_num`,						WEEK(`qrlog_in_time`) as `wk`,						CONCAT(					 DATE_FORMAT(DATE_ADD(`qrlog_in_time`, INTERVAL(1-DAYOFWEEK(`qrlog_in_time`)) DAY),'%m/%d/%y'),					 '-',    			 DATE_FORMAT(DATE_ADD(`qrlog_in_time`, INTERVAL(7-DAYOFWEEK(`qrlog_in_time`)) DAY),'%m/%d/%y')) as 'wk_nm',					  DAYOFMONTH(`qrlog_in_time`) as `only_day`,						DATE_FORMAT(`qrlog_in_time`, '%m/%d/%y') as `day`,						l.*,t.`table_number`,t.`table_restaurant` 					 FROM `tbl_qrcode_log` l 					 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 					 WHERE table_restaurant = '".$_SESSION[SES_RESTAURANT]."' {$cond}					 GROUP BY YEAR(`qrlog_in_time`),{$date_cond}  					 ORDER BY `qrlog_in_time` ASC"; 			 $res = mysql_query($qry); 		 $cnt=0;	 $report_op=self::getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond,$x_axis,'no_of_recs',$show_overall,$time_period,$fts_graph_type);	 $final_report['day_report']=$report_op;	 	 //..2] TABLE WISE REPORT	 $qry = "SELECT SQL_NO_CACHE	 					COUNT(`qrlog_id`) `no_of_recs`,						YEAR(`qrlog_in_time`) `yr`,						CONCAT(MONTHNAME(`qrlog_in_time`),'-',DATE_FORMAT(`qrlog_in_time`, '%y')) as `mon`,						MONTH(`qrlog_in_time`) as `mon_num`,						WEEK(`qrlog_in_time`) as `wk`,						CONCAT(					 DATE_FORMAT(DATE_ADD(`qrlog_in_time`, INTERVAL(1-DAYOFWEEK(`qrlog_in_time`)) DAY),'%m/%d/%y'),					 '-',    			 DATE_FORMAT(DATE_ADD(`qrlog_in_time`, INTERVAL(7-DAYOFWEEK(`qrlog_in_time`)) DAY),'%m/%d/%y')) as 'wk_nm',					  DAYOFMONTH(`qrlog_in_time`) as `only_day`,						DATE_FORMAT(`qrlog_in_time`, '%m/%d/%y') as `day`,						l.*,t.`table_number`,t.`table_restaurant` 					 FROM `tbl_qrcode_log` l 					 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 					 WHERE table_restaurant = '".$_SESSION[SES_RESTAURANT]."' {$cond}					 GROUP BY `qrlog_tbl_id` 					 ORDER BY `qrlog_in_time` ASC";	 $res = mysql_query($qry); 		 	 $x_axis='table_number';	 $x_axis_title = 'Table-wise';	 $rpt_lbl_cond ='Table-wise scans';	 $cnt=0;	 $report_op=self::getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond,$x_axis,'no_of_recs',$show_overall,$time_period,$fts_graph_type);	 $final_report['table_report']=$report_op;	 	 return $final_report; 		}		//...2] report for loyalty	public function rpt_show_graph_loyalty($time_period, $restaurant, $start_date='', $end_date='',$table='', $show_overall=0, $fts_graph_type=1){			$final_report=array();		$x_axis='';		$y_axis='';		$img_src = '';		$rpt_lbl_cond='';		if(is_not_empty($time_period)==false){			$time_period = 'day';		}				//..get groupon condition			if($time_period == 'day'){						$x_axis='day';			$x_axis_title = 'Date';				$date_cond = " DATE_FORMAT(`chkin_date`, '%Y%m%d')";			$date_cond_r = " DATE_FORMAT(`redimed_date`, '%Y%m%d')";			$rpt_lbl_cond .='Daily awards';				$rpt_lbl_cond_r .='Daily redeems';					}elseif($time_period == 'month'){			$date_cond = ' MONTH(`chkin_date`)';			$date_cond_r = ' MONTH(`redimed_date`)';			$x_axis='mon';			$x_axis_title = 'month';			$rpt_lbl_cond .='Monthly award';			$rpt_lbl_cond_r .='Monthly rewards';		}elseif($time_period == 'week'){			$date_cond = ' WEEK(`chkin_date`)';			$date_cond_r = ' WEEK(`redimed_date`)';			$x_axis='wk_nm';			$x_axis_title = 'week';			$rpt_lbl_cond .='Weekly award';			$rpt_lbl_cond_r .='Weekly reward';		}elseif($time_period == 'year'){			$date_cond = ' YEAR(`chkin_date`)';			$date_cond_r = ' YEAR(`redimed_date`)';			$x_axis='yr';			$x_axis_title = 'year';			$rpt_lbl_cond .='Yearly awards';			$rpt_lbl_cond_r .='Yearly rewards';		} 		//..Table FILTER		if(is_gt_zero_num($table)){				$cond .= ' AND `'.QRLOG_TBL_ID.'` = '.$table.'';								$table_info=tbl_dining_table::GetInfo($table);				$rpt_lbl_cond .=' from '.$table_info["table_number"];		}					if(is_not_empty($start_date) && is_not_empty($end_date)){				$cond .= ' AND `'.CHKIN_DATE.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.CHKIN_DATE.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';				$cond_r .= ' AND `redimed_date` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `redimed_date` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';						}			//..1] No. of new members joined loyalty program	/*$qry = "SELECT COUNT(`".MEMBERS."`.`id`) as `new_join`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$_SESSION[SES_RESTAURANT]." AND MONTH(`".STAFF_START_DATE."`)=MONTH(NOW()) AND `".STAFF_IS_REWARD."`=1;";*/							$qry = "SELECT COUNT(`".MEMBERS."`.`id`) as `new_join`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$_SESSION[SES_RESTAURANT]." AND (`".STAFF_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".STAFF_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."') AND `".STAFF_IS_REWARD."`=1;";						$final_report['new_joins']=DB::ExecScalarQry($qry,0);			//echo $qry;	//..2] No of current loyalty members;	$qry = "SELECT COUNT(`".MEMBERS."`.`id`) as `curr_mem`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$_SESSION[SES_RESTAURANT]." AND `".STAFF_IS_REWARD."`=1;";	$final_report['existing_member']=DB::ExecScalarQry($qry,0);	//echo $qry;					//..3] No. of loyalty points earned (in that date range); 	$qry = "SELECT IFNULL(SUM(`".CHKIN_POINTS."`),0) as `award_points`										 FROM `".BIZ_CHECKINS."` 										 WHERE `".CHKIN_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." AND (`".CHKIN_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".CHKIN_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";	$final_report['points_dt_range']=DB::ExecScalarQry($qry,0);	//echo $qry."<br>";	//..3-a] No. of loyalty points earned (in that date range) by new members 	$qry = "SELECT IFNULL(SUM(`".CHKIN_POINTS."`),0) as `award_points`										 FROM `".BIZ_CHECKINS."` 										 WHERE `".CHKIN_USER_ID."` IN ( 						SELECT DISTINCT(`".MEMBERS."`.`id`) 						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$_SESSION[SES_RESTAURANT]." AND (`".STAFF_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".STAFF_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."') AND `".STAFF_IS_REWARD."`=1						) AND `".CHKIN_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." AND (`".CHKIN_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".CHKIN_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";	//echo $qry;							$final_report['points_dt_range_new_members']=DB::ExecScalarQry($qry,0);		//..4] No of points redeemed (in that date range)  		$qry = "SELECT IFNULL(SUM(`c`.`rwd_points`),0) as `reward_points`										 FROM `pds_redim_cupons` as `c`										 LEFT OUTER JOIN `".BIZ_REWARDS."` as `r` ON  										 `r`.`".RWD_ID."`=`c`.`rwd_deals_sel`																 WHERE `r`.`".RWD_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." AND (`c`.`created_date` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `c`.`created_date` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";										// echo $qry;	$final_report['redeemed_dt_range']=DB::ExecScalarQry($qry,0);		//..4 a] No of points redeemed (in that date range) by new members  		$qry = "SELECT IFNULL(SUM(`c`.`rwd_points`),0) as `reward_points`										 FROM `pds_redim_cupons` as `c`										 LEFT OUTER JOIN `".BIZ_REWARDS."` as `r` ON  										 `r`.`".RWD_ID."`=`c`.`rwd_deals_sel`																 WHERE `c`.`user_id` IN (										 SELECT DISTINCT(`".MEMBERS."`.`id`) 						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$_SESSION[SES_RESTAURANT]." AND (`".STAFF_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".STAFF_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."') AND `".STAFF_IS_REWARD."`=1										 ) `r`.`".RWD_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." AND (`c`.`created_date` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `c`.`created_date` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";										// echo $qry;	$final_report['redeemed_dt_range_new_members']=DB::ExecScalarQry($qry,0);		//echo $qry;	//..5] Dollar amount spent by loyalty members (in that date range)	$qry = "SELECT IFNULL(SUM(`".CHKIN_AMOUNT."`),0) as `award_points`										 FROM `".BIZ_CHECKINS."` 										 WHERE `".CHKIN_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." AND (`".CHKIN_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `".CHKIN_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";	$final_report['amt_spent_dt_range']=DB::ExecScalarQry($qry,0);	//echo $qry;		//..55] members visited sign in page (in that date range)	$qry = "SELECT COUNT(`s`.`".SIGN_ID."`) as `sign_pg_visit`										 FROM `".TBL_OPEN_SIGNUP_PG."` `s`										 INNER JOIN `".TBL_DINING_TABLE."` `t` ON										 `t`.`".TABLE_ID."`=`s`.`".SIGN_TABLE_ID."`										 WHERE `t`.`".TABLE_RESTAURANT."`=".$_SESSION[SES_RESTAURANT]." AND (`s`.`".SIGN_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `s`.`".SIGN_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";//echo $qry;										 	$final_report['sign_pg_visit']=DB::ExecScalarQry($qry,0);		 //..6] DATE WISE REPORT	 $qry = "SELECT SQL_NO_CACHE	 					IFNULL(SUM(`".CHKIN_POINTS."`),0) `pts_awarded`,						YEAR(`chkin_date`) `yr`,						CONCAT(MONTHNAME(`chkin_date`),'-',DATE_FORMAT(`chkin_date`, '%y')) as `mon`,						MONTH(`chkin_date`) as `mon_num`,						WEEK(`chkin_date`) as `wk`,						CONCAT(					  DATE_FORMAT(DATE_ADD(`chkin_date`, INTERVAL(1-DAYOFWEEK(`chkin_date`)) DAY),'%m/%d/%y'),					 '-',    			  DATE_FORMAT(DATE_ADD(`chkin_date`, INTERVAL(7-DAYOFWEEK(`chkin_date`)) DAY),'%m/%d/%y')) as 'wk_nm',					  DAYOFMONTH(`chkin_date`) as `only_day`,						DATE_FORMAT(`chkin_date`, '%m/%d/%y') as `day`,						`c`.*,`t`.`table_number`,`t`.`table_restaurant`					 FROM `".BIZ_CHECKINS."` as `c` 					 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`c`.`chkin_session` 					 WHERE `".CHKIN_BUSS_ID."` = '".$_SESSION[SES_RESTAURANT]."' {$cond}					 GROUP BY YEAR(`chkin_date`),{$date_cond}  					 ORDER BY `chkin_date` ASC";	 $res = mysql_query($qry); 	 //echo "$qry";			 $cnt=0;	 $report_op=self::getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond,$x_axis,'pts_awarded',$show_overall,$time_period,$fts_graph_type);	 $final_report['day_report']=$report_op;	 	 //..7] DATE WISE REDEEM POINTS REPORT	 $qry = "SELECT 	 			IFNULL(SUM(`c`.`rwd_points`),0) `reward_points`,						YEAR(`redimed_date`) `yr`,						CONCAT(MONTHNAME(`redimed_date`),'-',DATE_FORMAT(`redimed_date`, '%y')) as `mon`,						MONTH(`redimed_date`) as `mon_num`,						WEEK(`redimed_date`) as `wk`,						CONCAT(					  DATE_FORMAT(DATE_ADD(`redimed_date`, INTERVAL(1-DAYOFWEEK(`redimed_date`)) DAY),'%m/%d/%y'),					 '-',    			  DATE_FORMAT(DATE_ADD(`redimed_date`, INTERVAL(7-DAYOFWEEK(`redimed_date`)) DAY),'%m/%d/%y')) as 'wk_nm',					  DAYOFMONTH(`redimed_date`) as `only_day`,						DATE_FORMAT(`redimed_date`, '%m/%d/%y') as `day`,						`c`.*						 FROM `pds_redim_cupons` as `c`						 LEFT OUTER JOIN `".BIZ_REWARDS."` as `r` ON  						 `r`.`".RWD_ID."`=`c`.`rwd_deals_sel`							WHERE `r`.`".RWD_BUSS_ID."`=".$_SESSION[SES_RESTAURANT]." {$cond_r}					   GROUP BY YEAR(`redimed_date`),{$date_cond_r}  					   ORDER BY `redimed_date` ASC;";					   							 $res = mysql_query($qry); 		 $cnt=0;	 $report_op=self::getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond_r,$x_axis,'reward_points',$show_overall,$time_period,$fts_graph_type);	 $final_report['rwdpoint_report']=$report_op;	 		 	 /*//..7] TABLE WISE REPORT	 $qry = "SELECT SQL_NO_CACHE	 					IFNULL(SUM(`".CHKIN_POINTS."`),0) `pts_awarded`,						YEAR(`chkin_date`) `yr`,						CONCAT(MONTHNAME(`chkin_date`),'-',DATE_FORMAT(`chkin_date`, '%y')) as `mon`,						MONTH(`chkin_date`) as `mon_num`,						WEEK(`chkin_date`) as `wk`,						CONCAT(					  DATE_FORMAT(DATE_ADD(`chkin_date`, INTERVAL(1-DAYOFWEEK(`chkin_date`)) DAY),'%m/%d/%y'),					 '-',    			  DATE_FORMAT(DATE_ADD(`chkin_date`, INTERVAL(7-DAYOFWEEK(`chkin_date`)) DAY),'%m/%d/%y')) as 'wk_nm',					  DAYOFMONTH(`chkin_date`) as `only_day`,						DATE_FORMAT(`chkin_date`, '%m/%d/%y') as `day`,						`c`.*,`t`.`table_number`,`t`.`table_restaurant`					 FROM `".BIZ_CHECKINS."` as `c` 					 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`c`.`chkin_session` 					 WHERE `".CHKIN_BUSS_ID."` = '".$_SESSION[SES_RESTAURANT]."' {$cond}					 GROUP BY `chkin_session`  					 ORDER BY `chkin_date` ASC";	 $res = mysql_query($qry); 		 	 	 $x_axis='table_number';	 $x_axis_title = 'Table';	 $rpt_lbl_cond ='Table-wise points awarded';	 $cnt=0;	 $report_op=self::getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond,$x_axis,'pts_awarded',$show_overall,$time_period,$fts_graph_type);	 $final_report['table_report']=$report_op;*/	 	 		 	 //..8] MEMEBRS WISE POINTS REPORT	 //..SUM(if(`chkin_points` BETWEEN 1 AND 50 , 1, 0)) '1-50',	 $qry = "SELECT `chkin_user_id` as `user`,					 SUM(`chkin_points`) as `his_points` 					 FROM `biz_checkins` as `c` 					 WHERE `chkin_buss_id` = ".$_SESSION[SES_RESTAURANT]." AND `chkin_user_id`>0					 GROUP BY `chkin_user_id` 					 ORDER BY `chkin_user_id` ASC";	 $_lst_points = DB::ExecQry($qry);	 $datax=array('0-50','51-100','101-200','201-500','501-1000','1000+');	 $_datay=array(0,0,0,0,0,0);	 	 //echo $qry;	 	 if(is_not_empty($_lst_points)){	 		foreach($_lst_points as $_point){					$_act_point=$_point['his_points'];					if($_act_point >0 && $_act_point <=50){						$_datay[0]=($_datay[0]+1);					}elseif($_act_point >51 && $_act_point <=100){						$_datay[1]=($_datay[1]+1);					}elseif($_act_point >101 && $_act_point <=200){						$_datay[2]=($_datay[2]+1);					}elseif($_act_point >201 && $_act_point <=500){						$_datay[3]=($_datay[3]+1);					}elseif($_act_point >501 && $_act_point <=1000){						$_datay[4]=($_datay[4]+1);					}elseif($_act_point >1000){						$_datay[5]=($_datay[5]+1);					}			}	 } 		 //print_r($_datay);	 	 $x_axis='Points';	 $x_axis_title = 'points';	 $rpt_lbl_cond ='Point wise members';	 $cnt=0;	 	 foreach($_datay as $key=>$value){	 		$_datax[]=$datax[$key].' => '.$value;	 }	 //$datay[scans_]=$_datay;	 //print_r(array($datax,$datay));exit;	 //$img_src =print_pie_chart($_datay,"Point wise members",$_datax);	 if(is_not_empty($_lst_points)){	 	 $img_src =print_pie_chart($_datay,"Point wise members",$_datax);	 }else{	 	$img_src ='';	 }//$img_src = print_on_graph($datax,$datay,$x_axis_title,'members',"Point wise members");	 $report_op=array('img_src'=>$img_src,'title'=>"Point wise members");	 $final_report['pointwise_member_report']=$report_op;		 	 //..9] no. of repeat visits	 $qry = "SELECT  	 				`chkin_buss_id` ,`chkin_user_id` , 					COUNT(`chkin_user_id`) AS `visits` 					FROM `biz_checkins` 					GROUP BY `chkin_user_id` 					HAVING `chkin_buss_id`=".$_SESSION[SES_RESTAURANT]."					AND `chkin_user_id` >0					ORDER BY `chkin_user_id` ASC";					//echo $qry;	 $_lst_points = DB::ExecQry($qry);	 $datax=array('1','2-3','4-6','7-10','10+');	 $_datay=array(0,0,0,0,0);	 if($_lst_points){	 		foreach($_lst_points as $_point){					$_act_point=$_point['visits'];					if($_act_point ==1){						$_datay[0]=($_datay[0]+1);					}elseif($_act_point >=2 && $_act_point <=3){						$_datay[1]=($_datay[1]+1);					}elseif($_act_point >=4 && $_act_point <=6){						$_datay[2]=($_datay[2]+1);					}elseif($_act_point >=7 && $_act_point <=10){						$_datay[3]=($_datay[3]+1);					}elseif($_act_point >=11 ){												$_datay[4]=($_datay[4]+1);					}			}	 }	 //print_r(array($datax,$_datay));exit;	 $x_axis='visits';	 $x_axis_title = 'visits';	 $rpt_lbl_cond ='Repeat Visits';	 //$datay[scans_]=$_datay;	 //$img_src = print_on_graph($datax,$datay,$x_axis_title,'members',"Repeat Visits");	 if(is_not_empty($_lst_points)){	 	 $datay[scans_]=$_datay;	   $img_src = print_on_graph($datax,$datay,$x_axis_title,'members',"Repeat Visits");	 }else{	 	$img_src ='';	 }	 $report_op=array('img_src'=>$img_src,'title'=>"Repeat Visits");	 $final_report['repeat_visit_report']=$report_op;	 	 	 return $final_report; 		}			//..third report	public function rpt_show_graph_promotion($time_period, $restaurant, $start_date='', $end_date='',$table='', $show_overall=0, $fts_graph_type=1){				$x_axis='';		$y_axis='';		$img_src = '';		$rpt_lbl_cond='';		if(is_not_empty($time_period)==false){			$time_period = 'month';		}				//..get groupon condition			if($time_period == 'day'){						$x_axis='day';			$x_axis_title = 'Date';				$date_cond = " DATE_FORMAT(`qrlog_in_time`, '%Y%m%d')";			$rpt_lbl_cond .='Daily scans';					}elseif($time_period == 'month'){			$date_cond = ' MONTH(`qrlog_in_time`)';			$x_axis='mon';			$x_axis_title = 'month';			$rpt_lbl_cond .='Monthly scans';		}elseif($time_period == 'week'){			$date_cond = ' WEEK(`qrlog_in_time`)';			$x_axis='wk_nm';			$x_axis_title = 'week';			$rpt_lbl_cond .='Weekly scans';		}elseif($time_period == 'year'){			$date_cond = ' YEAR(`qrlog_in_time`)';			$x_axis='yr';			$x_axis_title = 'year';			$rpt_lbl_cond .='Yearly scans';		} 		//..Table FILTER		if(is_gt_zero_num($table)){				$cond .= ' AND `'.QRLOG_TBL_ID.'` = '.$table.'';								$table_info=tbl_dining_table::GetInfo($table);				$rpt_lbl_cond .=' from '.$table_info["table_number"];		}					if(is_not_empty($start_date) && is_not_empty($end_date)){				$cond .= ' AND `pe`.`start_date` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `pe`.`start_date` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';				$rpt_lbl_cond .=' for period ['.date('m/d/y',strtotime($start_date)).' -'.date('m/d/y',strtotime($end_date)).'] ';		}			 $final_report=array();	 	 //..Option -1] No of promotions sent; Total no. of promotions claimed	 $qry = "SELECT 	 				 COUNT(`pe`.`crm_pr_ml_id`) as `prom_sent`,					 SUM(case when `pe`.`flg_send` = 1 then 1 else 0 end) as `claimed`					 FROM `crm_prom_emails` as `pe` 					 INNER JOIN `pds_list_promotions` `p`	ON `p`.`id`=	`pe`.`crm_pr_ml_promotion` 					 WHERE `p`.`prm_restaurent` = '".$_SESSION[SES_RESTAURANT]."' 					 AND (`pe`.`start_date` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `pe`.`start_date` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";  		//$final_report['new_joins']=$_lst_send_det['prom_sent'];						 	 $_lst_send_det=DB::ExecQry($qry,1);	 if(is_not_empty($_lst_send_det)){	 		$final_report['new_joins']=$_lst_send_det['prom_sent'];	 		$final_report['claimed']=$_lst_send_det['claimed'];	 }else{	 		$final_report['new_joins']=0;	 		$final_report['claimed']=0;	 }		 	 	 //..Option -2] also for each promotion we should have the numbers for total promotional emails sent and claimed or opened	 $qry = "SELECT 	 				 `pe`.`crm_pr_ml_promotion`,`p`.`title`,	 				 COUNT(`pe`.`crm_pr_ml_id`) as `prom_sent`,					 SUM(case when `pe`.`flg_send` = 1 then 1 else 0 end) as `claimed`					 FROM `crm_prom_emails` as `pe` 					 INNER JOIN `pds_list_promotions` `p`	ON `p`.`id`=	`pe`.`crm_pr_ml_promotion`					 WHERE 					 `p`.`prm_restaurent` = '".$_SESSION[SES_RESTAURANT]."' 					 AND (`pe`.`start_date` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `pe`.`start_date` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."')					 GROUP BY `pe`.`crm_pr_ml_promotion`;					 "; 		 	 $_lst_send_det=DB::ExecQry($qry);	 if(is_not_empty($_lst_send_det)){	 		$final_report['prom_wise_lst']=$_lst_send_det;	 			 }else{	 		$final_report['prom_wise_lst']=array();	 }	 		 //print_r($_lst_send_det);	 	 //..3]  in the graph form - pie chart claimed per promotion (every color will represent a different promotion and the number willrepresent the times it was claimed or opened)	 $qry = "SELECT 	 				 `pe`.`crm_pr_ml_promotion`,`p`.`title`,	 				 COUNT(`pe`.`flg_send`) as `claimed`					 FROM `crm_prom_emails` as `pe` 					 INNER JOIN `pds_list_promotions` `p`	ON `p`.`id`=	`pe`.`crm_pr_ml_promotion` 					 WHERE 					 `p`.`prm_restaurent` = '".$_SESSION[SES_RESTAURANT]."' 					 AND (`pe`.`start_date` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `pe`.`start_date` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."')					 GROUP BY `pe`.`crm_pr_ml_promotion`;";	 $res = mysql_query($qry); 		 //echo "qry=$qry";	 $cnt=0;	 $x_axis='crm_pr_ml_promotion';	 $x_axis_title = 'promotion';	 $rpt_lbl_cond ='Promotionwise claim';	 $report_op=self::getGrpahImage($res,'title',$x_axis_title,'claims',$rpt_lbl,$rpt_lbl_cond,$x_axis,'claimed',$show_overall,$time_period,1);	 $final_report['graph_prom_report']=$report_op;	 	 	 return $final_report;	}		//..following functions for the showing statistical graphs	public static function getGrpahImage($res,$group_on,$x_axis_title,$y_axis_title,$rpt_lbl,$rpt_lbl_cond,$x_axis,$y_axis,$show_overall,$time_period,$fts_graph_type){		$third_dimension='-'; 	 $report_op=array();	 $cnt=0;	 if(($res) && (mysql_num_rows($res)>0)){		$tmparr=array();		$tmparr1=array();		$_datay=array();		$grfld_arr=array(); 					while($row = mysql_fetch_assoc($res)){				/*if($time_period == 'day'){					$_tmp_val=$row['mon_num'].'/'.$row[$x_axis];					$tmparr1[$_tmp_val]=$_tmp_val;					}*/				$tmparr[$row[$x_axis]]=$row[$x_axis];									/*if(is_not_empty($group_on)){						if($group_on=='crm_pr_ml_promotion'){							$grfld_arr[$row["$group_on"]]=$row['title'];						}else{							$grfld_arr[$row["$group_on"]]=$row["$group_on"];						}						$_datay[$row["$group_on"]][$row[$x_axis]]=$row[$y_axis];				}else{						$_datay['scans'][$row[$x_axis]]=$row[$y_axis];//$row['no_of_recs'];					}					*/				if($fts_graph_type==1){						$legends[]=$row["$group_on"];				}						$_datay['scans'][$row[$x_axis]]=$row[$y_axis];//$row['no_of_recs'];				}						if(is_not_empty($tmparr)) {				$datax=array_keys($tmparr);		}		if(is_not_empty($tmparr1)) {				$datax1=array_keys($tmparr1);		}		unset($row);		/*				print_r($datax);		print_r($_datay);		print_r($grfld_arr);	*/			//..final logic to fetch based on the data based on the 3rd dimension 		$input_data=0;		$datay=array();		if(is_not_empty($_datay)){			foreach($_datay as $_third_dim => $row ){					$input_data=count($row);					//echo "$input_data //";					foreach($datax as $key =>$value){											$legend=$_third_dim.'_'.get_elipsis($grfld_arr[$_third_dim],20);												if(is_not_empty($row[$value])){							$datay[$legend][$key]=$row[$value];												}else{							$datay[$legend][$key]=0;	 						}										}			}		}			/*if($time_period == 'day'){			$datax=$datax1;		}*/				//print_r(array($datax,$datay,$legends));exit;			/*$datax=Array ('0' => 'March','1' => 'April');	 	$datay=Array (	'2_QOS_' => Array('0' =>3.4000,'1' =>0), 	'3_QOF_' => Array('0' =>3.6000,'1' =>0 ),	'4_Ambience_' => Array('0' =>3.0000,'1' =>0)	);		print_r($datax);	print_r($datay);*/	//print_r($datay);	//exit;	 if($fts_graph_type==0){	 		$img_src = print_on_graph($datax,$datay,$x_axis_title,$y_axis_title,"{$rpt_lbl} {$rpt_lbl_cond}");	 }else{	 	 if($input_data>0){		 		//$img_src = print_line_graph($datax,$datay,$x_axis_title,$y_axis_title,"{$rpt_lbl} {$rpt_lbl_cond}");				//$img_src = print_line_graph($datax,$datay,$x_axis_title,$y_axis_title,"{$rpt_lbl} {$rpt_lbl_cond}");				$datay=array_shift($datay);				$img_src =print_pie_chart($datay,$y_axis_title,$legends);		 }else{		 		$img_src ='';		 }	 	 	 }	 	 }else{	 	$img_src = "";	 }			 //return $img_src;	 $report_op=array('img_src'=>$img_src,'title'=>"{$rpt_lbl} {$rpt_lbl_cond}");	 return $report_op;		}		public static function get_daily_report($restaurant,$rest_name,$start_date,$end_date){		 //$rest_wise_report='<h1>'.$rest_name.'</h1><br> Date:'.date('m/d/Y',strtotime($start_date)).'<br>';			 $rest_wise_report='<h1>'.$rest_name.'</h1>';			 //..1] NO. OF SCANS			 if(is_not_empty($start_date) && is_not_empty($end_date)){					$cond = ' AND `'.QRLOG_IN_TIME.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.QRLOG_IN_TIME.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';		 }				 $qry = "SELECT SQL_NO_CACHE		 				 COUNT(`qrlog_id`) `no_of_recs`											 FROM `tbl_qrcode_log` l 						 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 						 WHERE `table_restaurant` = '".$restaurant."' {$cond}"; 		 $_tmp_var = DB::ExecScalarQry($qry,0);			 			 		 $qry = "SELECT SQL_NO_CACHE		 				 COUNT(`qrlog_id`) `no_of_recs`											 FROM `tbl_qrcode_log` l 						 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 						 WHERE `table_restaurant` = '".$restaurant."'"; 			 				 			 $rest_wise_report .= '<br><b>A] Number of scans/Total scans :</b>'.$_tmp_var.'/'.DB::ExecScalarQry($qry,0);			 		 //..1 a]		 $qry = "SELECT COUNT(`s`.`".SIGN_ID."`) as `sign_pg_visit`										 FROM `".TBL_OPEN_SIGNUP_PG."` `s`										 INNER JOIN `".TBL_DINING_TABLE."` `t` ON										 `t`.`".TABLE_ID."`=`s`.`".SIGN_TABLE_ID."`										 WHERE `t`.`".TABLE_RESTAURANT."`=".$restaurant." AND (`s`.`".SIGN_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `s`.`".SIGN_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";		$_tmp_var = DB::ExecScalarQry($qry,0);				$qry = "SELECT COUNT(`s`.`".SIGN_ID."`) as `sign_pg_visit`										 FROM `".TBL_OPEN_SIGNUP_PG."` `s`										 INNER JOIN `".TBL_DINING_TABLE."` `t` ON										 `t`.`".TABLE_ID."`=`s`.`".SIGN_TABLE_ID."`										 WHERE `t`.`".TABLE_RESTAURANT."`=".$restaurant.";";		$rest_wise_report .= '<br><b>B] Sign up accessed/Total accessed :</b>'.$_tmp_var.'/'.DB::ExecScalarQry($qry,0);											 		 	 		 		 //..2] New sign up		 //..   No. of new members joined loyalty program		 $cond = ' AND `'.STAFF_START_DATE.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.STAFF_START_DATE.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';		 		 $qry = "SELECT COUNT(`".TBL_STAFF."`.`".STAFF_ID."`) as `total_joins`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$restaurant." AND `".STAFF_IS_REWARD."`=1 ;";		 $_tmp_var = DB::ExecScalarQry($qry,0);			 						 $qry = "SELECT `".MEMBERS."`.`id`,`".MEMBERS."`.`email`,CONCAT(`".TBL_STAFF."`.`".STAFF_FNAME."`,' ',`".TBL_STAFF."`.`".STAFF_LNAME."`) `full_name`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$restaurant." AND `".STAFF_IS_REWARD."`=1 {$cond};";	   $new_joins=DB::ExecQry($qry,0);		 if(is_not_empty($new_joins)){		 		$rest_wise_report .= '<br><b>C] Number of sign-ups/Total sign-ups :</b> '.count($new_joins).'/'.$_tmp_var;				$rest_wise_report .= '<br>									<table border="1" style="border:1px solid gray;border-collapse:collapse;">									<tr>										<th bgcolor="orange">ID</th>										<th bgcolor="orange">Email</th>										<th bgcolor="orange">Name</th>				</tr>				';				foreach($new_joins as $_each_mem){						$rest_wise_report .='<tr><td>'. $_each_mem['id']. '</td><td>'.$_each_mem['email'].'</td><td>'.$_each_mem['full_name'].'</td></tr>';				}				$rest_wise_report .= '</table>';		 }else{		 		$rest_wise_report .= '<br><b>C] Number of sign-ups :</b> 0 ';		 }			 		 unset($new_joins);		 		 //..3] No. of loyalty points earned (in that date range);	$objbiz_checkins=new biz_checkins();	$arr_filter = array(SES_RESTAURANT=>$restaurant,'search_from_dt'=>$start_date,'search_to_dt'=>$end_date);	$biz_checkinslist = $objbiz_checkins->_get_award_redeem_history($arr_filter,$result_found,1);	if(is_not_empty($biz_checkinslist)){		 		$rest_wise_report .= '<b>D] Loyalty Points :</b> ';				$rest_wise_report .= '<br>									<table border="1" style="border:1px solid gray;border-collapse:collapse;">								<tr>										<th bgcolor="orange">Name</th>										<th bgcolor="orange">Email</th>										<th bgcolor="orange">Award Points</th>					<th bgcolor="orange">Promotion</th>					<th bgcolor="orange">Redeem Points</th>				</tr>				';				foreach($biz_checkinslist as $_each_rec){						$rest_wise_report .='<tr><td>'. $_each_rec['name']. '</td><td>'.$_each_rec['email'].'</td><td>'.$_each_rec['award_points'].'</td><td>'.$_each_rec['promotion'].'</td><td>'.$_each_rec['reward_point'].'</td></tr>';				}				$rest_wise_report .= '</table> <br>';		 }else{		 		$rest_wise_report .= '<br><b>C] Loyalty Points:</b> -- <br>';		 }			 unset($objbiz_checkins);		 		 return $rest_wise_report;	}	public static function get_daily_report_tpl($restaurant,$rest_name,$start_date,$end_date){		 //$rest_wise_report='<h1>'.$rest_name.'</h1><br> Date:'.date('m/d/Y',strtotime($start_date)).'<br>';			 //$rest_wise_report='<h1>'.$rest_name.'</h1>';			 $_final_report=array();		 //..1] NO. OF SCANS			 if(is_not_empty($start_date) && is_not_empty($end_date)){					$cond = ' AND `'.QRLOG_IN_TIME.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.QRLOG_IN_TIME.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';		 }				 $qry = "SELECT SQL_NO_CACHE		 				 COUNT(`qrlog_id`) `no_of_recs`											 FROM `tbl_qrcode_log` l 						 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 						 WHERE `table_restaurant` = '".$restaurant."' {$cond}"; 		 $_tmp_var = DB::ExecScalarQry($qry,0);			 			 		 $qry = "SELECT SQL_NO_CACHE		 				 COUNT(`qrlog_id`) `no_of_recs`											 FROM `tbl_qrcode_log` l 						 INNER JOIN `tbl_dining_table` t	ON `t`.`table_id`=	`l`.`qrlog_tbl_id` 						 WHERE `table_restaurant` = '".$restaurant."'"; 			 		 $_final_report['no_of_scans']=$_tmp_var;		 $_final_report['total_no_of_scans']=DB::ExecScalarQry($qry,0);		 		 		 //..1 a]		 $qry = "SELECT COUNT(`s`.`".SIGN_ID."`) as `sign_pg_visit`										 FROM `".TBL_OPEN_SIGNUP_PG."` `s`										 INNER JOIN `".TBL_DINING_TABLE."` `t` ON										 `t`.`".TABLE_ID."`=`s`.`".SIGN_TABLE_ID."`										 WHERE `t`.`".TABLE_RESTAURANT."`=".$restaurant." AND (`s`.`".SIGN_START_DATE."` >= '".date('Y-m-d 00:00:00',strtotime($start_date))."' AND `s`.`".SIGN_START_DATE."` <= '".date('Y-m-d 23:59:59',strtotime($end_date))."');";		$_tmp_var = DB::ExecScalarQry($qry,0);				$qry = "SELECT COUNT(`s`.`".SIGN_ID."`) as `sign_pg_visit`										 FROM `".TBL_OPEN_SIGNUP_PG."` `s`										 INNER JOIN `".TBL_DINING_TABLE."` `t` ON										 `t`.`".TABLE_ID."`=`s`.`".SIGN_TABLE_ID."`										 WHERE `t`.`".TABLE_RESTAURANT."`=".$restaurant.";";				$_final_report['sign_up_accessed']=$_tmp_var;									 		$_final_report['total_sign_up_accessed']=DB::ExecScalarQry($qry,0); 	 		 		 //..2] New sign up		 //..   No. of new members joined loyalty program		 $cond = ' AND `'.STAFF_START_DATE.'` >= \''.date('Y-m-d 00:00:00',strtotime($start_date)).'\''.RET.'AND `'.STAFF_START_DATE.'` <= \''.date('Y-m-d 23:59:59',strtotime($end_date)).'\'';		 		 $qry = "SELECT COUNT(`".TBL_STAFF."`.`".STAFF_ID."`) as `total_joins`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$restaurant." AND `".STAFF_IS_REWARD."`=1 ;";		 $_tmp_var = DB::ExecScalarQry($qry,0);			 						 $qry = "SELECT `".MEMBERS."`.`id`,`".MEMBERS."`.`email`,CONCAT(`".TBL_STAFF."`.`".STAFF_FNAME."`,' ',`".TBL_STAFF."`.`".STAFF_LNAME."`) `full_name`						FROM ".TBL_STAFF." 						INNER JOIN ".MEMBERS." ON 						".STAFF_MEMBER_ID."=".MEMBERS.".`id` 												WHERE `".STAFF_RESTAURENT."`=".$restaurant." AND `".STAFF_IS_REWARD."`=1 {$cond};";		 $_final_report['total_no_of_sign_ups']=$_tmp_var;			 $_final_report['sign_up_lst']=DB::ExecQry($qry,0);								 		 $_final_report['no_of_sign_ups']=count($_final_report['sign_up_lst']);		 		 	 		 unset($new_joins);		 		 //..3] No. of loyalty points earned (in that date range);	$objbiz_checkins=new biz_checkins();	$arr_filter = array(SES_RESTAURANT=>$restaurant,'search_from_dt'=>$start_date,'search_to_dt'=>$end_date);	$biz_checkinslist = $objbiz_checkins->_get_award_redeem_history($arr_filter,$result_found,1);	$_final_report['biz_checkinslist']=$biz_checkinslist;			 unset($objbiz_checkins);		 	 return $_final_report;	}	}//..End tbl_qrcode_log?>