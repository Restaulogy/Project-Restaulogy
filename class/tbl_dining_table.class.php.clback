<?php/**********************************************************************tbl_dining_table.class.phpGenerated by STRUCTY 2013.03.19 09:02:26.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_DINING_TABLE", "tbl_dining_table"); define('TABLE_ID', 'table_id'); define('TABLE_NUMBER', 'table_number'); define('TABLE_SEATING_CAPACITY', 'table_seating_capacity'); define('TABLE_TYPE', 'table_type'); define('TABLE_DESCIPTION', 'table_desciption'); define('TABLE_RESTAURANT', 'table_restaurant'); define('TABLE_QR_CODE_LINK', 'table_qr_code_link'); define('TABLE_START_DATE', 'table_start_date'); define('TABLE_END_DATE', 'table_end_date'); define("TBL_DINING_TABLE_ACTIVE_DATE", "table_start_date");define("TBL_DINING_TABLE_DEACTIVE_DATE", "table_end_date");$tbl_dining_table_active_condition= " (".TBL_DINING_TABLE_DEACTIVE_DATE." is NULL OR ".TBL_DINING_TABLE_DEACTIVE_DATE." = 0 OR ".TBL_DINING_TABLE_DEACTIVE_DATE." > CURDATE( )) ";class tbl_dining_table {	private $table_id;	private $table_number;	private $table_seating_capacity;	private $table_type;	private $table_desciption;	private $table_restaurant;	private $table_qr_code_link;	private $table_start_date;	private $table_end_date;	private $tbl_dining_table_active_date;	private $tbl_dining_table_deactive_date;	public function settable_id($pArg="0") {$this->table_id=$pArg;}	public function settable_number($pArg="0") {$this->table_number=$pArg;}	public function settable_seating_capacity($pArg="0") {$this->table_seating_capacity=$pArg;}	public function settable_type($pArg="0") {$this->table_type=$pArg;}	public function settable_desciption($pArg="0") {$this->table_desciption=$pArg;}	public function settable_restaurant($pArg="0") {$this->table_restaurant=$pArg;}	public function settable_qr_code_link($pArg="0") {$this->table_qr_code_link=$pArg;}	public function settable_start_date($pArg="0") {$this->table_start_date=$pArg;}	public function settable_end_date($pArg="0") {$this->table_end_date=$pArg;}	public function settbl_dining_table_active_date($pArg="0") {$this->tbl_dining_table_active_date=$pArg;}	public function settbl_dining_table_deactive_date($pArg="0") {$this->tbl_dining_table_deactive_date=$pArg;}	public function gettable_id() {return $this->table_id;}	public function gettable_number() {return $this->table_number;}	public function gettable_seating_capacity() {return $this->table_seating_capacity;}	public function gettable_type() {return $this->table_type;}	public function gettable_desciption() {return $this->table_desciption;}	public function gettable_restaurant() {return $this->table_restaurant;}	public function gettable_qr_code_link() {return $this->table_qr_code_link;}	public function gettable_start_date() {return $this->table_start_date;}	public function gettable_end_date() {return $this->table_end_date;}	public function gettbl_dining_table_active_date($pArg="0") {return $this->tbl_dining_table_active_date;}	public function gettbl_dining_table_deactive_date($pArg="0") {return $this->tbl_dining_table_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_DINING_TABLE.RET;		$and = "WHERE".RET;		if($array[TABLE_ID] != "") {			$qry .= $and.TABLE_ID." = '".$array[TABLE_ID]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_NUMBER] != "") {			$qry .= $and.TABLE_NUMBER." = '".$array[TABLE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_SEATING_CAPACITY] != "") {			$qry .= $and.TABLE_SEATING_CAPACITY." = '".$array[TABLE_SEATING_CAPACITY]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_TYPE] != "") {			$qry .= $and.TABLE_TYPE." = '".$array[TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_DESCIPTION] != "") {			$qry .= $and.TABLE_DESCIPTION." = '".$array[TABLE_DESCIPTION]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_RESTAURANT] != "") {			$qry .= $and.TABLE_RESTAURANT." = '".$array[TABLE_RESTAURANT]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_QR_CODE_LINK] != "") {			$qry .= $and.TABLE_QR_CODE_LINK." = '".$array[TABLE_QR_CODE_LINK]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_START_DATE] != "") {			$qry .= $and.TABLE_START_DATE." = '".$array[TABLE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_END_DATE] != "") {			$qry .= $and.TABLE_END_DATE." = '".$array[TABLE_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->settable_id($record[TABLE_ID]);				$this->settable_number($record[TABLE_NUMBER]);				$this->settable_seating_capacity($record[TABLE_SEATING_CAPACITY]);				$this->settable_type($record[TABLE_TYPE]);				$this->settable_desciption($record[TABLE_DESCIPTION]);				$this->settable_restaurant($record[TABLE_RESTAURANT]);				$this->settable_qr_code_link($record[TABLE_QR_CODE_LINK]);				$this->settable_start_date($record[TABLE_START_DATE]);				$this->settable_end_date($record[TABLE_END_DATE]);				$this->settbl_dining_table_active_date($record[TBL_DINING_TABLE_ACTIVE_DATE]);				$this->settbl_dining_table_deactive_date($record[TBL_DINING_TABLE_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_dining_table_active_condition;		$qry = "SELECT *, tbl_type_name ".RET."FROM ".TBL_DINING_TABLE." INNER JOIN ".TBL_TABLE_TYPE." ON ".TABLE_TYPE."=".TBL_TYPE_ID.RET;		$and = "WHERE".RET;		if($array[TABLE_ID] != "") {			$qry .= $and.TABLE_ID." = '".$array[TABLE_ID]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_NUMBER] != "") {			$qry .= $and.TABLE_NUMBER." = '".$array[TABLE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_SEATING_CAPACITY] != "") {			$qry .= $and.TABLE_SEATING_CAPACITY." = '".$array[TABLE_SEATING_CAPACITY]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_TYPE] != "") {			$qry .= $and.TABLE_TYPE." = '".$array[TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_DESCIPTION] != "") {			$qry .= $and.TABLE_DESCIPTION." = '".$array[TABLE_DESCIPTION]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_RESTAURANT] != "") {			$qry .= $and.TABLE_RESTAURANT." = '".$array[TABLE_RESTAURANT]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_QR_CODE_LINK] != "") {			$qry .= $and.TABLE_QR_CODE_LINK." = '".$array[TABLE_QR_CODE_LINK]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_START_DATE] != "") {			$qry .= $and.TABLE_START_DATE." = '".$array[TABLE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_END_DATE] != "") {			$qry .= $and.TABLE_END_DATE." = '".$array[TABLE_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_dining_table_active_condition;;		}		if(is_not_empty($array["offset"]) && is_not_empty($array["limit"])) {			$qry_with_limit  = $qry." LIMIT ".$array["offset"].",".$array["limit"];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		$result_found = mysql_num_rows($r1);		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;								//..check deactive date is not set or 0				  				if((is_not_empty($record[TBL_DINING_TABLE_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_DINING_TABLE_DEACTIVE_DATE]))==false)){					$isActive = 1; 									}else{					//..check the deactive date is greater than todays date										if(strtotime($record[TBL_DINING_TABLE_DEACTIVE_DATE]) >= strtotime(date("Y-m-d h:i:s"))){						$isActive = 1;						 					}				}				if($isArray){					$class_object = array();					$class_object["table_id"]=$record[TABLE_ID];					$class_object["table_number"]=$record[TABLE_NUMBER];					$class_object["table_seating_capacity"]=$record[TABLE_SEATING_CAPACITY];					$class_object["table_type"]=$record[TABLE_TYPE];					$class_object["table_desciption"]=$record[TABLE_DESCIPTION];					$class_object["table_restaurant"]=$record[TABLE_RESTAURANT];					$class_object["table_qr_code_link"]=$record[TABLE_QR_CODE_LINK];					$class_object["table_start_date"]=$record[TABLE_START_DATE];					$class_object["table_end_date"]=$record[TABLE_END_DATE];							$class_object['table_type_name'] = $record['tbl_type_name'];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_dining_table();					$class_object->settable_id($record[TABLE_ID]);					$class_object->settable_number($record[TABLE_NUMBER]);					$class_object->settable_seating_capacity($record[TABLE_SEATING_CAPACITY]);					$class_object->settable_type($record[TABLE_TYPE]);					$class_object->settable_desciption($record[TABLE_DESCIPTION]);					$class_object->settable_restaurant($record[TABLE_RESTAURANT]);					$class_object->settable_qr_code_link($record[TABLE_QR_CODE_LINK]);					$class_object->settable_start_date($record[TABLE_START_DATE]);					$class_object->settable_end_date($record[TABLE_END_DATE]);				}				$class_objects[$record[TABLE_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->gettable_id() != '') {			$qry  = "UPDATE ".TBL_DINING_TABLE.RET."SET".RET."			".TABLE_ID." = '".$this->gettable_id()."',".RET."			".TABLE_NUMBER." = '".$this->gettable_number()."',".RET."			".TABLE_SEATING_CAPACITY." = '".$this->gettable_seating_capacity()."',".RET."			".TABLE_TYPE." = '".$this->gettable_type()."',".RET."			".TABLE_DESCIPTION." = '".$this->gettable_desciption()."',".RET."			".TABLE_RESTAURANT." = '".$this->gettable_restaurant()."',".RET."			".TABLE_QR_CODE_LINK." = '".$this->gettable_qr_code_link()."',".RET."			".TABLE_START_DATE." = '".$this->gettable_start_date()."',".RET."			".TABLE_END_DATE." = '".$this->gettable_end_date()."'".RET.			"WHERE ".TABLE_ID." = ".$this->gettable_id().RET;			 			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_DINING_TABLE." (".RET.			"".TABLE_NUMBER.", ".TABLE_SEATING_CAPACITY.", ".TABLE_TYPE.", ".TABLE_DESCIPTION.", ".TABLE_RESTAURANT.", ".TABLE_QR_CODE_LINK.", ".TABLE_START_DATE.", ".TABLE_END_DATE.RET.				") VALUES (".RET.			"'".$this->gettable_number()."',".RET.			"'".$this->gettable_seating_capacity()."',".RET.			"'".$this->gettable_type()."',".RET.			"'".$this->gettable_desciption()."',".RET.			"'".$this->gettable_restaurant()."',".RET.			"'".$this->gettable_qr_code_link()."',".RET.			"'".$this->gettable_start_date()."',".RET.			"'".$this->gettable_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->settable_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_DINING_TABLE.RET;		$and = "WHERE".RET;		if($array[TABLE_ID] != "") {			//$qry .= $and.TABLE_ID." = '".$array[TABLE_ID]."'".RET;			$qry .= $and.TABLE_ID." IN (".$array[TABLE_ID].")".RET;			$and = "AND".RET;		}		if($array[TABLE_NUMBER] != "") {			$qry .= $and.TABLE_NUMBER." = '".$array[TABLE_NUMBER]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_SEATING_CAPACITY] != "") {			$qry .= $and.TABLE_SEATING_CAPACITY." = '".$array[TABLE_SEATING_CAPACITY]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_TYPE] != "") {			$qry .= $and.TABLE_TYPE." = '".$array[TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_DESCIPTION] != "") {			$qry .= $and.TABLE_DESCIPTION." = '".$array[TABLE_DESCIPTION]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_RESTAURANT] != "") {			$qry .= $and.TABLE_RESTAURANT." = '".$array[TABLE_RESTAURANT]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_QR_CODE_LINK] != "") {			$qry .= $and.TABLE_QR_CODE_LINK." = '".$array[TABLE_QR_CODE_LINK]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_START_DATE] != "") {			$qry .= $and.TABLE_START_DATE." = '".$array[TABLE_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TABLE_END_DATE] != "") {			$qry .= $and.TABLE_END_DATE." = '".$array[TABLE_END_DATE]."'".RET;			$and = "AND".RET;		}		mysql_query($qry);	}//..End Delete	public function isAlreadyThere($table_number ,$table_seating_capacity ,$table_type ,$table_desciption ,$table_restaurant ,$table_qr_code_link ,$table_start_date ,$table_end_date) {		$unique_arr = array();			//$unique_arr[TABLE_ID]=$table_id;			 $unique_arr[TABLE_NUMBER]=$table_number;			//$unique_arr[TABLE_SEATING_CAPACITY]=$table_seating_capacity;			//$unique_arr[TABLE_TYPE]=$table_type;			//$unique_arr[TABLE_DESCIPTION]=$table_desciption;			 $unique_arr[TABLE_RESTAURANT]=$table_restaurant;			//$unique_arr[TABLE_QR_CODE_LINK]=$table_qr_code_link;			//$unique_arr[TABLE_START_DATE]=$table_start_date;			//$unique_arr[TABLE_END_DATE]=$table_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($table_number ,$table_seating_capacity ,$table_type ,$table_desciption ,$table_restaurant ,$table_qr_code_link ,$table_start_date ,$table_end_date) {		if(is_not_empty($table_number)){			if($this->isAlreadyThere($table_number ,$table_seating_capacity ,$table_type ,$table_desciption ,$table_restaurant ,$table_qr_code_link ,$table_start_date ,$table_end_date)){				return -1;			}else{				$this->settable_id("");				$this->settable_number($table_number);				$this->settable_seating_capacity($table_seating_capacity);				$this->settable_type($table_type);				$this->settable_desciption($table_desciption);				$this->settable_restaurant($table_restaurant); 				$this->settable_start_date(date(DATE_FORMAT));				$this->settable_end_date($table_end_date);				$this->insert(); 				if(is_gt_zero_num($this->gettable_id())){					$this->saveQRCode($this->gettable_id());				}				return $this->gettable_id();			}		}	}//..create	public function update($table_id, $table_number, $table_seating_capacity, $table_type, $table_desciption, $table_restaurant, $table_qr_code_link, $table_start_date, $table_end_date) {		if(is_gt_zero_num($table_id)){			if ($this->readObject(array(TABLE_ID=>$table_id))){				$this->settable_number($table_number);				$this->settable_seating_capacity($table_seating_capacity);				$this->settable_type($table_type);				$this->settable_desciption($table_desciption);				$this->settable_restaurant($table_restaurant);  				$this->insert();				return 1;			}		}		return 0;	}//..update	public function activate($table_id){		if(is_gt_zero_num($table_id)){			if ($this->readObject(array(TABLE_ID=>$table_id))){				$qry  = "UPDATE ".TBL_DINING_TABLE.RET."SET".RET."			".TBL_DINING_TABLE_DEACTIVE_DATE." = '".date("0000-00-00")."' WHERE ".TABLE_ID."={$table_id}";			 				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($table_ids){		if(is_not_empty($table_ids)){			 				$qry  = "UPDATE ".TBL_DINING_TABLE.RET."SET".RET."			".TBL_DINING_TABLE_DEACTIVE_DATE." = '".date("Y-m-d",strtotime("-1 day"))."' WHERE ".TABLE_ID."={$table_id}"; 				$res = mysql_query($qry);				if($res){					tbl_emp_shift_table::delete(array(EMP_SFT_TBL_TABLE=>$table_id,'newer_only'=>1));					return 1;				} 		}		return 0;	}//..end deactivate	public static function GetInfo($table_id) {		$info = array();		if($table_id != ""){		$obj = new tbl_dining_table();			if($obj->readObject(array("table_id"=>$table_id))){				 $info['id'] =$obj->gettable_id(); 				 $info['number']=$obj->gettable_number();				 $info['description']=$obj->gettable_desciption();				 $info['restaurant']=$obj->gettable_restaurant();				 $info['qr_code_link']=$obj->gettable_qr_code_link(); 				 $info['qr_code_img'] = generate_qr_code($info['qr_code_link']);				 $info['start_date']=$obj->gettable_start_date();				 $info['end_date']= $obj->gettable_end_date();				 				 $info['friendly_start_date']=friendly_time(strtotime($obj->gettable_start_date()));				 $info['friendly_end_date']=friendly_time(strtotime($obj->gettable_end_date()));				$info["table_id"]=$obj->gettable_id();				$info["table_number"]=$obj->gettable_number();				$info["table_seating_capacity"]=$obj->gettable_seating_capacity();				$info["table_type"]=$obj->gettable_type();				                //..Get the table types from the 'tbl_table_type'                $table_types = tbl_table_type::readArray(array("isActive"=>1,"tbl_type_id"=>$info["table_type"]));                if(is_not_empty($table_types)){                      $info["table_type_details"]=array_shift($table_types);                }                				$info["table_desciption"]=$obj->gettable_desciption();				$info["table_restaurant"]=$obj->gettable_restaurant();				$info["table_qr_code_link"]=$obj->gettable_qr_code_link();				$info['table_qr_code_img'] = generate_qr_code($info['table_qr_code_link']);				$info["table_start_date"]=$obj->gettable_start_date();				$info["table_end_date"]=$obj->gettable_end_date();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if(is_not_empty($obj->gettbl_dining_table_deactive_date())==false  || strtotime($obj->gettbl_dining_table_deactive_date()) == 0){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj->gettbl_dining_table_deactive_date()) >= strtotime(date("Y-m-d h:i:s"))){						$info["isActive"] = 1;					}				}			}			unset($obj); 		}		return $info;	}//..End GetInfo		///..old coding		public function saveQRCode($id){		global $website, $CONFIG;		if(is_gt_zero_num($id)){		   if($this->readObject(array("table_id"=>$id))){ 		   	   $qr_code_link = sprintf($CONFIG->QR_CODE_LINK,$id);		   	   $this->settable_qr_code_link($qr_code_link);			   $this->insert();		   }		}		return false;	}		public function GetAll($url="",$offset=0,$limit=10){	 	$info = array();  	    $results_count =0;		$array = array("offset"=>$offset,"limit"=>$limit); 		$tables = $this->readArray( $array, $results_count,1);  					if(is_gt_zero_num($results_count)){            $info['pagination'] = biz_pagination(		   							array(										"offset_word" =>"offset", 										"url"=>$url,										"limit"=>$limit,										"offset"=>$offset,										"count"=>$results_count 										 									)								); 		   $info['tables'] = $tables; 		}		 		$info['result_count'] = $results_count;	return $info;	} 			public static function GetActiveDiningTables(){		$arr = array();		$res = mysql_query('SELECT table_id,table_number FROM '.TBL_DINING_TABLE.' WHERE '.TABLE_RESTAURANT.'='.$_SESSION[SES_RESTAURANT].' AND table_start_date > 0 AND ( table_end_date > CURDATE() OR table_end_date =0 OR table_end_date IS NULL)');	 		if($res){			while($row=mysql_fetch_assoc($res)){				$arr[$row['table_id']] = $row['table_number'];			}		}		return $arr;	}		public static function GetFields($data = array()){		global $tbl_dining_table_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry = 'SELECT '.$data['key_field'].','.$data['value_field'].' FROM '.TBL_DINING_TABLE.' WHERE '.TABLE_RESTAURANT.'='.$_SESSION[SES_RESTAURANT];			if(is_gt_zero_num($data['isActive'])){				$qry  .= ' AND '.$tbl_dining_table_active_condition;			} 			 			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}		 }//..End tbl_dining_table?>