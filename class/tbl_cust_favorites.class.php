<?php/**********************************************************************tbl_cust_favorites.class.phpGenerated by STRUCTY 2013.08.01 11:06:35.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_CUST_FAVORITES", "tbl_cust_favorites"); define('CUST_FAV_ID', 'cust_fav_id'); define('CUST_FAV_POST_ID', 'cust_fav_post_id'); define('CUST_FAV_POST_TYPE', 'cust_fav_post_type'); define('CUST_FAV_DESC', 'cust_fav_desc'); define('CUST_FAV_USER', 'cust_fav_user'); define('CUST_FAV_START_DATE', 'cust_fav_start_date'); define('CUST_FAV_END_DATE', 'cust_fav_end_date'); define("TBL_CUST_FAVORITES_ACTIVE_DATE",  CUST_FAV_START_DATE);define("TBL_CUST_FAVORITES_DEACTIVE_DATE",  CUST_FAV_END_DATE);$tbl_cust_favorites_active_condition= " (".TBL_CUST_FAVORITES_DEACTIVE_DATE." is NULL OR ".TBL_CUST_FAVORITES_DEACTIVE_DATE." = 0 OR ".TBL_CUST_FAVORITES_DEACTIVE_DATE." > CURDATE( )) ";class tbl_cust_favorites {	private $cust_fav_id;	private $cust_fav_post_id;	private $cust_fav_post_type;	private $cust_fav_desc;	private $cust_fav_user;	private $cust_fav_start_date;	private $cust_fav_end_date;	private $tbl_cust_favorites_active_date;	private $tbl_cust_favorites_deactive_date;	public function setcust_fav_id($pArg="0") {$this->cust_fav_id=$pArg;}	public function setcust_fav_post_id($pArg="0") {$this->cust_fav_post_id=$pArg;}	public function setcust_fav_post_type($pArg="0") {$this->cust_fav_post_type=$pArg;}	public function setcust_fav_desc($pArg="0") {$this->cust_fav_desc=$pArg;}	public function setcust_fav_user($pArg="0") {$this->cust_fav_user=$pArg;}	public function setcust_fav_start_date($pArg="0") {$this->cust_fav_start_date=$pArg;}	public function setcust_fav_end_date($pArg="0") {$this->cust_fav_end_date=$pArg;}	public function settbl_cust_favorites_active_date($pArg="0") {$this->tbl_cust_favorites_active_date=$pArg;}	public function settbl_cust_favorites_deactive_date($pArg="0") {$this->tbl_cust_favorites_deactive_date=$pArg;}	public function getcust_fav_id() {return $this->cust_fav_id;}	public function getcust_fav_post_id() {return $this->cust_fav_post_id;}	public function getcust_fav_post_type() {return $this->cust_fav_post_type;}	public function getcust_fav_desc() {return $this->cust_fav_desc;}	public function getcust_fav_user() {return $this->cust_fav_user;}	public function getcust_fav_start_date() {return $this->cust_fav_start_date;}	public function getcust_fav_end_date() {return $this->cust_fav_end_date;}	public function gettbl_cust_favorites_active_date($pArg="0") {return $this->tbl_cust_favorites_active_date;}	public function gettbl_cust_favorites_deactive_date($pArg="0") {return $this->tbl_cust_favorites_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT `cust_fav_id`,`cust_fav_post_id`,`cust_fav_post_type`,`cust_fav_user`, `cust_fav_desc`, CONCAT(staff_fname,' ',staff_lname) 'customer' , `cust_fav_start_date` , CASE cust_fav_post_type WHEN  'SUBMENU_DISH' THEN 'Menu Dish'		ELSE '--' END as `type_title`, CASE cust_fav_post_type WHEN  'SUBMENU_DISH' THEN (SELECT `dish_name` FROM ".TBL_SUBMENU_DISHES." INNER JOIN ".TBL_DISHES." ON `sbmnu_dish_dish`=`dish_id` WHERE `sbmnu_dish_id`=`cust_fav_post_id` ) ELSE '--' END as `post_title` ".RET."FROM ".TBL_CUST_FAVORITES." INNER JOIN ".TBL_STAFF." ON `cust_fav_user` = `staff_member_id` ".RET;		$and = "WHERE".RET;		if($array[CUST_FAV_ID] != "") {			$qry .= $and.CUST_FAV_ID." = '".$array[CUST_FAV_ID]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_ID] != "") {			$qry .= $and.CUST_FAV_POST_ID." = '".$array[CUST_FAV_POST_ID]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_TYPE] != "") {			$qry .= $and.CUST_FAV_POST_TYPE." = '".$array[CUST_FAV_POST_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_DESC] != "") {			$qry .= $and.CUST_FAV_DESC." = '".$array[CUST_FAV_DESC]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_USER] != "") {			$qry .= $and.CUST_FAV_USER." = '".$array[CUST_FAV_USER]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_START_DATE] != "") {			$qry .= $and.CUST_FAV_START_DATE." = '".$array[CUST_FAV_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_END_DATE] != "") {			$qry .= $and.CUST_FAV_END_DATE." = '".$array[CUST_FAV_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setcust_fav_id($record[CUST_FAV_ID]);				$this->setcust_fav_post_id($record[CUST_FAV_POST_ID]);				$this->setcust_fav_post_type($record[CUST_FAV_POST_TYPE]);				$this->setcust_fav_desc($record[CUST_FAV_DESC]);				$this->setcust_fav_user($record[CUST_FAV_USER]);				$this->setcust_fav_start_date($record[CUST_FAV_START_DATE]);				$this->setcust_fav_end_date($record[CUST_FAV_END_DATE]);				$this->settbl_cust_favorites_active_date($record[TBL_CUST_FAVORITES_ACTIVE_DATE]);				$this->settbl_cust_favorites_deactive_date($record[TBL_CUST_FAVORITES_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_cust_favorites_active_condition;		$qry = 'SELECT `cust_fav_id`,`cust_fav_post_id`,`cust_fav_post_type`,`cust_fav_user`, `cust_fav_desc`, CONCAT(staff_fname,\' \',staff_lname) \'customer\' , `cust_fav_start_date` , CASE cust_fav_post_type WHEN  \'SUBMENU_DISH\' THEN \'Menu Dish\' ELSE \'--\' END as `type_title`, CASE cust_fav_post_type WHEN  \'SUBMENU_DISH\' THEN (SELECT `dish_name` FROM '.TBL_SUBMENU_DISHES.' INNER JOIN '.TBL_DISHES.' ON `sbmnu_dish_dish`=`dish_id` WHERE `sbmnu_dish_id`=`cust_fav_post_id` ) ELSE \'--\' END as `post_title` '.RET.'FROM '.TBL_CUST_FAVORITES.' INNER JOIN '.TBL_STAFF.' ON `cust_fav_user` = `staff_member_id` INNER JOIN '.MEMBERS.' ON `staff_member_id` = `id`'.RET;				/*echo $qry;*/		$and = "WHERE".RET;		if($array[CUST_FAV_ID] != "") {			$qry .= $and.CUST_FAV_ID." = '".$array[CUST_FAV_ID]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_ID] != "") {			$qry .= $and.CUST_FAV_POST_ID." = '".$array[CUST_FAV_POST_ID]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_TYPE] != "") {			$qry .= $and.CUST_FAV_POST_TYPE." = '".$array[CUST_FAV_POST_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_DESC] != "") {			$qry .= $and.CUST_FAV_DESC." = '".$array[CUST_FAV_DESC]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_USER] != "") {			$qry .= $and.CUST_FAV_USER." = '".$array[CUST_FAV_USER]."'".RET;			$and = "AND".RET;		}				if($array['customer'] != "") {			$qry .= $and.' ('.STAFF_FNAME.' LIKE \''.$array['customer'].'\' OR '.STAFF_LNAME.' LIKE \''.$array['customer'].'\' OR CONCAT(staff_fname,\' \',staff_lname) LIKE \''.$array['customer'].'\' OR CONCAT(staff_lname,\' \',staff_fname) LIKE \''.$array['customer'].'\' OR  email LIKE \''.$array['customer'].'\') '.RET;			$and = "AND".RET;		}		if($array[CUST_FAV_START_DATE] != "") {			$qry .= $and.CUST_FAV_START_DATE." = '".$array[CUST_FAV_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_END_DATE] != "") {			$qry .= $and.CUST_FAV_END_DATE." = '".$array[CUST_FAV_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_cust_favorites_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		  		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_CUST_FAVORITES_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_CUST_FAVORITES_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_CUST_FAVORITES_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["cust_fav_id"]=$record[CUST_FAV_ID];					$class_object["cust_fav_post_id"]=$record[CUST_FAV_POST_ID];					$class_object["cust_fav_post_type"]=$record[CUST_FAV_POST_TYPE];					$class_object["cust_fav_desc"]=$record[CUST_FAV_DESC];					$class_object["cust_fav_user"]=$record[CUST_FAV_USER];					$class_object["cust_fav_start_date"]=$record[CUST_FAV_START_DATE];					$class_object["cust_fav_end_date"]=$record[CUST_FAV_END_DATE];					$class_object["friendly_start_date"]=friendly_time($record[CUST_FAV_START_DATE],1); 					$class_object["customer"]=$record["customer"]; 					$class_object["post_title"]=$record['post_title']; 					$class_object['type_title'] = $record['type_title'];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_cust_favorites();					$class_object->setcust_fav_id($record[CUST_FAV_ID]);					$class_object->setcust_fav_post_id($record[CUST_FAV_POST_ID]);					$class_object->setcust_fav_post_type($record[CUST_FAV_POST_TYPE]);					$class_object->setcust_fav_desc($record[CUST_FAV_DESC]);					$class_object->setcust_fav_user($record[CUST_FAV_USER]);					$class_object->setcust_fav_start_date($record[CUST_FAV_START_DATE]);					$class_object->setcust_fav_end_date($record[CUST_FAV_END_DATE]);				}				$class_objects[$record[CUST_FAV_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getcust_fav_id() != '') {			$qry  = "UPDATE ".TBL_CUST_FAVORITES.RET."SET".RET."			".CUST_FAV_ID." = '".$this->getcust_fav_id()."',".RET."			".CUST_FAV_POST_ID." = '".$this->getcust_fav_post_id()."',".RET."			".CUST_FAV_POST_TYPE." = '".$this->getcust_fav_post_type()."',".RET."			".CUST_FAV_DESC." = '".$this->getcust_fav_desc()."',".RET."			".CUST_FAV_USER." = '".$this->getcust_fav_user()."',".RET."			".CUST_FAV_START_DATE." = '".$this->getcust_fav_start_date()."',".RET."			".CUST_FAV_END_DATE." = '".$this->getcust_fav_end_date()."'".RET.			"WHERE ".CUST_FAV_ID." = ".$this->getcust_fav_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_CUST_FAVORITES." (".RET.			"".CUST_FAV_POST_ID.", ".CUST_FAV_POST_TYPE.", ".CUST_FAV_DESC.", ".CUST_FAV_USER.", ".CUST_FAV_START_DATE.", ".CUST_FAV_END_DATE.RET.				") VALUES (".RET.			"'".$this->getcust_fav_post_id()."',".RET.			"'".$this->getcust_fav_post_type()."',".RET.			"'".$this->getcust_fav_desc()."',".RET.			"'".$this->getcust_fav_user()."',".RET.			"'".$this->getcust_fav_start_date()."',".RET.			"'".$this->getcust_fav_end_date()."'".RET.			")".RET; 			$res = mysql_query($qry);			$this->setcust_fav_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_CUST_FAVORITES.RET;		$and = "WHERE".RET;		if($array[CUST_FAV_ID] != "") {			$qry .= $and.CUST_FAV_ID." IN (".$array[CUST_FAV_ID].")".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_ID] != "") {			$qry .= $and.CUST_FAV_POST_ID." = '".$array[CUST_FAV_POST_ID]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_POST_TYPE] != "") {			$qry .= $and.CUST_FAV_POST_TYPE." = '".$array[CUST_FAV_POST_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_DESC] != "") {			$qry .= $and.CUST_FAV_DESC." = '".$array[CUST_FAV_DESC]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_USER] != "") {			$qry .= $and.CUST_FAV_USER." = '".$array[CUST_FAV_USER]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_START_DATE] != "") {			$qry .= $and.CUST_FAV_START_DATE." = '".$array[CUST_FAV_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[CUST_FAV_END_DATE] != "") {			$qry .= $and.CUST_FAV_END_DATE." = '".$array[CUST_FAV_END_DATE]."'".RET;			$and = "AND".RET;		} 		 		$res = mysql_query($qry);				if($res){			return OPERATION_SUCCESS;		} 		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($cust_fav_post_id ,$cust_fav_post_type ,$cust_fav_desc ,$cust_fav_user ) {		$unique_arr = array();			//$unique_arr[CUST_FAV_ID]=$cust_fav_id;			 $unique_arr[CUST_FAV_POST_ID]=$cust_fav_post_id;			 $unique_arr[CUST_FAV_POST_TYPE]=$cust_fav_post_type;			//$unique_arr[CUST_FAV_DESC]=$cust_fav_desc;			 $unique_arr[CUST_FAV_USER]=$cust_fav_user;			//$unique_arr[CUST_FAV_START_DATE]=$cust_fav_start_date;			//$unique_arr[CUST_FAV_END_DATE]=$cust_fav_end_date;		 		if(is_not_empty($unique_arr)){ 			return $this->readObject($unique_arr); 		}		return false;	}//..isAlreadyThere	public function create($cust_fav_post_id,$cust_fav_user ,$cust_fav_desc='' ,$cust_fav_post_type='SUBMENU_DISH') {				if(is_gt_zero_num($cust_fav_post_id)&& is_gt_zero_num($cust_fav_user)){			 			if($this->isAlreadyThere($cust_fav_post_id ,$cust_fav_post_type ,$cust_fav_desc ,$cust_fav_user)){ 				return OPERATION_DUPLICATE;			}else{								$this->setcust_fav_id("");				$this->setcust_fav_post_id($cust_fav_post_id);				$this->setcust_fav_post_type($cust_fav_post_type);				$this->setcust_fav_desc($cust_fav_desc);				$this->setcust_fav_user($cust_fav_user);				$this->setcust_fav_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getcust_fav_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($cust_fav_id, $cust_fav_post_id, $cust_fav_post_type, $cust_fav_desc, $cust_fav_user) {		if(is_gt_zero_num($cust_fav_id)){			if ($this->readObject(array(CUST_FAV_ID=>$cust_fav_id))){				$this->setcust_fav_post_id($cust_fav_post_id);				$this->setcust_fav_post_type($cust_fav_post_type);				$this->setcust_fav_desc($cust_fav_desc);				$this->setcust_fav_user($cust_fav_user);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($cust_fav_id){		if(is_gt_zero_num($cust_fav_id)){			if ($this->readObject(array(CUST_FAV_ID=>$cust_fav_id))){				$qry  = "UPDATE ".TBL_CUST_FAVORITES.RET."SET".RET."			".TBL_CUST_FAVORITES_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".CUST_FAV_ID."={$cust_fav_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($cust_fav_id){		if(is_gt_zero_num($cust_fav_id)){			if ($this->readObject(array(CUST_FAV_ID=>$cust_fav_id))){				$qry  = "UPDATE ".TBL_CUST_FAVORITES.RET."SET".RET."			".TBL_CUST_FAVORITES_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".CUST_FAV_ID."={$cust_fav_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($cust_fav_id) {		$info = array();		if($cust_fav_id != ""){			$obj_tbl_cust_favorites = new tbl_cust_favorites();			if($obj_tbl_cust_favorites->readObject(array("cust_fav_id"=>$cust_fav_id))){				$info["cust_fav_id"]=$obj_tbl_cust_favorites->getcust_fav_id();				$info["cust_fav_post_id"]=$obj_tbl_cust_favorites->getcust_fav_post_id();				$info["cust_fav_post_type"]=$obj_tbl_cust_favorites->getcust_fav_post_type();				$info["cust_fav_desc"]=$obj_tbl_cust_favorites->getcust_fav_desc();				$info["cust_fav_user"]=$obj_tbl_cust_favorites->getcust_fav_user();				$info["cust_fav_start_date"]=$obj_tbl_cust_favorites->getcust_fav_start_date();				$info["cust_fav_end_date"]=$obj_tbl_cust_favorites->getcust_fav_end_date();				$info['friendly_start_date']=friendly_time($info['cust_fav_start_date']); 				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_cust_favorites->gettbl_cust_favorites_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_cust_favorites->gettbl_cust_favorites_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_cust_favorites->gettbl_cust_favorites_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_cust_favorites);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_cust_favorites_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_CUST_FAVORITES."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_cust_favorites_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields		/**	* Return information of the favorites according to post and user	* @param integer $post_id	* @param integer $user_id	* @param undefined $post_type	* @return array  */	public static function getPostWiseFavorite($post_id,$user_id=0,$post_type='SUBMENU_DISH'){		$info = array();		if(is_gt_zero_num($post_id)){			$search_arr = array(CUST_FAV_POST_ID=>$post_id,CUST_FAV_POST_TYPE=>$post_type);			if(is_gt_zero_num($user_id)){			 $search_arr[CUST_FAV_USER]=$user_id; 			} 			$info = self::readArray($search_arr); 			 			if(is_not_empty($info)){				if(is_gt_zero_num($user_id)){					 foreach($info as $val){					 	$info = $val;						break;					 }				}			}  		}		return $info;	}}//..End tbl_cust_favorites?>