<?php

/**********************************************************************
tbl_table_status_link.class.php
Generated by STRUCTY 2013.04.05 12:30:06.
Copyright 2011 Structy, Frédéric Aebi. All rights reserved.
**********************************************************************/
/**
Note : tbl_sts_lnk_cust_id field is storing the log id and not the customer id
tbl_sts_lnk_customer is used for this purpose which fetched customerid from logid
**/


define('TBL_TABLE_STATUS_LINK', 'tbl_table_status_link'); 

define('TBL_STS_LNK_ID', 'tbl_sts_lnk_id'); 
define('TBL_STS_LNK_TABLE_ID', 'tbl_sts_lnk_table_id'); 
define('TBL_STS_LNK_CUST_ID', 'tbl_sts_lnk_cust_id'); 
define('TBL_STS_LNK_STATUS_ID', 'tbl_sts_lnk_status_id'); 
define('TBL_STS_LNK_EMP_ID', 'tbl_sts_lnk_emp_id'); 
define('TBL_STS_LNK_SESSION_ID', 'tbl_sts_lnk_session_id');
define('TBL_STS_LNK_PARTY_SIZE','tbl_sts_lnk_party_size');  
define('TBL_STS_LNK_START_TIME', 'tbl_sts_lnk_start_time'); 
define('TBL_STS_LNK_END_TIME', 'tbl_sts_lnk_end_time'); 
//define('TBL_STS_LNK_CUSTOMER', 'tbl_sts_lnk_customer'); 


define('TBL_TABLE_STATUS_LINK_ACTIVE_DATE', 'TBL_STS_LNK_START_TIME');
define('TBL_TABLE_STATUS_LINK_DEACTIVE_DATE', 'TBL_STS_LNK_END_TIME');

$tbl_table_status_link_active_condition= ' ('.TBL_TABLE_STATUS_LINK_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_STATUS_LINK_DEACTIVE_DATE.' = 0 OR '.TBL_TABLE_STATUS_LINK_DEACTIVE_DATE.' > CURDATE( )) ';

class tbl_table_status_link {

	private $tbl_sts_lnk_id;
	private $tbl_sts_lnk_table_id;
	private $tbl_sts_lnk_cust_id;
	private $tbl_sts_lnk_status_id;
	private $tbl_sts_lnk_emp_id;
	private $tbl_sts_lnk_session_id;
	private $tbl_sts_lnk_party_size;
	private $tbl_sts_lnk_start_time;
	private $tbl_sts_lnk_end_time;
	private $tbl_table_status_link_active_date;
	private $tbl_table_status_link_deactive_date;
	
	//private $tbl_sts_lnk_customer;

	public function settbl_sts_lnk_id($pArg='0') {$this->tbl_sts_lnk_id=$pArg;}
	public function settbl_sts_lnk_table_id($pArg='0') {$this->tbl_sts_lnk_table_id=$pArg;}
	public function settbl_sts_lnk_cust_id($pArg='0') {$this->tbl_sts_lnk_cust_id=$pArg;}
	public function settbl_sts_lnk_status_id($pArg='0') {$this->tbl_sts_lnk_status_id=$pArg;}
	public function settbl_sts_lnk_emp_id($pArg='0') {$this->tbl_sts_lnk_emp_id=$pArg;}
	public function settbl_sts_lnk_session_id($pArg='0') {$this->tbl_sts_lnk_session_id=$pArg;}
	public function settbl_sts_lnk_party_size($pArg='0') {$this->tbl_sts_lnk_party_size=$pArg;}
	public function settbl_sts_lnk_start_time($pArg='0') {$this->tbl_sts_lnk_start_time=$pArg;}
	public function settbl_sts_lnk_end_time($pArg='0') {$this->tbl_sts_lnk_end_time=$pArg;}
	public function settbl_table_status_link_active_date($pArg='0') {$this->tbl_table_status_link_active_date=$pArg;}
	public function settbl_table_status_link_deactive_date($pArg='0') {$this->tbl_table_status_link_deactive_date=$pArg;}
	
	//public function settbl_sts_lnk_customer($pArg='0') {$this->tbl_sts_lnk_customer=$pArg;}

	public function gettbl_sts_lnk_id() {return $this->tbl_sts_lnk_id;}
	public function gettbl_sts_lnk_table_id() {return $this->tbl_sts_lnk_table_id;}
	public function gettbl_sts_lnk_cust_id() {return $this->tbl_sts_lnk_cust_id;}
	public function gettbl_sts_lnk_status_id() {return $this->tbl_sts_lnk_status_id;}
	public function gettbl_sts_lnk_emp_id() {return $this->tbl_sts_lnk_emp_id;}
	public function gettbl_sts_lnk_session_id() {return $this->tbl_sts_lnk_session_id;}
	public function gettbl_sts_lnk_party_size() {return $this->tbl_sts_lnk_party_size;}
	public function gettbl_sts_lnk_start_time() {return $this->tbl_sts_lnk_start_time;}
	public function gettbl_sts_lnk_end_time() {return $this->tbl_sts_lnk_end_time;}
	public function gettbl_table_status_link_active_date() {return $this->tbl_table_status_link_active_date;}
	public function gettbl_table_status_link_deactive_date() {return $this->tbl_table_status_link_deactive_date;}
	
	//public function gettbl_sts_lnk_customer() {return $this->tbl_sts_lnk_customer;}

	public function readObject($array = array()) {
		 
	 //$qry = "SELECT *".RET."FROM ".TBL_TABLE_STATUS_LINK." INNER JOIN ".TBL_DINING_TABLE." ON `tbl_sts_lnk_table_id` = `table_id` WHERE `table_restaurant`=".(is_gt_zero_num($_SESSION[SES_RESTAURANT])?$_SESSION[SES_RESTAURANT]:0).RET; 
	  $qry = 'SELECT *'.RET.'FROM '.TBL_TABLE_STATUS_LINK.' INNER JOIN '.TBL_DINING_TABLE.' ON `tbl_sts_lnk_table_id` = `table_id`'.RET; 
	 
 	  
		$and = "WHERE".RET;
		
		if($array[TBL_STS_LNK_ID] != "") {
			$qry .= $and.TBL_STS_LNK_ID." = '".$array[TBL_STS_LNK_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_TABLE_ID] != "") {
			$qry .= $and.TBL_STS_LNK_TABLE_ID." = '".$array[TBL_STS_LNK_TABLE_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_CUST_ID] != "") {
			$qry .= $and.TBL_STS_LNK_CUST_ID." = '".$array[TBL_STS_LNK_CUST_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_STATUS_ID] != "") {
			$qry .= $and.TBL_STS_LNK_STATUS_ID." = '".$array[TBL_STS_LNK_STATUS_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_EMP_ID] != "") {
			$qry .= $and.TBL_STS_LNK_EMP_ID." = '".$array[TBL_STS_LNK_EMP_ID]."'".RET;
			$and = "AND".RET;
		}
		
		
		if($array[SES_RESTAURANT] != "") {
			$qry .= $and.chkTableInRestaurant(TBL_STS_LNK_TABLE_ID,$array[SES_RESTAURANT]);
			$and = "AND".RET;
		}

		
		if($array[TBL_STS_LNK_SESSION_ID] != "") {
			$qry .= $and.TBL_STS_LNK_SESSION_ID." = '".$array[TBL_STS_LNK_SESSION_ID]."'".RET;
			$and = "AND".RET;
		}
		
		if($array[TBL_STS_LNK_PARTY_SIZE] != "") {
			$qry .= $and.TBL_STS_LNK_PARTY_SIZE." = '".$array[TBL_STS_LNK_PARTY_SIZE]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_START_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_START_TIME." = '".$array[TBL_STS_LNK_START_TIME]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_END_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_END_TIME." = '".$array[TBL_STS_LNK_END_TIME]."'".RET;
			$and = "AND".RET;
		}
		 
		$result = mysql_query($qry);
		if($result) {
			while ($row = mysql_fetch_array($result)) {
				$record = $row;
				break;//end after first record
			}
			if(count($record[0]) == 0) {
				return array();
			} else {
				$this->settbl_sts_lnk_id($record[TBL_STS_LNK_ID]);
				$this->settbl_sts_lnk_table_id($record[TBL_STS_LNK_TABLE_ID]);
				$this->settbl_sts_lnk_cust_id($record[TBL_STS_LNK_CUST_ID]);
				$this->settbl_sts_lnk_status_id($record[TBL_STS_LNK_STATUS_ID]);
				$this->settbl_sts_lnk_emp_id($record[TBL_STS_LNK_EMP_ID]);
				$this->settbl_sts_lnk_session_id($record[TBL_STS_LNK_SESSION_ID]);
				$this->settbl_sts_lnk_party_size($record[TBL_STS_LNK_PARTY_SIZE]);
				$this->settbl_sts_lnk_start_time($record[TBL_STS_LNK_START_TIME]);
				$this->settbl_sts_lnk_end_time($record[TBL_STS_LNK_END_TIME]);
				
				//$this->settbl_sts_lnk_cust_id(GetCustomerIDFromLog($record[TBL_STS_LNK_CUST_ID]));
								
				$this->settbl_table_status_link_active_date($record[TBL_TABLE_STATUS_LINK_ACTIVE_DATE]);
				$this->settbl_table_status_link_deactive_date($record[TBL_TABLE_STATUS_LINK_DEACTIVE_DATE]);
				return true;
			}
		}
	}

	public static function readArray($array = array(),&$result_found=0,$isArray=1,$needExpied=0) {
		global $tbl_table_status_link_active_condition;
		/*$qry = "SELECT *".RET."FROM ".TBL_TABLE_STATUS_LINK.RET;*/
	    if(is_gt_zero_num($array["isCurrentSessionTable"])) {
			$qry = "SELECT `tbl_sts_lnk_id`, `tbl_sts_lnk_table_id`, `tbl_sts_lnk_cust_id`,`tbl_sts_lnk_status_id`, `tbl_sts_lnk_emp_id`, `tbl_sts_lnk_session_id`, `tbl_sts_lnk_start_time`, `tbl_sts_lnk_end_time`  ".RET."FROM ".TBL_TABLE_STATUS_LINK." INNER JOIN ".TBL_DINING_TABLE." ON `tbl_sts_lnk_table_id` = `table_id`";
			// WHERE `table_restaurant`=".(is_gt_zero_num($_SESSION[SES_RESTAURANT])?$_SESSION[SES_RESTAURANT]:0).RET;
		}else{
			$qry = "SELECT `tbl_sts_lnk_id`, `tbl_sts_lnk_table_id`, `tbl_sts_lnk_cust_id`, `tbl_sts_lnk_status_id`,  `tbl_sts_lnk_emp_id`, `tbl_sts_lnk_session_id`, `tbl_sts_lnk_start_time`, `tbl_sts_lnk_end_time`  ".RET."FROM ".TBL_TABLE_STATUS_LINK." INNER JOIN ".TBL_DINING_TABLE." ON `tbl_sts_lnk_table_id` = `table_id`";//WHERE `table_restaurant`=".(is_gt_zero_num($_SESSION[SES_RESTAURANT])?$_SESSION[SES_RESTAURANT]:0).RET; 
		} 	
		 
		$and = "AND".RET;
		/*print_r($array);*/
		if($array[TBL_STS_LNK_ID] != "") {
			$qry .= $and.TBL_STS_LNK_ID." = '".$array[TBL_STS_LNK_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_TABLE_ID] != "") {
			$qry .= $and.TBL_STS_LNK_TABLE_ID." IN (".$array[TBL_STS_LNK_TABLE_ID].")".RET;
			$and = "AND".RET;
		}
		
		if($array[SES_RESTAURANT] != "") {
			$qry .= $and.chkTableInRestaurant(TBL_STS_LNK_TABLE_ID,$array[SES_RESTAURANT]);
			$and = "AND".RET;
		} 
		
		if($array[TBL_STS_LNK_CUST_ID] != "") {
			$qry .= $and.TBL_STS_LNK_CUST_ID." = '".$array[TBL_STS_LNK_CUST_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_STATUS_ID] != "") {
			$qry .= $and.TBL_STS_LNK_STATUS_ID." = '".$array[TBL_STS_LNK_STATUS_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_EMP_ID] != "") {
			$qry .= $and.TBL_STS_LNK_EMP_ID." = '".$array[TBL_STS_LNK_EMP_ID]."'".RET;
			$and = "AND".RET;
		}
		
		if($array[TBL_STS_LNK_SESSION_ID] != "") {
			$qry .= $and.TBL_STS_LNK_SESSION_ID." = '".$array[TBL_STS_LNK_SESSION_ID]."'".RET;
			$and = "AND".RET;
		}
		
		
		
		if($array[TBL_STS_LNK_PARTY_SIZE] != "") {
			$qry .= $and.TBL_STS_LNK_PARTY_SIZE." = '".$array[TBL_STS_LNK_PARTY_SIZE]."'".RET;
			$and = "AND".RET;
		}
		
		if($array[TBL_STS_LNK_START_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_START_TIME." = '".$array[TBL_STS_LNK_START_TIME]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_END_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_END_TIME." = '".$array[TBL_STS_LNK_END_TIME]."'".RET;
			$and = "AND".RET;
		}

	  if(is_gt_zero_num($array["isActive"])) {
			$qry .= $and.$tbl_table_status_link_active_condition;
			$and = "AND".RET;
		} 
		
		if(is_not_empty($array['customer_name'])) {
			/*$qry .= $and.TBL_STS_LNK_EMP_ID." IN (SELECT `staff_member_id` from ".TBL_STAFF." INNER JOIN ".MEMBERS." ON `staff_member_id`=`id` WHERE `member_role_id`=".ROLE_CUSTOMER." AND( `staff_fname` LIKE  '%".$array['customer_name']."%' OR `staff_lname` LIKE  '%".$array['customer_name']."%'))".RET;*/
			$qry .= $and.TBL_STS_LNK_CUST_ID." LIKE '%".$array['customer_name']."%' ".RET;
			$and = "AND".RET;
		}
		
		if(is_not_empty($array['server_name'])) {
			$qry .= $and.TBL_STS_LNK_EMP_ID." IN (SELECT staff_member_id from ".TBL_STAFF." inner join ".MEMBERS." on staff_member_id=id where member_role_id=".ROLE_WAITER." AND( staff_fname like  '%".$array['server_name']."%' OR staff_lname like  '%".$array['server_name']."%'))".RET;
			$and = "AND".RET;
		}
		
		if(is_not_empty($array['server_id'])) {
			$qry .= $and.TBL_STS_LNK_EMP_ID."=".$array['server_id'].RET;
			$and = "AND".RET;
		}
		
		if(is_not_empty($array['keywords'])) {
			$qry .= $and." (".TBL_STS_LNK_SESSION_ID." IN (SELECT cust_sess_id from pds_redim_cupons inner join pds_list_promotions  on pds_redim_cupons.promotion_id = pds_list_promotions.id where pds_list_promotions.title like '%".$array['keywords']."%') OR ".TBL_STS_LNK_SESSION_ID." IN (SELECT ord.`order_session_id`  FROM tbl_orders ord inner join tbl_order_details ordtl on  ord.order_id = ordtl.ord_dtl_order_id  INNER JOIN `tbl_submenu_dishes`  smd ON  ordtl.ord_dtl_sbmenu_dish_id =  smd.`sbmnu_dish_id` INNER JOIN `tbl_sub_menu` s ON s.`submnu_id`=smd.`sbmnu_dish_submenu` INNER JOIN `tbl_menu` m ON m.`menu_id`=s.`submnu_menu` INNER JOIN `tbl_dishes` d ON d.`dish_id`=smd.`sbmnu_dish_dish` WHERE  m.`menu_name` like '%".$array['keywords']."%' OR  s.`submnu_name` like '%".$array['keywords']."%' OR  d.`dish_name` like '%".$array['keywords']."%'))".RET;
			$and = "AND".RET;
		}

		if(is_not_empty($array['fts_start_date']) && is_not_empty($array['fts_end_date'])){			
			$qry .= $and.TBL_STS_LNK_START_TIME.' >= \''.date('Y-m-d 00:00:00',strtotime($array['fts_start_date'])).'\''.RET.'AND '.TBL_STS_LNK_START_TIME.' <= \''.date('Y-m-d 23:59:59',strtotime($array['fts_end_date'])).'\''.RET;
			$and = 'AND'.RET;
		}	
		 
		/*
		if(is_gt_zero_num($array["isCurrentSessionTable"])) { 
		  if(is_gt_zero_num($array['latestOnly'])){ 
			$CHECK_COND = " IN ";
		  }else{ 
		  	$CHECK_COND = " NOT IN "; 
		  }
		  $qry .= $and." ".TBL_STS_LNK_SESSION_ID." ".$CHECK_COND." (SELECT MAX(".TBL_CUST_SESS_ID.") FROM ".TBL_TABLE_CUSTOMER_SESSION." WHERE ".TBL_CUST_SESS_TABLE_ID." =".$array["isCurrentSessionTable"].") ORDER BY ".TBL_STS_LNK_ID." DESC";
		  */
		  
		if(is_gt_zero_num($array["isCurrentCustomerSession"])) { 			
			$qry .= $and." ".TBL_STS_LNK_SESSION_ID."  =  ".$array["isCurrentCustomerSession"];
			$and = "AND".RET;
		
		}else{ 
		  $listActiveTblSession = tbl_table_customer_session::getActiveSessionForAlltables();
		  $listAllLastSession = self::getLstSessForAllSession();
		  $current = array();
		  $old = array();
			$avail = array();
			$curr_shift = tbl_shift::getCurrentShift();
 
			$active_tables = tbl_emp_shift_assignment::getTablesForShiftDate($curr_shift,date(DAY_FORMAT));
	 
	 		//print_r($listAllLastSession);
			foreach($listAllLastSession as $key=>$val){ 
					if($avail[$val['table']] < $val['session']){
						$avail[$val['table']] =  $val['session'];
				}  
			}			 
			 
		  if(is_not_empty($listActiveTblSession)){
		  	$arr = explode(",",$listActiveTblSession);
			if(!is_array($arr)){
				$arr[0] = $arr;
			}  
			foreach($listAllLastSession as $key=>$val){ 
				if(in_array($key,$arr)) {
					$current[$key] = $val['session']; 
				}else{
					$old[$key]= $val['session'];
				}
			}
			
		  }else{
				foreach($listAllLastSession as $key=>$val){ 
					$old[$key]= $val['session'];
				}
		  	 
		  }
			
			//print_r($old);
		   
		  if(is_gt_zero_num($array['latestOnly'])){ 

		    if(is_not_empty($current)){
				$qry .= $and." (".TBL_STS_LNK_ID." IN (".implode(",",$current).") OR ".TBL_STS_LNK_ID." IN  (".implode(",",$avail).") )";
			}else{
				$qry .= $and." (".TBL_STS_LNK_ID." IN (0) OR ".TBL_STS_LNK_ID." IN  (".implode(",",$avail).")) ";
			}
			if(is_not_empty($active_tables))
				$qry .= $and."  ".TBL_STS_LNK_TABLE_ID." IN (".$active_tables.")";
			else
				$qry .= $and."  ".TBL_STS_LNK_TABLE_ID." IN (0)";	
		  
			/*$CHECK_COND = " IN "; 
			$active_condition = " WHERE (".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." is NULL OR ".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." = 0 OR TIME(".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.") > CURTIME( ))";*/
		 
		  }else{ 
		  	if(is_not_empty($old)){
					$qry .= $and." ".TBL_STS_LNK_ID." IN (".biz_implode(",",$old).") ";
				}else{
					$qry .= $and."  ".TBL_STS_LNK_ID." IN (0)";
				}
			 /*$CHECK_COND = " NOT IN "; 
			 $active_condition = " WHERE (".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." is NULL OR ".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE." = 0 OR TIME(".TBL_TABLE_CUSTOMER_SESSION_DEACTIVE_DATE.") > CURTIME( ))";*/
		  }
		/* $qry .= $and." ".TBL_STS_LNK_ID." IN ( SELECT MAX(x.".TBL_STS_LNK_ID.") FROM ".TBL_TABLE_STATUS_LINK." x WHERE x.".TBL_STS_LNK_SESSION_ID." ".$CHECK_COND." (SELECT ".TBL_CUST_SESS_ID." FROM (SELECT * FROM ".TBL_TABLE_CUSTOMER_SESSION." ORDER BY ".TBL_CUST_SESS_ID." DESC) AS t GROUP BY ".TBL_CUST_SESS_TABLE_ID.") GROUP BY x.".TBL_STS_LNK_TABLE_ID." )";  */
		
		/*$qry .= $and." ".TBL_STS_LNK_ID." IN ( SELECT MAX(x.".TBL_STS_LNK_ID.") FROM ".TBL_TABLE_STATUS_LINK." x WHERE x.".TBL_STS_LNK_SESSION_ID." ".$CHECK_COND." (".$listActiveTblSession.") AS t GROUP BY ".TBL_CUST_SESS_TABLE_ID.") GROUP BY x.".TBL_STS_LNK_TABLE_ID." )";*/
		
		   //$qry .= $and." ".TBL_STS_LNK_SESSION_ID." $CHECK_COND  (".$listActiveTblSession.") GROUP BY ".TBL_STS_LNK_SESSION_ID." ORDER BY ".TBL_CUST_SESS_ID." DESC";
		  
		}
		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		
			$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		
		}
		
		if((isset($array[OFFSET_TITLE])) && (is_not_empty($array[LIMIT_TITLE]))) {
			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];
		}else{
			$qry_with_limit  = $qry;
		}		
				
		$result = mysql_query ($qry_with_limit);
		$r1 = mysql_query($qry);
	 //echo "qry=$qry_with_limit";   
		if($r1){
			$result_found = mysql_num_rows($r1);
		}
		$class_objects = array();
	 
		if($result && is_gt_zero_num($result_found)) {
			while ($record = mysql_fetch_assoc($result)) {
				$isActive= 0;
				//..check deactive date is not set or 0
				if((is_not_empty($record[TBL_TABLE_STATUS_LINK_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_TABLE_STATUS_LINK_DEACTIVE_DATE]))== false)){
					$isActive = 1; 
				}else{
					//..check the deactive date is greater than todays date
					if(strtotime($record[TBL_TABLE_STATUS_LINK_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){
						$isActive = 1;
					}
				}

				if($isArray){
					$class_object = array();
					$class_object["tbl_sts_lnk_id"]=$record[TBL_STS_LNK_ID];
					$class_object["tbl_sts_lnk_table_id"]=$record[TBL_STS_LNK_TABLE_ID];
					$class_object["tbl_sts_lnk_cust_id"]=$record[TBL_STS_LNK_CUST_ID];
					$class_object["tbl_sts_lnk_status_id"]=$record[TBL_STS_LNK_STATUS_ID];
					$class_object["tbl_sts_lnk_emp_id"]=$record[TBL_STS_LNK_EMP_ID];
					$class_object["tbl_sts_lnk_session_id"]=$record[TBL_STS_LNK_SESSION_ID];
					$class_object["tbl_sts_lnk_party_size"]=$record[TBL_STS_LNK_PARTY_SIZE];
					$class_object["tbl_sts_lnk_start_time"]=$record[TBL_STS_LNK_START_TIME];
					$class_object["tbl_sts_lnk_end_time"]=$record[TBL_STS_LNK_END_TIME];
					//$class_object["tbl_sts_lnk_customer"]=GetCustomerIDFromLog($record[TBL_STS_LNK_CUST_ID]);
					$class_object["isActive"]=$isActive;
				}else{
					$class_object = new tbl_table_status_link();
					$class_object->settbl_sts_lnk_id($record[TBL_STS_LNK_ID]);
					$class_object->settbl_sts_lnk_table_id($record[TBL_STS_LNK_TABLE_ID]);
					$class_object->settbl_sts_lnk_cust_id($record[TBL_STS_LNK_CUST_ID]);
					$class_object->settbl_sts_lnk_status_id($record[TBL_STS_LNK_STATUS_ID]);
					$class_object->settbl_sts_lnk_emp_id($record[TBL_STS_LNK_EMP_ID]);
					$class_object->settbl_sts_lnk_session_id($record[TBL_STS_LNK_SESSION_ID]);
					$class_object->settbl_sts_lnk_party_size($record[TBL_STS_LNK_PARTY_SIZE]);
					$class_object->settbl_sts_lnk_start_time($record[TBL_STS_LNK_START_TIME]);
					$class_object->settbl_sts_lnk_end_time($record[TBL_STS_LNK_END_TIME]);
				}
				$class_objects[$record[TBL_STS_LNK_ID]] = $class_object;
			}
		}
		return $class_objects;
	}//..End readArray

	public function insert() {
		if($this->gettbl_sts_lnk_id() != '') {
			$qry  = "UPDATE ".TBL_TABLE_STATUS_LINK.RET."SET".RET."
			".TBL_STS_LNK_ID." = '".$this->gettbl_sts_lnk_id()."',".RET."
			".TBL_STS_LNK_TABLE_ID." = '".$this->gettbl_sts_lnk_table_id()."',".RET."
			".TBL_STS_LNK_CUST_ID." = '".$this->gettbl_sts_lnk_cust_id()."',".RET."
			".TBL_STS_LNK_STATUS_ID." = '".$this->gettbl_sts_lnk_status_id()."',".RET."
			".TBL_STS_LNK_EMP_ID." = '".$this->gettbl_sts_lnk_emp_id()."',".RET."
			".TBL_STS_LNK_SESSION_ID." = '".$this->gettbl_sts_lnk_session_id()."',".RET."
			".TBL_STS_LNK_PARTY_SIZE." = '".$this->gettbl_sts_lnk_party_size()."',".RET."
			".TBL_STS_LNK_START_TIME." = '".$this->gettbl_sts_lnk_start_time()."',".RET."
			".TBL_STS_LNK_END_TIME." = '".$this->gettbl_sts_lnk_end_time()."'".RET.
			"WHERE ".TBL_STS_LNK_ID." = ".$this->gettbl_sts_lnk_id().RET;

			//echo $qry;
			mysql_query($qry);
		} else {
			 
			$qry  = "INSERT INTO ".TBL_TABLE_STATUS_LINK." (".RET.
			"".TBL_STS_LNK_TABLE_ID.", ".TBL_STS_LNK_CUST_ID.", ".TBL_STS_LNK_STATUS_ID.", ".TBL_STS_LNK_EMP_ID.",".TBL_STS_LNK_SESSION_ID.",".TBL_STS_LNK_PARTY_SIZE.", ".TBL_STS_LNK_START_TIME.", ".TBL_STS_LNK_END_TIME.RET.
				") VALUES (".RET.
			"'".$this->gettbl_sts_lnk_table_id()."',".RET.
			"'".$this->gettbl_sts_lnk_cust_id()."',".RET.
			"'".$this->gettbl_sts_lnk_status_id()."',".RET.
			"'".$this->gettbl_sts_lnk_emp_id()."',".RET.
			"'".$this->gettbl_sts_lnk_session_id()."',".RET.
			"'".$this->gettbl_sts_lnk_party_size()."',".RET.
			"'".$this->gettbl_sts_lnk_start_time()."',".RET.
			"'".$this->gettbl_sts_lnk_end_time()."'".RET.
			")".RET; 
			$res = mysql_query($qry);
			$this->settbl_sts_lnk_id(mysql_insert_id());
		}
	}//..End Insert

	public static function delete($array = array()) {
		$qry = "DELETE".RET."FROM ".TBL_TABLE_STATUS_LINK.RET;
		$and = "WHERE".RET;

		if($array[TBL_STS_LNK_ID] != "") {
			$qry .= $and.TBL_STS_LNK_ID." = '".$array[TBL_STS_LNK_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_TABLE_ID] != "") {
			$qry .= $and.TBL_STS_LNK_TABLE_ID." = '".$array[TBL_STS_LNK_TABLE_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_CUST_ID] != "") {
			$qry .= $and.TBL_STS_LNK_CUST_ID." = '".$array[TBL_STS_LNK_CUST_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_STATUS_ID] != "") {
			$qry .= $and.TBL_STS_LNK_STATUS_ID." = '".$array[TBL_STS_LNK_STATUS_ID]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_EMP_ID] != "") {
			$qry .= $and.TBL_STS_LNK_EMP_ID." = '".$array[TBL_STS_LNK_EMP_ID]."'".RET;
			$and = "AND".RET;
		}
		
		if($array[TBL_STS_LNK_SESSION_ID] != "") {
			$qry .= $and.TBL_STS_LNK_SESSION_ID." = '".$array[TBL_STS_LNK_SESSION_ID]."'".RET;
			$and = "AND".RET;
		}
		
		if($array[TBL_STS_LNK_PARTY_SIZE] != "") {
			$qry .= $and.TBL_STS_LNK_PARTY_SIZE." = '".$array[TBL_STS_LNK_PARTY_SIZE]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_START_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_START_TIME." = '".$array[TBL_STS_LNK_START_TIME]."'".RET;
			$and = "AND".RET;
		}

		if($array[TBL_STS_LNK_END_TIME] != "") {
			$qry .= $and.TBL_STS_LNK_END_TIME." = '".$array[TBL_STS_LNK_END_TIME]."'".RET;
			$and = "AND".RET;
		}

		$res = mysql_query($qry);
		if($res){
			return OPERATION_SUCCESS;
		};
		return OPERATION_FAIL;
	}//..End Delete

	public function isAlreadyThere($tbl_sts_lnk_table_id ,$tbl_sts_lnk_cust_id ,$tbl_sts_lnk_status_id ,$tbl_sts_lnk_emp_id,$tbl_sts_lnk_session_id) {
		$unique_arr = array();
			//$unique_arr[TBL_STS_LNK_ID]=$tbl_sts_lnk_id;
			//$unique_arr[TBL_STS_LNK_TABLE_ID]=$tbl_sts_lnk_table_id;
			//$unique_arr[TBL_STS_LNK_CUST_ID]=$tbl_sts_lnk_cust_id;
			 $unique_arr[TBL_STS_LNK_STATUS_ID]=$tbl_sts_lnk_status_id;
			//$unique_arr[TBL_STS_LNK_EMP_ID]=$tbl_sts_lnk_emp_id;
			 $unique_arr[TBL_STS_LNK_SESSION_ID]=$tbl_sts_lnk_session_id;
			//$unique_arr[TBL_STS_LNK_START_TIME]=$tbl_sts_lnk_start_time;
			//$unique_arr[TBL_STS_LNK_END_TIME]=$tbl_sts_lnk_end_time;
		
		if(is_not_empty($unique_arr)){ 
			return $this->readObject($unique_arr);
		}
		 
		return false;
	}//..isAlreadyThere
	
	public static function take_care_of_pending($table_id,$cust_sess){
		//..first check if there are any pending orders/requests are there
				$requests = tbl_services_requests::getPendingRequestForTable($table_id);	
			  $canceled_orders = tbl_orders::getNonPaidOrders($table_id);
				//..changes made to cancle any pending things..sangram
				if(count($requests)>0) {
					tbl_services_requests::cancellAllpendingRequestForTable($table_id);					
				}	
				if(count($canceled_orders)>0){
					tbl_orders::updateAllTblSessOrdChkPaid($cust_sess);					
				}			
	}

	public function create($tbl_sts_lnk_table_id ,$tbl_sts_lnk_cust_id ,$tbl_sts_lnk_status_id ,$tbl_sts_lnk_emp_id , $tbl_sts_lnk_session_id,$tbl_sts_lnk_party_size=1) {
		
		if(is_not_empty($tbl_sts_lnk_table_id)){
	 
			if($this->isAlreadyThere($tbl_sts_lnk_table_id ,$tbl_sts_lnk_cust_id ,$tbl_sts_lnk_status_id ,$tbl_sts_lnk_emp_id ,$tbl_sts_lnk_session_id)){				
				/* 
					self::delete(array(TBL_STS_LNK_TABLE_ID=>$tbl_sts_lnk_table_id,TBL_STS_LNK_CUST_ID=>$tbl_sts_lnk_cust_id));
				*/
				 return OPERATION_DUPLICATE; 
				 
			}else{
			
				$this->settbl_sts_lnk_id("");
				$this->settbl_sts_lnk_table_id($tbl_sts_lnk_table_id);
				$this->settbl_sts_lnk_cust_id($tbl_sts_lnk_cust_id);
				$this->settbl_sts_lnk_status_id($tbl_sts_lnk_status_id);
				$this->settbl_sts_lnk_emp_id($tbl_sts_lnk_emp_id);
				$this->settbl_sts_lnk_session_id($tbl_sts_lnk_session_id);
				$this->settbl_sts_lnk_party_size($tbl_sts_lnk_party_size);
				$curr_time = date(DATE_FORMAT);
				$this->settbl_sts_lnk_start_time($curr_time); 
				
				if($this->gettbl_sts_lnk_status_id()== TBL_STATUS_AVAILABLE){
					$this->settbl_sts_lnk_end_time($curr_time); 
				} 
				
				$this->insert();
				$tbl_sts_lnk_id = $this->settbl_sts_lnk_id();
				
				//..if table status is occupied then assign table session to all pending order if any
				//if($tbl_sts_lnk_status_id == TBL_STATUS_OCCUPIED){
				//..change made by sangram for clearing previous session
				if($tbl_sts_lnk_status_id == TBL_STATUS_OCCUPIED ){
					tbl_orders::updateAllPendingOrders($tbl_sts_lnk_table_id,$tbl_sts_lnk_session_id); 
					tbl_services_requests::updateAllPendingRequest($tbl_sts_lnk_table_id,$tbl_sts_lnk_session_id); 
				}
				#################################################
				# After table become Available clear The 
				# customer session
				################################################
				if($tbl_sts_lnk_status_id == TBL_STATUS_AVAILABLE){
				  //..deactivate the current table session
					//..first take care of pening items..
					tbl_table_status_link::take_care_of_pending($tbl_sts_lnk_table_id,$tbl_sts_lnk_session_id);
					
					$obj = new tbl_table_customer_session();
					$obj->deactivate($tbl_sts_lnk_session_id);
					unset($obj);
					 
					 if($this->readObject(array(TBL_STS_LNK_SESSION_ID=>$tbl_sts_lnk_session_id, TBL_STS_LNK_STATUS_ID=>TBL_STATUS_CLEANING))){ 
					$this->settbl_sts_lnk_start_time($curr_time);	 	
					$this->settbl_sts_lnk_end_time($curr_time);	
					$this->insert();
					}else{
						// otherwise create
						/* $this->settbl_sts_lnk_id("");
						$this->settbl_sts_lnk_table_id($tbl_sts_lnk_table_id);
						$this->settbl_sts_lnk_cust_id($tbl_sts_lnk_cust_id);
						$this->settbl_sts_lnk_status_id(TBL_STATUS_CLEANING);
						$this->settbl_sts_lnk_emp_id($tbl_sts_lnk_emp_id);
						$this->settbl_sts_lnk_session_id($tbl_sts_lnk_session_id);
						$this->settbl_sts_lnk_party_size($tbl_sts_lnk_party_size);
						 
						$this->settbl_sts_lnk_start_time($curr_time);
						$this->settbl_sts_lnk_end_time($curr_time); 
						$this->insert(); */
					} 
						
					
				}
				//..after table status is becomes "checked" it will set the all the orders status to completed
				if($tbl_sts_lnk_status_id >= TBL_STATUS_CHECK){
				    $ord_id=0;
					//$tbl_cust_sess_id = tbl_table_customer_session::GetCurrentActiveCustSession($tbl_sts_lnk_table_id);
					/*$ord_id = tbl_orders::getCustSessionLastOrder($tbl_cust_sess_id);*/
					
					 ///..Unset the order sessions
					if(is_not_empty($_SESSION[SES_CART])){
						//$ord_id = $_SESSION[SES_CART]['order_info'][ORDER_ID];
						unset($_SESSION[SES_CART]);
					}						
					/*disabed @3Aug2013
					if(is_not_empty($_SESSION[SES_ORDER_SEQUENCE]))	
						unset($_SESSION[SES_ORDER_SEQUENCE]);
					if(is_not_empty($_SESSION[SES_ORDER_UDP]))	{
						//$ord_id = $_SESSION[SES_ORDER_UDP]['order_info'][ORDER_ID];
						unset($_SESSION[SES_ORDER_UDP]);
					}*/
					
					//..update all active order to make it complete
					//tbl_orders::completeOrdersBySession($tbl_cust_sess_id,TBL_STATUS_CHECK);
					
											
					/*if(is_gt_zero_num($ord_id)){
						$tmptbl_orders=new tbl_orders();
						$tmptbl_orders->update_ord_sts($ord_id,TBL_STATUS_CHECK);
						$tmptbl_orders->deactivate($ord_id);
						unset($tmptbl_orders);
						unset($ord_id);
					}*/
				}
				
				//..send notification 
			 // $cust_info =	tbl_table_customer_session::GetInfo($tbl_sts_lnk_session_id);
			  $stsinfo = tbl_statuses::GetInfo($tbl_sts_lnk_status_id);
				if($stsinfo[STATUS_EVENT] != 'ORDER'){
					biz_send_status_notifications($tbl_sts_lnk_table_id,$tbl_sts_lnk_cust_id,$tbl_sts_lnk_id,$tbl_sts_lnk_status_id,$tbl_sts_lnk_emp_id); 
				}
				
				return $tbl_sts_lnk_id;
			}
		}
		return OPERATION_FAIL;
	}//..create
	
	public function update($tbl_sts_lnk_id, $tbl_sts_lnk_table_id, $tbl_sts_lnk_cust_id, $tbl_sts_lnk_status_id, $tbl_sts_lnk_emp_id, $tbl_sts_lnk_session_id,$tbl_sts_lnk_party_size) {
		if(is_gt_zero_num($tbl_sts_lnk_id)){
			if ($this->readObject(array(TBL_STS_LNK_ID=>$tbl_sts_lnk_id))){
				$this->settbl_sts_lnk_table_id($tbl_sts_lnk_table_id);
				$this->settbl_sts_lnk_cust_id($tbl_sts_lnk_cust_id);
				$this->settbl_sts_lnk_status_id($tbl_sts_lnk_status_id);
				$this->settbl_sts_lnk_emp_id($tbl_sts_lnk_emp_id);
				$this->settbl_sts_lnk_session_id($tbl_sts_lnk_session_id);
				$this->settbl_sts_lnk_party_size($tbl_sts_lnk_party_size); 
				$this->insert();
				return OPERATION_SUCCESS;
			}
		}
		return OPERATION_FAIL;
	}//..update

	public function activate($tbl_sts_lnk_id){
		if(is_gt_zero_num($tbl_sts_lnk_id)){
			if ($this->readObject(array(TBL_STS_LNK_ID=>$tbl_sts_lnk_id))){
				$qry  = "UPDATE ".TBL_TABLE_STATUS_LINK.RET."SET".RET."
			".TBL_TABLE_STATUS_LINK_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".TBL_STS_LNK_ID."={$tbl_sts_lnk_id}";
			
				$res = mysql_query($qry);
				if($res){
					return 1;
				}
			}
		}
		return 0;
	}//..end activate

	public function deactivate($tbl_sts_lnk_id){
		if(is_gt_zero_num($tbl_sts_lnk_id)){
			if ($this->readObject(array(TBL_STS_LNK_ID=>$tbl_sts_lnk_id))){
				$qry  = "UPDATE ".TBL_TABLE_STATUS_LINK.RET."SET".RET."
			".TBL_TABLE_STATUS_LINK_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".TBL_STS_LNK_ID."={$tbl_sts_lnk_id}";
				$res = mysql_query($qry);
				if($res){
					return 1;
				}
			}
		}
		return 0;
	}//..end deactivate

	public static function GetInfo($tbl_sts_lnk_id=0,$tbl_sts_lnk_session_id=0) {
		$info = array();
		
		if(is_gt_zero_num($tbl_sts_lnk_id)){
			$search_arr[TBL_STS_LNK_ID] = $tbl_sts_lnk_id; 
		}
		if(is_gt_zero_num($tbl_sts_lnk_session_id)){
			$search_arr[TBL_STS_LNK_SESSION_ID] = $tbl_sts_lnk_session_id; 
		}
		
		if(is_not_empty($search_arr)){
			$obj_tbl_table_status_link = new tbl_table_status_link();
			if($obj_tbl_table_status_link->readObject($search_arr)){
				$info["tbl_sts_lnk_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_id();
				$info["tbl_sts_lnk_table_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_table_id();
				$info["tbl_sts_lnk_cust_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_cust_id();
				$info["tbl_sts_lnk_status_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_status_id();
				$info["tbl_sts_lnk_emp_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_emp_id();
				$info["tbl_sts_lnk_session_id"]=$obj_tbl_table_status_link->gettbl_sts_lnk_session_id();
				$info["tbl_sts_lnk_party_size"]=$obj_tbl_table_status_link->gettbl_sts_lnk_party_size();
				$info["tbl_sts_lnk_start_time"]=$obj_tbl_table_status_link->gettbl_sts_lnk_start_time();
				$info["tbl_sts_lnk_end_time"]=$obj_tbl_table_status_link->gettbl_sts_lnk_end_time();
				$info["isActive"] = 0;
				//..check deactive date is not set or 0
				if((is_not_empty($obj_tbl_table_status_link->gettbl_table_status_link_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_table_status_link->gettbl_table_status_link_deactive_date()))== false)){
					$info["isActive"] = 1;
				}else{
					//..check the deactive date is greater than todays date
					if(strtotime($obj_tbl_table_status_link->gettbl_table_status_link_deactive_date()) > strtotime(date(DATE_FORMAT))){
						$info["isActive"] = 1;
					}
				}
			}
		unset($obj_tbl_table_status_link);
		return $info;
		}
	}//..End GetInfo

	public static function GetFields($data){
		global $tbl_table_status_link_active_condition;
		$arr = array();
		if(is_not_empty($data)){
			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_DINING_TABLE."";
			if(is_gt_zero_num($data['isActive'])){
				$qry .= " WHERE ".$tbl_table_status_link_active_condition;			}
			$res = mysql_query($qry); 
			if($res){
				while($row=mysql_fetch_assoc($res)){
					$arr[$row[$data['key_field']]] = $row[$data['value_field']];
				}
			}
		}
		return $arr;
	}//.. End of GetFields
	
	//..Following function returns the last status for table 
	//..Returns 0 if no record found and else the status link table id
	public static function GetLastTableStatus($table_id){
		if(is_gt_zero_num($table_id)){
			return DB::ExecScalarQry('SELECT '.TBL_STS_LNK_STATUS_ID.' FROM '.TBL_TABLE_STATUS_LINK.' WHERE '.TBL_STS_LNK_TABLE_ID.'='.$table_id.' AND '.chkTableInRestaurant(TBL_STS_LNK_TABLE_ID).' ORDER BY '.TBL_STS_LNK_ID.' DESC LIMIT 1',0);
		} 
		return 0;		
	}
	/*public static function GetLastTableStatus($table_id){
		$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID),$result_found,1);			
		if((is_not_empty($tbl_table_status_linklist))&&(is_array($tbl_table_status_linklist))&&(count($tbl_table_status_linklist)==1)){
			$tbl_table_status_linklist =array_shift($tbl_table_status_linklist);
			return $tbl_table_status_linklist;
		}
		return 0;		
	}*/
	
	//..Following function returns the last status for particular table by particular customer for todays date only
	//..Returns 0 if no record found and else the status link table id
	public static function GetLastTableStatusForCustomer($table_id,$cust_id,$todays_requests=1){
		$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_CUST_ID=>$cust_id,"todays_requests"=>"1",OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID,SES_RESTAURANT=>$_SESSION[SES_RESTAURANT]),$result_found,1);			
		if((is_not_empty($tbl_table_status_linklist))&&(is_array($tbl_table_status_linklist))&&(count($tbl_table_status_linklist)==1)){
			$tbl_table_status_linklist =array_shift($tbl_table_status_linklist);
			return $tbl_table_status_linklist;
		}
		return 0;		
	}
	
	
	public static function GetTableEmployee($table_id){
		$cust_status=TBL_STATUS_ORDERED;//In database it is "occupied" status;		
		//$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_CUST_ID=>$cust_id,TBL_STS_LNK_STATUS_ID=>$cust_status,OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID),$result_found,1);			
		$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_STATUS_ID=>$cust_status,OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID,SES_RESTAURANT=>$_SESSION[SES_RESTAURANT]),$result_found,1);	
		if((is_not_empty($tbl_table_status_linklist))&&(is_array($tbl_table_status_linklist))&&(count($tbl_table_status_linklist)==1)){
			$tbl_table_status_linklist =array_shift($tbl_table_status_linklist);
			if(is_gt_zero_name($tbl_table_status_linklist[TBL_STS_LNK_EMP_ID]))
				return $tbl_table_status_linklist[TBL_STS_LNK_EMP_ID];
		}
		return NULL;		
	}
	
	//..get Get Customer Arrivral time at particular table 
	public static function GetTableCustArrive($table_id){
		$cust_status=TBL_STATUS_OCCUPIED;//In database it is "occupied" status;		
		//$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_CUST_ID=>$cust_id,TBL_STS_LNK_STATUS_ID=>$cust_status,OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID),$result_found,1);			
		$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_STATUS_ID=>$cust_status,OFFSET_TITLE=>0,LIMIT_TITLE=>1,SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID,SES_RESTAURANT=>$_SESSION[SES_RESTAURANT]),$result_found,1);
	 
		if((is_not_empty($tbl_table_status_linklist))&&(is_array($tbl_table_status_linklist))&&(count($tbl_table_status_linklist)==1)){
			$tbl_table_status_linklist =array_shift($tbl_table_status_linklist);
			if($tbl_table_status_linklist[TBL_STS_LNK_START_TIME])
				return $tbl_table_status_linklist[TBL_STS_LNK_START_TIME];
		}
		return NULL;		
	}
	
	//..Get list of all statuses for duplicate entry detection
	public static function GetAllTableStatusForCustomer($table_id,$cust_id,$todays_requests=1){
		$all_sts_lst  = array();
		$tbl_table_status_linklist = tbl_table_status_link::readArray(array(TBL_STS_LNK_TABLE_ID=>$table_id,TBL_STS_LNK_CUST_ID=>$cust_id,"todays_requests"=>"1",SORT_BY=>"DESC",SORT_ON=>TBL_STS_LNK_ID),$result_found,1);			
		if((is_not_empty($tbl_table_status_linklist))&&(is_array($tbl_table_status_linklist))&&(count($tbl_table_status_linklist)>=1)){			
			foreach($tbl_table_status_linklist as $staus){
				$all_sts_lst[]  = $staus[TBL_STS_LNK_STATUS_ID];
			}			
			return $all_sts_lst;
		}
		return $all_sts_lst;		
	}	
	
	public static function update_table_status($sts_lnk_id=0,$sess_id=0,$status_id=0){
	  $search_arr = array();
	  if(is_gt_zero_num($sts_lnk_id)){
	  	$search_arr[TBL_STS_LNK_ID] = $sts_lnk_id;
	  }else{
	  	if(is_gt_zero_num($sess_id) && is_gt_zero_num($status_id)){
			$search_arr[TBL_STS_LNK_SESSION_ID] = $sess_id;
			$search_arr[TBL_STS_LNK_STATUS_ID] = $status_id;
		}
	  } 
	  //global $Global_member;	
	  if(is_not_empty($search_arr)){
		$obj = new tbl_table_status_link();
	  	if($obj->readObject($search_arr)){ 
       //.. Update attended status and curent time
			//.. also the updating employee/manager to keep history 
					$obj->settbl_sts_lnk_end_time(date(DATE_FORMAT));
				   //$obj->settbl_sts_lnk_emp_id($Global_member['member_role_id']); 
					$obj->insert();	 
					return 1;			
	     }	
	  }
	  return 0; 
	} 
	
	 
	public static function getLstSessForAllSession(){
		$info = array(); 
		/*$res = mysql_query("SELECT ".TBL_STS_LNK_ID.",".TBL_STS_LNK_SESSION_ID.",MAX(".TBL_STS_LNK_STATUS_ID.") FROM  ".TBL_TABLE_STATUS_LINK." GROUP BY ".TBL_STS_LNK_SESSION_ID."");*/
		$res = mysql_query("SELECT  ".TBL_STS_LNK_SESSION_ID.",MAX(".TBL_STS_LNK_ID."),".TBL_STS_LNK_TABLE_ID." FROM  ".TBL_TABLE_STATUS_LINK." GROUP BY ".TBL_STS_LNK_SESSION_ID." HAVING ".chkTableInRestaurant(TBL_STS_LNK_TABLE_ID)); 
		 
		if($res && is_gt_zero_num(mysql_num_rows($res))){
			while($row=mysql_fetch_row($res)){
				$info[$row[0]]['session'] = $row[1];
				$info[$row[0]]['table'] 	= $row[2];
			}
		}
		return $info;
	} 
	
	//..this function will clear all the livesession for the day
	public static function mkDayEndForAllTables(){
		//..fetch all active table sessions
		$cust_sess_list = explode(',',tbl_table_customer_session::getActiveSessionForAlltables()); 
		$obj = new tbl_table_status_link();
		if(is_not_empty($cust_sess_list)){
			//..Loop through each active table session 
			foreach($cust_sess_list as $cust_sess){
		   if(is_gt_zero_num($cust_sess)){			 				
			 	//..Get the table session details
			 	$info = tbl_table_customer_session::GetInfo($cust_sess);
				//..first check if there are any pending orders/requests are there
				tbl_table_status_link::take_care_of_pending($info[TBL_CUST_SESS_TABLE_ID],$cust_sess);
				/*$requests = tbl_services_requests::getPendingRequestForTable($info[TBL_CUST_SESS_TABLE_ID]);	
			  $canceled_orders = tbl_orders::getNonPaidOrders($info[TBL_CUST_SESS_TABLE_ID]);
				if(count($requests)>0 || count($canceled_orders)>0){			
					return OPERATION_FAIL;					
				}	
				//..changes made to cancle any pending things..sangram
				if(count($requests)>0) {
					tbl_services_requests::cancellAllpendingRequestForTable($info[TBL_CUST_SESS_TABLE_ID]);					
				}	
				if(count($canceled_orders)>0){
					tbl_orders::updateAllTblSessOrdChkPaid($cust_sess);					
				}			*/	
				//..Get the last table status for that session
			  $sts_id=tbl_table_status_link::GetLastTableStatus($info[TBL_CUST_SESS_TABLE_ID]);
			 //..Update the table status link with end time=now
			 $obj->update_table_status(0,$info[TBL_CUST_SESS_ID],$sts_id); 
			 //..Cancel all pending orders for that table 
		 //$canceled_orders = tbl_orders::getNonPaidOrders($info[TBL_CUST_SESS_TABLE_ID],1);
			 //..If last table status < cleaning add status cleaning
			 if(is_gt_zero_num($sts_id)&& ($sts_id < TBL_STATUS_CLEANING) ){
			 	$obj->create($info[TBL_CUST_SESS_TABLE_ID],$info[TBL_CUST_SESS_CUSTOMER],TBL_STATUS_CLEANING,GetDfltTblEmployee($info[TBL_CUST_SESS_TABLE_ID]),$info[TBL_CUST_SESS_ID],$info[TBL_CUST_SESS_PARTY_SIZE]);
			 }
			 //..Finally set the table status to avialable
			 $obj->create($info[TBL_CUST_SESS_TABLE_ID],$info[TBL_CUST_SESS_CUSTOMER],TBL_STATUS_AVAILABLE,GetDfltTblEmployee($info[TBL_CUST_SESS_TABLE_ID]),$info[TBL_CUST_SESS_ID],$info[TBL_CUST_SESS_PARTY_SIZE]); 
			 } 
			 //print_r($info);
			//self::update_table_status(0,$cust_sess,TBL_STATUS_AVAILABLE);
			} 
		}	 	
		return OPERATION_SUCCESS; 
	}	
	
	//..this function will clear all the livesession for the day
	public static function mkDayEndForspecificTable($table_id){
		//..fetch all active table sessions
		//$cust_sess_list = explode(',',tbl_table_customer_session::getActiveSessionForAlltables()); 
		$cust_sess=tbl_table_customer_session::getActiveTblSession($table_id);
		$obj = new tbl_table_status_link();		
		
		   if(is_gt_zero_num($cust_sess)){			 				
			 	//..Get the table session details
			 	$info = tbl_table_customer_session::GetInfo($cust_sess);
				//..first check if there are any pending orders/requests are there
				tbl_table_status_link::take_care_of_pending($info[TBL_CUST_SESS_TABLE_ID],$cust_sess);
				/*$requests = tbl_services_requests::getPendingRequestForTable($info[TBL_CUST_SESS_TABLE_ID]);	
			  $canceled_orders = tbl_orders::getNonPaidOrders($info[TBL_CUST_SESS_TABLE_ID]);
				//..changes made to cancle any pending things..sangram
				if(count($requests)>0) {
					tbl_services_requests::cancellAllpendingRequestForTable($info[TBL_CUST_SESS_TABLE_ID]);					
				}	
				if(count($canceled_orders)>0){
					tbl_orders::updateAllTblSessOrdChkPaid($cust_sess);					
				}				*/
				
				//..Get the last table status for that session
			  $sts_id=tbl_table_status_link::GetLastTableStatus($info[TBL_CUST_SESS_TABLE_ID]);
			 //..Update the table status link with end time=now
			 $obj->update_table_status(0,$info[TBL_CUST_SESS_ID],$sts_id); 
			 //..Cancel all pending orders for that table 
			//$canceled_orders = tbl_orders::getNonPaidOrders($info[TBL_CUST_SESS_TABLE_ID],1);
			 //..If last table status < cleaning add status cleaning
			 if(is_gt_zero_num($sts_id)&& ($sts_id < TBL_STATUS_CLEANING) ){
			 	$obj->create($info[TBL_CUST_SESS_TABLE_ID],$info[TBL_CUST_SESS_CUSTOMER],TBL_STATUS_CLEANING,GetDfltTblEmployee($info[TBL_CUST_SESS_TABLE_ID]),$info[TBL_CUST_SESS_ID],$info[TBL_CUST_SESS_PARTY_SIZE]);
			 }
			 //..Finally set the table status to avialable
			 $obj->create($info[TBL_CUST_SESS_TABLE_ID],$info[TBL_CUST_SESS_CUSTOMER],TBL_STATUS_AVAILABLE,GetDfltTblEmployee($info[TBL_CUST_SESS_TABLE_ID]),$info[TBL_CUST_SESS_ID],$info[TBL_CUST_SESS_PARTY_SIZE]); 
			 } 
			 //print_r($info);
			//self::update_table_status(0,$cust_sess,TBL_STATUS_AVAILABLE);
			

		return OPERATION_SUCCESS; 
	}	
	
	
	/**
	* Update  the Table_status_server of the active session of particular table After Transfer
	* @param int $table_id
	* @param int $server
	* @return int
	*/
	public static function update_new_sever($table_id,$server){
		if(is_gt_zero_num($table_id) && is_gt_zero_num($server)){		
		$sess_id = 	tbl_table_customer_session::getActiveTblSession($table_id); 
		 if(is_gt_zero_num($sess_id)){ 
		 return	DB::ExecNonQry('UPDATE '.TBL_TABLE_STATUS_LINK.' SET '.TBL_STS_LNK_EMP_ID.' = '.$server.' WHERE '.TBL_STS_LNK_TABLE_ID.' = '.$table_id.' AND '.TBL_STS_LNK_SESSION_ID.' = '.$sess_id.';');  
		 } 
		} 
		return OPERATION_FAIL;
	}
	
	/**
	* Return list of available tables  
	*/
	public static function getAvailableTables(){  
 	  $tbl_table_status_link_active_condition;
		$res = mysql_query('
		SELECT '.TBL_STS_LNK_TABLE_ID.','.TABLE_NUMBER.' 
		FROM '.TBL_TABLE_STATUS_LINK.' 
		INNER JOIN '.TBL_DINING_TABLE.' 
		ON '.TBL_STS_LNK_TABLE_ID.'='.TABLE_ID.' 
		WHERE 
		'.TBL_STS_LNK_STATUS_ID.'>='.TBL_STATUS_AVAILABLE.'
		AND DATE('.TBL_STS_LNK_START_TIME.')=CURDATE( )
		AND '.chkTableInRestaurant(TBL_STS_LNK_TABLE_ID).' 
		AND '.$tbl_table_status_link_active_condition.'
		SELECT MAX('.TBL_STS_LNK_ID.') FROM '.TBL_TABLE_STATUS_LINK.' GROUP BY '.TBL_STS_LNK_TABLE_ID.'
		);');
		echo '
		SELECT '.TBL_STS_LNK_TABLE_ID.','.TABLE_NUMBER.' 
		FROM '.TBL_TABLE_STATUS_LINK.' 
		INNER JOIN '.TBL_DINING_TABLE.' 
		ON '.TBL_STS_LNK_TABLE_ID.'='.TABLE_ID.' 
		WHERE 
		'.TBL_STS_LNK_STATUS_ID.'>='.TBL_STATUS_AVAILABLE.'
		AND '.chkTableInRestaurant(TBL_STS_LNK_TABLE_ID).' 
		AND '.$tbl_table_status_link_active_condition.'
		'.TBL_STS_LNK_ID.' IN (SELECT MAX('.TBL_STS_LNK_ID.') FROM '.TBL_TABLE_STATUS_LINK.' GROUP BY '.TBL_STS_LNK_TABLE_ID.')
		;';
		
		/*$res = mysql_query('SELECT '.TBL_STS_LNK_TABLE_ID.','.TABLE_NUMBER.' FROM '.TBL_TABLE_STATUS_LINK.' INNER JOIN '.TBL_DINING_TABLE.' ON '.TBL_STS_LNK_TABLE_ID.'='.TABLE_ID.' WHERE '.TBL_STS_LNK_STATUS_ID.'>='.TBL_STATUS_AVAILABLE.' AND '.TBL_STS_LNK_ID.' IN (SELECT MAX('.TBL_STS_LNK_ID.') FROM '.TBL_TABLE_STATUS_LINK.' GROUP BY '.TBL_STS_LNK_TABLE_ID.' );');*/
		
		
    if($res){
		 	 while($row= mysql_fetch_assoc($res)){
			 	$arr[$row[TBL_STS_LNK_TABLE_ID]] = $row[TABLE_NUMBER];
			 }
		 }
		 return $arr;  
	}
	
	
	public function changeTblStatus($session_id, $status_id,$emp_id=0){
		 if(is_gt_zero_num($session_id) && is_gt_zero_num($status_id)){
		 	 if($this->readObject(array(TBL_STS_LNK_SESSION_ID=>$session_id,TBL_STS_LNK_STATUS_ID=>$status_id))){
				
			}else{
				 
				 $cust_sess_info = tbl_table_customer_session::GetInfo($session_id);
				 if(is_gt_zero_num($emp_id)==FALSE){
				 	$emp_id = GetDfltTblEmployee($cust_sess_info[TBL_CUST_SESS_TABLE_ID]);
				 }
				 $last_status_link_id = self::GetLastTableStatusForCustomer($cust_sess_info[TBL_CUST_SESS_TABLE_ID],$cust_sess_info[TBL_CUST_SESS_CUSTOMER]); 
				 if(is_gt_zero_num($last_status_link_id)) $this->update_table_status($last_status_link_id);
				 $this->create($cust_sess_info[TBL_CUST_SESS_TABLE_ID],$cust_sess_info[TBL_CUST_SESS_CUSTOMER],$status_id,$emp_id,$session_id,$cust_sess_info[TBL_CUST_SESS_PARTY_SIZE]);
				 
			}
		 }
	}
	
	public static function get_me_ready_for_new_sess($tbl_sts_lnk_table_id,$tbl_sts_lnk_session_id){	
			
		tbl_table_status_link::take_care_of_pending($tbl_sts_lnk_table_id,$tbl_sts_lnk_session_id);
				
		$obj = new tbl_table_customer_session();
		$obj->deactivate($tbl_sts_lnk_session_id);
		unset($obj);
		/* $curr_time=NOW(); 
		$obj = new tbl_table_status_link();
		if($obj->readObject(array(TBL_STS_LNK_SESSION_ID=>$tbl_sts_lnk_session_id))){ 
			$obj->settbl_sts_lnk_start_time($curr_time);	 	
			$obj->settbl_sts_lnk_end_time($curr_time);	
			$obj->insert();
		}*/
	}
	
	
	  
}//..End tbl_table_status_link
?>