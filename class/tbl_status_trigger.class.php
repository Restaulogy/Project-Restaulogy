<?php/**********************************************************************tbl_status_trigger.class.phpGenerated by STRUCTY 2013.12.14 06:18:34.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_STATUS_TRIGGER", "tbl_status_trigger"); define('STS_TRG_ID', 'sts_trg_id'); define('STS_TRG_STATUS', 'sts_trg_status'); define('STS_TRG_ROLE', 'sts_trg_role'); define('STS_TRG_START_DATE', 'sts_trg_start_date'); define('STS_TRG_END_DATE', 'sts_trg_end_date'); define("TBL_STATUS_TRIGGER_ACTIVE_DATE",  STS_TRG_START_DATE);define("TBL_STATUS_TRIGGER_DEACTIVE_DATE",  STS_TRG_END_DATE);$tbl_status_trigger_active_condition= " (".TBL_STATUS_TRIGGER_DEACTIVE_DATE." is NULL OR ".TBL_STATUS_TRIGGER_DEACTIVE_DATE." = 0 OR ".TBL_STATUS_TRIGGER_DEACTIVE_DATE." > CURDATE( )) ";class tbl_status_trigger {	private $sts_trg_id;	private $sts_trg_status;	private $sts_trg_role;	private $sts_trg_start_date;	private $sts_trg_end_date;	private $tbl_status_trigger_active_date;	private $tbl_status_trigger_deactive_date;	public function setsts_trg_id($pArg="0") {$this->sts_trg_id=$pArg;}	public function setsts_trg_status($pArg="0") {$this->sts_trg_status=$pArg;}	public function setsts_trg_role($pArg="0") {$this->sts_trg_role=$pArg;}	public function setsts_trg_start_date($pArg="0") {$this->sts_trg_start_date=$pArg;}	public function setsts_trg_end_date($pArg="0") {$this->sts_trg_end_date=$pArg;}	public function settbl_status_trigger_active_date($pArg="0") {$this->tbl_status_trigger_active_date=$pArg;}	public function settbl_status_trigger_deactive_date($pArg="0") {$this->tbl_status_trigger_deactive_date=$pArg;}	public function getsts_trg_id() {return $this->sts_trg_id;}	public function getsts_trg_status() {return $this->sts_trg_status;}	public function getsts_trg_role() {return $this->sts_trg_role;}	public function getsts_trg_start_date() {return $this->sts_trg_start_date;}	public function getsts_trg_end_date() {return $this->sts_trg_end_date;}	public function gettbl_status_trigger_active_date($pArg="0") {return $this->tbl_status_trigger_active_date;}	public function gettbl_status_trigger_deactive_date($pArg="0") {return $this->tbl_status_trigger_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_STATUS_TRIGGER.RET;		$and = "WHERE".RET;		if($array[STS_TRG_ID] != "") {			$qry .= $and.STS_TRG_ID." = '".$array[STS_TRG_ID]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_STATUS] != "") {			$qry .= $and.STS_TRG_STATUS." = '".$array[STS_TRG_STATUS]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_ROLE] != "") {			$qry .= $and.STS_TRG_ROLE." = '".$array[STS_TRG_ROLE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_START_DATE] != "") {			$qry .= $and.STS_TRG_START_DATE." = '".$array[STS_TRG_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_END_DATE] != "") {			$qry .= $and.STS_TRG_END_DATE." = '".$array[STS_TRG_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setsts_trg_id($record[STS_TRG_ID]);				$this->setsts_trg_status($record[STS_TRG_STATUS]);				$this->setsts_trg_role($record[STS_TRG_ROLE]);				$this->setsts_trg_start_date($record[STS_TRG_START_DATE]);				$this->setsts_trg_end_date($record[STS_TRG_END_DATE]);				$this->settbl_status_trigger_active_date($record[TBL_STATUS_TRIGGER_ACTIVE_DATE]);				$this->settbl_status_trigger_deactive_date($record[TBL_STATUS_TRIGGER_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_status_trigger_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_STATUS_TRIGGER.RET;		$and = "WHERE".RET;		if($array[STS_TRG_ID] != "") {			$qry .= $and.STS_TRG_ID." = '".$array[STS_TRG_ID]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_STATUS] != "") {			$qry .= $and.STS_TRG_STATUS." = '".$array[STS_TRG_STATUS]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_ROLE] != "") {			$qry .= $and.STS_TRG_ROLE." = '".$array[STS_TRG_ROLE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_START_DATE] != "") {			$qry .= $and.STS_TRG_START_DATE." = '".$array[STS_TRG_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_END_DATE] != "") {			$qry .= $and.STS_TRG_END_DATE." = '".$array[STS_TRG_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_status_trigger_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_STATUS_TRIGGER_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_STATUS_TRIGGER_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_STATUS_TRIGGER_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["sts_trg_id"]=$record[STS_TRG_ID];					$class_object["sts_trg_status"]=$record[STS_TRG_STATUS];					$class_object["sts_trg_role"]=$record[STS_TRG_ROLE];					$class_object["sts_trg_start_date"]=$record[STS_TRG_START_DATE];					$class_object["sts_trg_end_date"]=$record[STS_TRG_END_DATE];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_status_trigger();					$class_object->setsts_trg_id($record[STS_TRG_ID]);					$class_object->setsts_trg_status($record[STS_TRG_STATUS]);					$class_object->setsts_trg_role($record[STS_TRG_ROLE]);					$class_object->setsts_trg_start_date($record[STS_TRG_START_DATE]);					$class_object->setsts_trg_end_date($record[STS_TRG_END_DATE]);				}				$class_objects[$record[STS_TRG_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getsts_trg_id() != '') {			$qry  = "UPDATE ".TBL_STATUS_TRIGGER.RET."SET".RET."			".STS_TRG_ID." = '".$this->getsts_trg_id()."',".RET."			".STS_TRG_STATUS." = '".$this->getsts_trg_status()."',".RET."			".STS_TRG_ROLE." = '".$this->getsts_trg_role()."',".RET."			".STS_TRG_START_DATE." = '".$this->getsts_trg_start_date()."',".RET."			".STS_TRG_END_DATE." = '".$this->getsts_trg_end_date()."'".RET.			"WHERE ".STS_TRG_ID." = ".$this->getsts_trg_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_STATUS_TRIGGER." (".RET.			"".STS_TRG_STATUS.", ".STS_TRG_ROLE.", ".STS_TRG_START_DATE.", ".STS_TRG_END_DATE.RET.				") VALUES (".RET.			"'".$this->getsts_trg_status()."',".RET.			"'".$this->getsts_trg_role()."',".RET.			"'".$this->getsts_trg_start_date()."',".RET.			"'".$this->getsts_trg_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setsts_trg_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_STATUS_TRIGGER.RET;		$and = "WHERE".RET;		if($array[STS_TRG_ID] != "") {			$qry .= $and.STS_TRG_ID." = '".$array[STS_TRG_ID]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_STATUS] != "") {			$qry .= $and.STS_TRG_STATUS." = '".$array[STS_TRG_STATUS]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_ROLE] != "") {			$qry .= $and.STS_TRG_ROLE." = '".$array[STS_TRG_ROLE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_START_DATE] != "") {			$qry .= $and.STS_TRG_START_DATE." = '".$array[STS_TRG_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[STS_TRG_END_DATE] != "") {			$qry .= $and.STS_TRG_END_DATE." = '".$array[STS_TRG_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($sts_trg_status ,$sts_trg_role ,$sts_trg_start_date ,$sts_trg_end_date) {		$unique_arr = array();			//$unique_arr[STS_TRG_ID]=$sts_trg_id;			//$unique_arr[STS_TRG_STATUS]=$sts_trg_status;			//$unique_arr[STS_TRG_ROLE]=$sts_trg_role;			//$unique_arr[STS_TRG_START_DATE]=$sts_trg_start_date;			//$unique_arr[STS_TRG_END_DATE]=$sts_trg_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($sts_trg_status ,$sts_trg_role ,$sts_trg_start_date ,$sts_trg_end_date) {		if(is_not_empty($sts_trg_status)){			if($this->isAlreadyThere($sts_trg_status ,$sts_trg_role ,$sts_trg_start_date ,$sts_trg_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setsts_trg_id('');				$this->setsts_trg_status($sts_trg_status);				$this->setsts_trg_role($sts_trg_role);				$this->setsts_trg_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getsts_trg_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($sts_trg_id, $sts_trg_status, $sts_trg_role, $sts_trg_start_date, $sts_trg_end_date) {		if(is_gt_zero_num($sts_trg_id)){			if ($this->readObject(array(STS_TRG_ID=>$sts_trg_id))){				$this->setsts_trg_status($sts_trg_status);				$this->setsts_trg_role($sts_trg_role);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($sts_trg_id){		if(is_gt_zero_num($sts_trg_id)){			if ($this->readObject(array(STS_TRG_ID=>$sts_trg_id))){				$qry  = "UPDATE ".TBL_STATUS_TRIGGER.RET."SET".RET."			".TBL_STATUS_TRIGGER_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".STS_TRG_ID."={$sts_trg_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($sts_trg_id){		if(is_gt_zero_num($sts_trg_id)){			if ($this->readObject(array(STS_TRG_ID=>$sts_trg_id))){				$qry  = "UPDATE ".TBL_STATUS_TRIGGER.RET."SET".RET."			".TBL_STATUS_TRIGGER_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".STS_TRG_ID."={$sts_trg_id}";				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($sts_trg_id) {		$info = array();		if($sts_trg_id != ""){			$obj_tbl_status_trigger = new tbl_status_trigger();			if($obj_tbl_status_trigger->readObject(array("sts_trg_id"=>$sts_trg_id))){				$info["sts_trg_id"]=$obj_tbl_status_trigger->getsts_trg_id();				$info["sts_trg_status"]=$obj_tbl_status_trigger->getsts_trg_status();				$info["sts_trg_role"]=$obj_tbl_status_trigger->getsts_trg_role();				$info["sts_trg_start_date"]=$obj_tbl_status_trigger->getsts_trg_start_date();				$info["sts_trg_end_date"]=$obj_tbl_status_trigger->getsts_trg_end_date();				$info["isActive"] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_status_trigger->gettbl_status_trigger_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_status_trigger->gettbl_status_trigger_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_status_trigger->gettbl_status_trigger_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_status_trigger);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_status_trigger_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_STATUS_TRIGGER."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_status_trigger_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields/*** Create Status Triggers By Roles.* @param integer $status_id* @param array $member_roles* @param integer $isUpdate* @return boolean*/	public static function bulkCreate($status,$member_roles,$isUpdate=1){		 		if(is_gt_zero_num($status) && is_not_empty($member_roles)){			//print_r($member_roles);			if($isUpdate){				DB::ExecNonQry('DELETE FROM '.TBL_STATUS_TRIGGER.' WHERE '.STS_TRG_STATUS.'='.$status);		}		 			$sql_params = array();			foreach($member_roles as $member_role){				$sql_params[] = '('.$status.','.$member_role.', NOW())';			}			 			if(is_not_empty($sql_params)){ 				return DB::ExecNonQry('INSERT INTO '.TBL_STATUS_TRIGGER.' ('.STS_TRG_STATUS.','.STS_TRG_ROLE.','.STS_TRG_START_DATE.') VALUES '.biz_implode(',',$sql_params).';');			} 		}	}  		/**	* list of role for that status	* @param integer $status 	* @return string	*/  public static function getRolesForStatus($status,$isUpdate = 1){   	return DB::ExecScalarQry('SELECT GROUP_CONCAT('.STS_TRG_ROLE.') FROM '.TBL_STATUS_TRIGGER.' WHERE '.STS_TRG_STATUS.'='.$status);	}		 	 	/**	* @param 	integer $status	* @param 	integer $member_role	* @return boolean 	*/	public static function isStatusTriggeredByRole($status,$member_role){		 global $tbl_status_trigger_active_condition;		 if(is_gt_zero_num($status) && is_gt_zero_num($member_role)){		 		$cnt = DB::ExecScalarQry('SELECT count('.STS_TRG_ID.') FROM '.TBL_STATUS_TRIGGER.'  WHERE '.STS_TRG_ROLE.'='.$member_role.' AND '.$tbl_status_trigger_active_condition.'  AND '.STS_TRG_STATUS.'='.$status);  				return is_gt_zero_num($cnt) ? TRUE : FALSE ;		 }		 	 	 return FALSE; 	} }//..End tbl_status_trigger?>