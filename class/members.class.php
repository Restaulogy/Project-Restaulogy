<?php/**********************************************************************members.class.phpGenerated by STRUCTY 2012.12.06 10:42:54.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("MEMBERS", "members"); class members {	private $id;	//private $user_type;	private $member_role_id;	private $password;	private $email;	private $key;	private $verified;	private $join;	private $access;	private $login_attempt;	private $banned;	private $pass_reset_key;	private $expires_at;	//..reward fields	private $is_reward;	private $reward_bal_visits;	private $reward_bal_points;	//..sms subscribed	private $sms_subscribed;	public function setid($pArg="0") {$this->id=$pArg;}	public function setmember_role_id($pArg="0") {$this->member_role_id=$pArg;}	public function setpassword($pArg="0") {$this->password=$pArg;}	public function setemail($pArg="0") {$this->email=$pArg;}	public function setkey($pArg="0") {$this->key=$pArg;}	public function setverified($pArg="0") {$this->verified=$pArg;}	public function setjoin($pArg="0") {$this->join=$pArg;}	public function setaccess($pArg="0") {$this->access=$pArg;}	public function setlogin_attempt($pArg="0") {$this->login_attempt=$pArg;}	public function setbanned($pArg="0") {$this->banned=$pArg;}	public function setpass_reset_key($pArg="0") {$this->pass_reset_key=$pArg;}	public function setexpires_at($pArg="0") {$this->expires_at=$pArg;}		public function setis_reward($pArg="0") {$this->is_reward=$pArg;}	public function setreward_bal_visits($pArg="0") {$this->reward_bal_visits=$pArg;}	public function setreward_bal_points($pArg="0") {$this->reward_bal_points=$pArg;}		public function setsms_subscribed($pArg="0") {$this->sms_subscribed=$pArg;}	public function getid() {return $this->id;}	public function getmember_role_id() {return $this->member_role_id;}	public function getpassword() {return $this->password;}	public function getemail() {return $this->email;}	public function getkey() {return $this->key;}	public function getverified() {return $this->verified;}	public function getjoin() {return $this->join;}	public function getaccess() {return $this->access;}	public function getlogin_attempt() {return $this->login_attempt;}	public function getbanned() {return $this->banned;}	public function getpass_reset_key() {return $this->pass_reset_key;}	public function getexpires_at() {return $this->expires_at;}		public function getis_reward() {return $this->is_reward;}	public function getreward_bal_visits() {return $this->reward_bal_visits;}	public function getreward_bal_points() {return $this->reward_bal_points;}		public function getsms_subscribed() {return $this->sms_subscribed;}		public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".MEMBERS.RET;		$and = "WHERE".RET;		if($array['id'] != "") {			$qry .= $and."id = '".$array['id']."'".RET;			$and = "AND".RET;		}		if($array['member_role_id'] != "") {			$qry .= $and."member_role_id = '".$array['member_role_id']."'".RET;			$and = "AND".RET;		}		if($array['password'] != "") {			$qry .= $and."password = '".$array['password']."'".RET;			$and = "AND".RET;		}		if($array['email'] != "") {			$qry .= $and."email = '".$array['email']."'".RET;			$and = "AND".RET;		}		if($array['key'] != "") {			$qry .= $and."key = '".$array['key']."'".RET;			$and = "AND".RET;		}		if($array['verified'] != "") {			$qry .= $and."verified = '".$array['verified']."'".RET;			$and = "AND".RET;		}		if($array['join'] != "") {			$qry .= $and."join = '".$array['join']."'".RET;			$and = "AND".RET;		}		if($array['access'] != "") {			$qry .= $and."access = '".$array['access']."'".RET;			$and = "AND".RET;		}		if($array['login_attempt'] != "") {			$qry .= $and."login_attempt = '".$array['login_attempt']."'".RET;			$and = "AND".RET;		}		if($array['banned'] != "") {			$qry .= $and."banned = '".$array['banned']."'".RET;			$and = "AND".RET;		}		if($array['pass_reset_key'] != "") {			$qry .= $and."pass_reset_key = '".$array['pass_reset_key']."'".RET;			$and = "AND".RET;		}		if($array['expires_at'] != "") {			$qry .= $and."expires_at = '".$array['expires_at']."'".RET;			$and = "AND".RET;		}				if($array['is_reward'] != "") {			$qry .= $and."is_reward = '".$array['is_reward']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_visits'] != "") {			$qry .= $and."reward_bal_visits = '".$array['reward_bal_visits']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_points'] != "") {			$qry .= $and."reward_bal_points = '".$array['reward_bal_points']."'".RET;			$and = "AND".RET;		}				if(is_gt_zero_num($array['sms_subscribed'])) {			$qry .= $and."sms_subscribed = ".$array['sms_subscribed'].RET;			$and = "AND".RET;		} 		$result = mysql_query($qry);		//echo $qry;		if($result){            while ($row = mysql_fetch_array($result)) {			     $record = $row;				 break;//end after first record			}            if(count($record[0]) == 0) {			    return array();			} else {			$this->setid($record['id']);			$this->setmember_role_id($record['member_role_id']);			$this->setpassword($record['password']);			$this->setemail($record['email']);			$this->setkey($record['key']);			$this->setverified($record['verified']);			$this->setjoin($record['join']);			$this->setaccess($record['access']);			$this->setlogin_attempt($record['login_attempt']);			$this->setbanned($record['banned']);			$this->setpass_reset_key($record['pass_reset_key']);			$this->setexpires_at($record['expires_at']);						$this->setis_reward($record['is_reward']);			$this->setreward_bal_visits($record['reward_bal_visits']);			$this->setreward_bal_points($record['reward_bal_points']);						$this->setsms_subscribed($record['sms_subscribed']);						return true;			}		}	}	public static function readArray($array = array()) {		$qry = "SELECT *".RET."FROM ".MEMBERS.RET;		$and = "WHERE".RET;		if($array['id'] != "") {			$qry .= $and."id = '".$array['id']."'".RET;			$and = "AND".RET;		}		if($array['member_role_id'] != "") {			$qry .= $and."member_role_id = '".$array['member_role_id']."'".RET;			$and = "AND".RET;		}		if($array['password'] != "") {			$qry .= $and."password = '".$array['password']."'".RET;			$and = "AND".RET;		}		if($array['email'] != "") {			$qry .= $and."email = '".$array['email']."'".RET;			$and = "AND".RET;		}		if($array['key'] != "") {			$qry .= $and."key = '".$array['key']."'".RET;			$and = "AND".RET;		}		if($array['verified'] != "") {			$qry .= $and."verified = '".$array['verified']."'".RET;			$and = "AND".RET;		}		if($array['join'] != "") {			$qry .= $and."join = '".$array['join']."'".RET;			$and = "AND".RET;		}		if($array['access'] != "") {			$qry .= $and."access = '".$array['access']."'".RET;			$and = "AND".RET;		}		if($array['login_attempt'] != "") {			$qry .= $and."login_attempt = '".$array['login_attempt']."'".RET;			$and = "AND".RET;		}		if($array['banned'] != "") {			$qry .= $and."banned = '".$array['banned']."'".RET;			$and = "AND".RET;		}		if($array['pass_reset_key'] != "") {			$qry .= $and."pass_reset_key = '".$array['pass_reset_key']."'".RET;			$and = "AND".RET;		}		if($array['expires_at'] != "") {			$qry .= $and."expires_at = '".$array['expires_at']."'".RET;			$and = "AND".RET;		}				if($array['is_reward'] != "") {			$qry .= $and."is_reward = '".$array['is_reward']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_visits'] != "") {			$qry .= $and."reward_bal_visits = '".$array['reward_bal_visits']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_points'] != "") {			$qry .= $and."reward_bal_points = '".$array['reward_bal_points']."'".RET;			$and = "AND".RET;		}				if(is_gt_zero_num($array['sms_subscribed'])) {			$qry .= $and."sms_subscribed = ".$array['sms_subscribed'].RET;			$and = "AND".RET;		}		$recordset = mysql_query($qry);		$class_objects = array();		if(is_array($recordset) == true) {			while(list($i, $record) = each($recordset)) {				$class_object = new members();				$class_object->setid($record['id']);				$class_object->setmember_role_id($record['member_role_id']);				$class_object->setpassword($record['password']);				$class_object->setemail($record['email']);				$class_object->setkey($record['key']);				$class_object->setverified($record['verified']);				$class_object->setjoin($record['join']);				$class_object->setaccess($record['access']);				$class_object->setlogin_attempt($record['login_attempt']);				$class_object->setbanned($record['banned']);				$class_object->setpass_reset_key($record['pass_reset_key']);				$class_object->setexpires_at($record['expires_at']);								$class_object->setis_reward($record['is_reward']);			  $class_object->setreward_bal_visits($record['reward_bal_visits']);			  $class_object->setreward_bal_points($record['reward_bal_points']);								$class_object->setsms_subscribed($record['sms_subscribed']);								$class_objects[$class_object->getid()] = $class_object;							}		}		return $class_objects;	}	public function insert() {		if($this->getid() != '') {			$qry  = "UPDATE ".MEMBERS.RET."SET".RET.			"`id` = '".$this->getid()."',".RET.			"`member_role_id` = '".$this->getmember_role_id()."',".RET.			"`password` = '".$this->getpassword()."',".RET.			"`email` = '".$this->getemail()."',".RET.			"`key` = '".$this->getkey()."',".RET.			"`verified` = '".$this->getverified()."',".RET.			"`join` = '".$this->getjoin()."',".RET.			"`access` = '".$this->getaccess()."',".RET.			"`login_attempt` = '".$this->getlogin_attempt()."',".RET.			"`banned` = '".$this->getbanned()."',".RET.						"`is_reward` = '".$this->getis_reward()."',".RET.			"`reward_bal_visits` = '".$this->getreward_bal_visits()."',".RET.			"`reward_bal_points` = '".$this->getreward_bal_points()."',".RET.						"`sms_subscribed` = ".$this->getsms_subscribed().",".RET.						"`pass_reset_key` = '".$this->getpass_reset_key()."',".RET.			"`expires_at` = '".$this->getexpires_at()."'".RET.			"WHERE `id` = ".$this->getid().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".MEMBERS." (".RET.			"`member_role_id`, `password`, `email`, `key`, `verified`, `join`, `access`, `login_attempt`, `banned`, `pass_reset_key`,`is_reward`,`reward_bal_visits`,`reward_bal_points`,`sms_subscribed`, `expires_at`".RET.				") VALUES (".RET.			"'".$this->getmember_role_id()."',".RET.			"'".$this->getpassword()."',".RET.			"'".$this->getemail()."',".RET.			"'".$this->getkey()."',".RET.			"'".$this->getverified()."',".RET.			"'".$this->getjoin()."',".RET.			"'".$this->getaccess()."',".RET.			"'".$this->getlogin_attempt()."',".RET.			"'".$this->getbanned()."',".RET.			"'".$this->getpass_reset_key()."',".RET.						"'".$this->getis_reward()."',".RET.			"'".$this->getreward_bal_visits()."',".RET.			"'".$this->getreward_bal_points()."',".RET.					"'".$this->getsms_subscribed()."',".RET.						"'".$this->getexpires_at()."'".RET.			")".RET;  						$res = mysql_query($qry);						$this->setid(mysql_insert_id());		}	}	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".MEMBERS.RET;		$and = "WHERE".RET;		if($array['id'] != "") {			$qry .= $and."id = '".$array['id']."'".RET;			$and = "AND".RET;		}		if($array['member_role_id'] != "") {			$qry .= $and."member_role_id = '".$array['member_role_id']."'".RET;			$and = "AND".RET;		}		if($array['password'] != "") {			$qry .= $and."password = '".$array['password']."'".RET;			$and = "AND".RET;		}		if($array['email'] != "") {			$qry .= $and."email = '".$array['email']."'".RET;			$and = "AND".RET;		}		if($array['key'] != "") {			$qry .= $and."key = '".$array['key']."'".RET;			$and = "AND".RET;		}		if($array['verified'] != "") {			$qry .= $and."verified = '".$array['verified']."'".RET;			$and = "AND".RET;		}		if($array['join'] != "") {			$qry .= $and."join = '".$array['join']."'".RET;			$and = "AND".RET;		}		if($array['access'] != "") {			$qry .= $and."access = '".$array['access']."'".RET;			$and = "AND".RET;		}		if($array['login_attempt'] != "") {			$qry .= $and."login_attempt = '".$array['login_attempt']."'".RET;			$and = "AND".RET;		}		if($array['banned'] != "") {			$qry .= $and."banned = '".$array['banned']."'".RET;			$and = "AND".RET;		}		if($array['pass_reset_key'] != "") {			$qry .= $and."pass_reset_key = '".$array['pass_reset_key']."'".RET;			$and = "AND".RET;		}		if($array['expires_at'] != "") {			$qry .= $and."expires_at = '".$array['expires_at']."'".RET;			$and = "AND".RET;		}				if($array['is_reward'] != "") {			$qry .= $and."is_reward = '".$array['is_reward']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_visits'] != "") {			$qry .= $and."reward_bal_visits = '".$array['reward_bal_visits']."'".RET;			$and = "AND".RET;		}				if($array['reward_bal_points'] != "") {			$qry .= $and."reward_bal_points = '".$array['reward_bal_points']."'".RET;			$and = "AND".RET;		}				if(is_gt_zero_num($array['sms_subscribed'])) {			$qry .= $and."sms_subscribed = ".$array['sms_subscribed'].RET;			$and = "AND".RET;		}				mysql_query($qry);	}		public function create($email, $password, $lname, $fname, $v_key, $v_varified, $v_join,  $member_role_id=1, $zip='', $phone='',$address='',$designation='',$device_id='',$gcm_reg_id='',$description='',$city='',$metro='',$state='',$country='US',$fax='',$website='',$restaurant ,$is_reward=0,$reward_bal_visits=0,$reward_bal_points=0,$sms_subscribed=0,$staff_facebook=NULL,$cust_dob=NULL,$cust_aniversary_dt=NULL,$staff_loyalty_level=NULL,$staff_signup_flg=''){	 	 if (is_not_empty($email) && is_not_empty($password) && is_not_empty($fname) && is_not_empty($lname) && is_not_empty($v_join) && is_not_empty($v_key) && is_not_empty($v_varified)){	 		if(is_gt_zero_num($restaurant)==false){				if(is_gt_zero_num($_SESSION[SES_RESTAURANT])){					$restaurant=$_SESSION[SES_RESTAURANT];				}else{					$_SESSION[SES_FLASH_MSG]  ='<div class="info">Restaurant not selected.</div>';					return 0;				}								}	    //echo "restaurant=$restaurant||rest=".$_SESSION[SES_RESTAURANT];	 	 		if($this->isAlreadyThere($email,$restaurant)){				return -1;   		}else{			/*`password` ,`email` ,`key` ,`verified` ,`join`)VALUES ('{$password}', '{$email}', '{$key}', {$verified}, '{$join}')"	*/						 //..changes for the multi restaurant				$usr_by_email=get_user_by_email($email);				if(is_not_empty($usr_by_email)){					$member_id = $usr_by_email['id'];				}else{					$this->setid('');					$this->setpassword($password);					$this->setemail($email);					$this->setkey($v_key);					$this->setverified($v_varified);					$this->setjoin($v_join);					$this->setmember_role_id($member_role_id);					 					$this->setis_reward($is_reward);					$this->setreward_bal_visits($reward_bal_visits);					$this->setreward_bal_points($reward_bal_points);										$this->setsms_subscribed($sms_subscribed);										$this->insert();					$member_id = $this->getid(); 					}				//echo "member_id=$member_id";								if(is_gt_zero_num($member_id)){											//..Add record to staff table as well	 								$obj = new tbl_staff(); 						//echo "restaurant=$restaurant ||";						$staff_loyalty_level=tbl_loyalty_level::GetDefltLoyLevForusr($restaurant); 						$is_success=$obj->create($member_id,$address,$lname,$fname,$city,$state,$metro,$country,$zip,$phone,$fax,$website,$device_id,$gcm_reg_id,$description,$designation,$restaurant,$is_reward,$sms_subscribed,$staff_facebook,$cust_dob,$cust_aniversary_dt,$staff_loyalty_level,$staff_signup_flg); 						//$is_success=$obj->create($member_id,$address,$lname,$fname,$zip,$phone,$device_id,$gcm_reg_id,$description,$designation,date(DATE_FORMAT),NULL,1);						//$is_success = $obj->create($member_id,$address,$lname,$fname,$zip,$phone,$device_id,$gcm_reg_id,$description,$designation,date(DATE_FORMAT),NULL,$restaurant);					  unset($obj);						//..if subscribed to 'sms' then add it to the crm table						//if(is_gt_zero_num($sms_subscribed)){						$objtbl_crm= new tbl_crm(); 						$isSuccess = $objtbl_crm->create($member_id, $email, CUST_TYPE_LOGIN, $sms_subscribed, $phone);							unset($objtbl_crm);						//}				}				return $member_id;			}	 }else{	 	return 0;	 }  } 		public function isAlreadyThere($email,$_restaurant){ 			$q = mysql_query('SELECT `id` FROM `'.MEMBERS.'` INNER JOIN `'.TBL_STAFF.'` ON `'.MEMBERS.'`.`id` = `'.TBL_STAFF.'`.`staff_member_id` WHERE `staff_restaurent` = '.$_restaurant.' AND `email`="'.$email.'";');									$n = mysql_num_rows($q);						if(!$n && !$is_found){				return 0;			}else{				return 1;			}      // return $this->readObject(array("email"=>$email));  }			//..Update the rewards balance visits..called when visit is added or claimed	public static function update_reward_bal_visits($member_id,$add_or_minus="ADD",$default_inc=1){		if(is_not_empty($member_id)){			$obj_members = new members();			if($obj_members->readObject(array("id"=>$member_id))){				if($add_or_minus=="ADD"){						$new_bal=($obj_members->getreward_bal_visits()+$default_inc);				}else{						$new_bal=($obj_members->getreward_bal_visits()-$default_inc);				}			 	$obj_members->setreward_bal_visits($new_bal);				$obj_members->insert();				return 1;			 }		}				return 0;			}//..end update_visit_bal			//..Update the rewards balance points..called when payment is done	public static function update_reward_bal_points($member_id,$paid_amount,$add_or_minus="ADD"){		if(is_not_empty($member_id) && is_not_empty($paid_amount)){			$obj_members = new members();			if($obj_members->readObject(array("id"=>$member_id))){				if($add_or_minus=="ADD"){						$new_bal=($obj_members->getreward_bal_points()+$paid_amount);				}else{						$new_bal=($obj_members->getreward_bal_points()-$paid_amount);				}			 	$obj_members->setreward_bal_points($new_bal);				$obj_members->insert();				return 1;			}		}				return 0;			}//..end update_visit_bal			//..Chk if reward is applicabel for the member	public static function chk_rewrd_is_ok_for_member($member_id,$rwd_id,$overall_stat){		if(is_not_empty($member_id) && is_not_empty($rwd_id)){			$obj_members = new members();			$obj_biz_rewards=new biz_rewards();						//..fetch the reward record			if($obj_biz_rewards->readObject(array("rwd_id"=>$rwd_id))){						//..Reward is there now fetch the memebr record for cur balances					//..Step- 1] Get user all reward stats					//$overall_stat=biz_rewards::getRewardUserStats($member_id);					//..Step- 2] Get user specific reward stats						$reward_stat=biz_rewards::get_reward_redeemed_stats($member_id,$rwd_id);								//print_r($overall_stat);print_r($reward_stat);			 if(is_gt_zero_num($overall_stat['total_points'])){			 								//..Step- 3] check rwd_lr_type 					if($obj_biz_rewards->getrwd_lr_type()=='rm'){						//..Recurring milestone	rm						//..Still you can use=(totalpoints - basis) / points						$not_used=intval(($overall_stat['total_points']-$obj_biz_rewards->getrwd_basic())/$obj_biz_rewards->getrwd_point_limit());						//echo "[not_used=$not_used]";						if(is_gt_zero_num($not_used)){								//$not_used=($not_used-$reward_stat['count_redeemed']);								//$not_used=($not_used-$reward_stat['pts_redeemed']);								$not_used=($not_used-$overall_stat['redeem_points']);						}															}elseif($obj_biz_rewards->getrwd_lr_type()=='b'){						//..Basic type b LR type						//..Still you can use=(balance - basis)/points						$not_used=intval(($overall_stat['balance_points']-$obj_biz_rewards->getrwd_basic())/$obj_biz_rewards->getrwd_point_limit());											}elseif($obj_biz_rewards->getrwd_lr_type()=='m'){													//..if we want milestone use as one time sign up rewards then						//..add reward point as 0 ,reward type= milestone and isonetime =1						if(($obj_biz_rewards->getrwd_point_limit()==0) && ($obj_biz_rewards->getrwd_is_one_time()==1)){																	if(is_not_empty($overall_stat['redeemed_rewards_lst'])){										if(in_array($rwd_id,$overall_stat['redeemed_rewards_lst'])){											$not_used=0;										}else{											$not_used=1;										}										}else{										$not_used=1;									}																				}else{							//..milestone	m LR type								$not_used=intval(($overall_stat['total_points']-$obj_biz_rewards->getrwd_basic())/$obj_biz_rewards->getrwd_point_limit());								if(is_gt_zero_num($not_used)){									if($obj_biz_rewards->getrwd_is_one_time()==1){											if(in_array($rwd_id,$overall_stat['redeemed_rewards_lst'])){												$not_used=0;											}else{												$not_used=1;											}									}else{								 										 if(in_array($rwd_id,$overall_stat['redeemed_rewards_lst'])){												$not_used=$not_used-1;											}									}								}								}											}						//echo "[not_used=$not_used] //";						return $not_used;								 }else{			 		if($obj_biz_rewards->getrwd_lr_type()=='m'){						$not_used=0;						//..if we want milestone use as one time sign up rewards then						//..add reward point as 0 ,reward type= milestone and isonetime =1						if(($obj_biz_rewards->getrwd_point_limit()==0) && ($obj_biz_rewards->getrwd_is_one_time()==1)){																	if(is_not_empty($overall_stat['redeemed_rewards_lst'])){										if(in_array($rwd_id,$overall_stat['redeemed_rewards_lst'])){											$not_used=0;										}else{											$not_used=1;										}										}else{										$not_used=1;									}																				}						return $not_used;					}else{						return 0;					}				 					 }			 				  			}			unset($obj_biz_rewards);		}				return 0;			}//..end chk_rewrd_is_ok_for_member		/*public static function chk_rewrd_is_ok_for_member($member_id,$rwd_id){		if(is_not_empty($member_id) && is_not_empty($rwd_id)){			$obj_members = new members();			$obj_biz_rewards=new biz_rewards();			//..fetch the reward record			if($obj_biz_rewards->readObject(array("rwd_id"=>$rwd_id))){						//..reward is there now fetch the memebr record for cur balances 						  if($obj_members->readObject(array("id"=>$member_id))){					 	$curr_reward_bal_visits=$obj_members->getreward_bal_visits();						$curr_reward_bal_points=$obj_members->getreward_bal_points();						//..check 'point_based' or 'visit based'										if($obj_biz_rewards->getrwd_type()=='point_based'){							$rwd_one_point_val=$obj_biz_rewards->getrwd_one_point_val();							$rwd_point_limit=$obj_biz_rewards->getrwd_point_limit();						  							//..first covert the current order amount balance to the points							if(($curr_reward_bal_points>$rwd_one_point_val)){								 $final_val=($curr_reward_bal_points/$rwd_one_point_val);								 if($final_val>=$rwd_point_limit){								 		//..reward is right for the user										return 1; 								 }							}							}else{							 							 $rwd_check_in=$obj_biz_rewards->getrwd_check_in();							 //echo "$curr_reward_bal_visits=$rwd_check_in |";								 if($curr_reward_bal_visits>=$rwd_check_in){								 		//..reward is right for the user										return 1; 							 }						}									 }			 			 }			unset($obj_biz_rewards);		}				return 0;			}//..end update_visit_bal*/		//..Check all the applicable rewards for the customer	public  static function chk_all_rewards($member_id=0){		if($member_id==0){			$member_id=$_SESSION['guid'];		}		$_usr_detls=get_user($member_id);				$_applicable_rewards=array();		$obj_biz_rewards=new biz_rewards();		/*$lst_rewards=$obj_biz_rewards->readArray(array(RWD_BUSS_ID=>$_usr_detls[STAFF_RESTAURENT],"is_within_range"=>1,"isActive"=>1,"rwd_type"=>'point_based',SORT_BY=>'DESC',SORT_ON=>RWD_ID));*/		$lst_rewards=$obj_biz_rewards->readArray(array(RWD_BUSS_ID=>$_usr_detls[STAFF_RESTAURENT],RWD_LOYALTY_LEVEL => $_usr_detls[STAFF_LOYALTY_LEVEL],"is_within_range"=>1,"isActive"=>1,"rwd_type"=>'point_based',SORT_BY=>'DESC',SORT_ON=>RWD_ID));		if(is_not_empty($lst_rewards)){						//..loop through all the within range rewards			$overall_stat=biz_rewards::getRewardUserStats($member_id,$_usr_detls[STAFF_RESTAURENT]);			foreach($lst_rewards as $_reward){					//..Check if the reward is applicable for the member					$is_ok=members::chk_rewrd_is_ok_for_member($member_id,$_reward[RWD_ID],$overall_stat);					$_reward['can_claim']=$is_ok;										if($_reward['rwd_lr_type']=='rm')						$_reward['redeem_unit']='Pts';					else						$_reward['redeem_unit']='Nos';					$_applicable_rewards[]=$_reward;										}		}		return $_applicable_rewards;			}		public function changePassword($curr_pass,$new_pass,$email){		 if($this->readObject(array("email"=>$email, "password"=>$curr_pass))){		 	$this->setpassword($new_pass);			$this->insert();			return 1;		 }		return 0;		 	}		public static function update_usr_email($member_id,$new_email){		//echo "UPDATE `members` SET `password`='{$new_pass}' WHERE id={$member_id}";		if(is_gt_zero_num($member_id) && is_not_empty($new_email))			$res = mysql_query("UPDATE `members` SET `email`='{$new_email}' WHERE id={$member_id}");				return 1;	}		public static function update_usr_password($member_id,$new_pass){		//echo "UPDATE `members` SET `password`='{$new_pass}' WHERE id={$member_id}";		if(is_gt_zero_num($member_id) && is_not_empty($new_pass))			$res = mysql_query("UPDATE `members` SET `password`='{$new_pass}' WHERE id={$member_id}");				return 1;	}		public static function update_member_role($member_id,$new_role){		if(is_gt_zero_num($member_id) && is_gt_zero_num($new_role))			$res = mysql_query("UPDATE `members` SET `member_role_id`={$new_role} WHERE id={$member_id}");				return 1;	}		public static function update_member_sms_subscibe($member_id,$sms_subscribed,$_restaurant=0){		if(is_gt_zero_num($member_id))			$res = mysql_query("UPDATE `members` SET `sms_subscribed`={$sms_subscribed} WHERE id={$member_id}");			if($_restaurant==0)				$_restaurant=$_SESSION[SES_RESTAURANT];			//..multi restaurant 			$res = mysql_query("UPDATE `tbl_staff` SET `staff_is_crm_subscribed`={$sms_subscribed} WHERE `staff_member_id`={$member_id} AND `staff_restaurent`={$_restaurant}");				return 1;	}		public static function update_member_is_reward($member_id,$is_reward,$_restaurant=0){		if(is_gt_zero_num($member_id))			$res = mysql_query("UPDATE `members` SET `is_reward`={$is_reward} WHERE id={$member_id}");			if($_restaurant==0)				$_restaurant=$_SESSION[SES_RESTAURANT];			//..multi restaurant 			$res = mysql_query("UPDATE `tbl_staff` SET `staff_is_reward`={$is_reward} WHERE `staff_member_id`={$member_id} AND `staff_restaurent`={$_restaurant}");				return 1;	}		public static function GetInfo($id=0, $email=""){		$arr = array();		$info = array(); 		if(is_gt_zero_num($id)){			 $arr['id'] = $id;				}		if(is_not_empty($email)){			 $arr['email'] = $email;				} 			 	$obj = new members();		if(is_not_empty($arr)){  			$obj->readObject($arr);  	 		if(is_gt_zero_num($obj->getid())){				$info['id'] = $obj->getid();				$info['email']= $obj->getemail();				$info['verified'] = $obj->getverified();				$info['password'] = $obj->getpassword();				$info['banned'] = $obj->getbanned();				$info['key'] = $obj->getkey(); 				$info['join'] = $obj->getjoin(); 				$info['access'] = $obj->getaccess(); 				$info['expires_at'] = $obj->getexpires_at();   	 			$info['member_role_id'] = $obj->getmember_role_id(); 								$info['is_reward'] = $obj->getis_reward();				$info['reward_bal_visits'] = $obj->getreward_bal_visits();				$info['reward_bal_points'] = $obj->getreward_bal_points();								$info['sms_subscribed'] = $obj->getsms_subscribed();								$info['member_role'] = "" ;  				$role = new member_role();				if($role->readObject(array("member_role_id"=>$info['member_role_id']))) {					$info['member_role'] = set_value($role->getmember_role_name(),"");				}				unset($role); 								//..get the staff details								$staff = new tbl_staff();				$staff_det=$staff->GetInfo($obj->getid());								//..If the role is customer then find out if restaulogy member				if($info['member_role_id']==ROLE_CUSTOMER && (is_not_empty($staff_det))){					$info['rest_sign_up'] =_is_restaulogy_usr($staff_det[STAFF_PHONE]);				}				//..Modified Reg the user to all resturants..And update flag				//..START..SAN ..07/02/2018 				$bs_usr=_get_bs_rest_usr($staff_det[STAFF_PHONE]);				if(is_not_empty($bs_usr)){					if($bs_usr[STAFF_FNAME]!='Guest'){						$staff_det[STAFF_FNAME]=$bs_usr[STAFF_FNAME];						$staff_det[STAFF_LNAME]=$bs_usr[STAFF_LNAME];						$staff_det['full_name']=$staff_det[STAFF_FNAME].' '.$staff_det[STAFF_LNAME] ;					}									}				unset($bs_usr);				//..END..SAN ..07/02/2018												//..get the role wise functionality				$objtbl_role_functionality = new tbl_role_functionality();					$role_fun_det=$objtbl_role_functionality->GetInfo(0,$info['member_role_id']);										//..merge all staff and role functionality to main info 				$info = array_merge($info,$staff_det,$role_fun_det); 				//print_r($staff_det);								unset($staff);				unset($objtbl_role_functionality);							} 		}  		unset($obj); 		return $info;	}			//..get user details based	public static function get_usr_its_rest_details($email,$chk_rest){		$_mem_id=0;		$_usr_detail=array();		$_usr_detail['is_already_there']=0;		$_rstlst='';				$sql='SELECT `id`,`password` FROM `'.MEMBERS.'` WHERE `email`="'.$email.'";';		$_usr_detail=DB::ExecQry($sql,1);				if(is_gt_zero_num($_usr_detail['id'])){			$sql='SELECT restaurent_id,`restaurent_name` FROM `'.TBL_STAFF.'` `s` INNER JOIN `'.TBL_RESTAURENT.'` `r` ON `r`.`restaurent_id`=`s`.`staff_restaurent` WHERE `s`.`staff_member_id`='.$_usr_detail['id'].';';			//echo $sql;			$rest_detail=DB::ExecQry($sql);				if(is_not_empty($rest_detail)){				foreach($rest_detail as $val){					if(is_not_empty($_rstlst))						$_rstlst=$_rstlst.','.$val['restaurent_name'];					else						$_rstlst=$val['restaurent_name'];						 					if($val['restaurent_id']==$chk_rest){						$_usr_detail['is_already_there']=1;					}				}			}									$_usr_detail['sub_rest_lst']=$_rstlst;				$_usr_detail['restaurants']=$rest_detail;					}		return $_usr_detail;			}}?>