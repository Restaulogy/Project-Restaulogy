<?php/**********************************************************************tbl_wait_estimation_times.class.phpGenerated by STRUCTY 2013.06.05 13:33:22.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define("TBL_WAIT_ESTIMATION_TIMES", "tbl_wait_estimation_times"); define('WT_EST_TIME_ID', 'wt_est_time_id'); define('WT_EST_TIME_PARTY_SIZE', 'wt_est_time_party_size'); define('WT_EST_TIME_TABLE_TYPE', 'wt_est_time_table_type'); define('WT_EST_TIME_VALUE', 'wt_est_time_value'); define('WT_EST_TIME_START_DATE', 'wt_est_time_start_date'); define('WT_EST_TIME_END_DATE', 'wt_est_time_end_date'); define("TBL_WAIT_ESTIMATION_TIMES_ACTIVE_DATE",  WT_EST_TIME_START_DATE);define("TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE",  WT_EST_TIME_END_DATE);$tbl_wait_estimation_times_active_condition= " (".TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE." is NULL OR ".TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE." = 0 OR ".TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE." > CURDATE( )) ";class tbl_wait_estimation_times {	private $wt_est_time_id;	private $wt_est_time_party_size;	private $wt_est_time_table_type;	private $wt_est_time_value;	private $wt_est_time_start_date;	private $wt_est_time_end_date;	private $tbl_wait_estimation_times_active_date;	private $tbl_wait_estimation_times_deactive_date;	public function setwt_est_time_id($pArg="0") {$this->wt_est_time_id=$pArg;}	public function setwt_est_time_party_size($pArg="0") {$this->wt_est_time_party_size=$pArg;}	public function setwt_est_time_table_type($pArg="0") {$this->wt_est_time_table_type=$pArg;}	public function setwt_est_time_value($pArg="0") {$this->wt_est_time_value=$pArg;}	public function setwt_est_time_start_date($pArg="0") {$this->wt_est_time_start_date=$pArg;}	public function setwt_est_time_end_date($pArg="0") {$this->wt_est_time_end_date=$pArg;}	public function settbl_wait_estimation_times_active_date($pArg="0") {$this->tbl_wait_estimation_times_active_date=$pArg;}	public function settbl_wait_estimation_times_deactive_date($pArg="0") {$this->tbl_wait_estimation_times_deactive_date=$pArg;}	public function getwt_est_time_id() {return $this->wt_est_time_id;}	public function getwt_est_time_party_size() {return $this->wt_est_time_party_size;}	public function getwt_est_time_table_type() {return $this->wt_est_time_table_type;}	public function getwt_est_time_value() {return $this->wt_est_time_value;}	public function getwt_est_time_start_date() {return $this->wt_est_time_start_date;}	public function getwt_est_time_end_date() {return $this->wt_est_time_end_date;}	public function gettbl_wait_estimation_times_active_date($pArg="0") {return $this->tbl_wait_estimation_times_active_date;}	public function gettbl_wait_estimation_times_deactive_date($pArg="0") {return $this->tbl_wait_estimation_times_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_WAIT_ESTIMATION_TIMES.RET;		$and = "WHERE".RET;		if($array[WT_EST_TIME_ID] != "") {			$qry .= $and.WT_EST_TIME_ID." = '".$array[WT_EST_TIME_ID]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_PARTY_SIZE] != "") {			$qry .= $and.WT_EST_TIME_PARTY_SIZE." = '".$array[WT_EST_TIME_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_TABLE_TYPE] != "") {			$qry .= $and.WT_EST_TIME_TABLE_TYPE." = '".$array[WT_EST_TIME_TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_VALUE] != "") {			$qry .= $and.WT_EST_TIME_VALUE." = '".$array[WT_EST_TIME_VALUE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_START_DATE] != "") {			$qry .= $and.WT_EST_TIME_START_DATE." = '".$array[WT_EST_TIME_START_DATE]."'".RET;			$and = "AND".RET;		}		 		if($array[WT_EST_TIME_END_DATE] != "") {			$qry .= $and.WT_EST_TIME_END_DATE." = '".$array[WT_EST_TIME_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->setwt_est_time_id($record[WT_EST_TIME_ID]);				$this->setwt_est_time_party_size($record[WT_EST_TIME_PARTY_SIZE]);				$this->setwt_est_time_table_type($record[WT_EST_TIME_TABLE_TYPE]);				$this->setwt_est_time_value($record[WT_EST_TIME_VALUE]);				$this->setwt_est_time_start_date($record[WT_EST_TIME_START_DATE]);				$this->setwt_est_time_end_date($record[WT_EST_TIME_END_DATE]);				$this->settbl_wait_estimation_times_active_date($record[TBL_WAIT_ESTIMATION_TIMES_ACTIVE_DATE]);				$this->settbl_wait_estimation_times_deactive_date($record[TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_wait_estimation_times_active_condition;		$qry = "SELECT  `wt_est_time_id`, `wt_est_time_party_size`,`tbl_type_name`, `wt_est_time_table_type`, `wt_est_time_value`, `wt_est_time_start_date`, `wt_est_time_end_date` ".RET."FROM ".TBL_WAIT_ESTIMATION_TIMES." INNER JOIN ".TBL_TABLE_TYPE." ON wt_est_time_table_type = tbl_type_id ".RET;		$and = "WHERE".RET;		if($array[WT_EST_TIME_ID] != "") {			$qry .= $and.WT_EST_TIME_ID." = '".$array[WT_EST_TIME_ID]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_PARTY_SIZE] != "") {			$qry .= $and.WT_EST_TIME_PARTY_SIZE." = '".$array[WT_EST_TIME_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_TABLE_TYPE] != "") {			$qry .= $and.WT_EST_TIME_TABLE_TYPE." = '".$array[WT_EST_TIME_TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_VALUE] != "") {			$qry .= $and.WT_EST_TIME_VALUE." = '".$array[WT_EST_TIME_VALUE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_START_DATE] != "") {			$qry .= $and.WT_EST_TIME_START_DATE." = '".$array[WT_EST_TIME_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_END_DATE] != "") {			$qry .= $and.WT_EST_TIME_END_DATE." = '".$array[WT_EST_TIME_END_DATE]."'".RET;			$and = "AND".RET;		}				if($array[SES_RESTAURANT] != "") {			$qry .= $and.TBL_TYPE_RESTARENT." =  ".$array[SES_RESTAURANT]."".RET;			$and = "AND".RET;		} 		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_wait_estimation_times_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object["wt_est_time_id"]=$record[WT_EST_TIME_ID];					$class_object["wt_est_time_party_size"]=$record[WT_EST_TIME_PARTY_SIZE];					$class_object["wt_est_time_table_type"]=$record[WT_EST_TIME_TABLE_TYPE];					$class_object["wt_est_time_value"]=$record[WT_EST_TIME_VALUE];					$class_object["wt_est_time_start_date"]=$record[WT_EST_TIME_START_DATE];					$class_object["wt_est_time_end_date"]=$record[WT_EST_TIME_END_DATE];					$class_object["tbl_type_name"] = $record['tbl_type_name'];					$class_object["isActive"]=$isActive;				}else{					$class_object = new tbl_wait_estimation_times();					$class_object->setwt_est_time_id($record[WT_EST_TIME_ID]);					$class_object->setwt_est_time_party_size($record[WT_EST_TIME_PARTY_SIZE]);					$class_object->setwt_est_time_table_type($record[WT_EST_TIME_TABLE_TYPE]);					$class_object->setwt_est_time_value($record[WT_EST_TIME_VALUE]);					$class_object->setwt_est_time_start_date($record[WT_EST_TIME_START_DATE]);					$class_object->setwt_est_time_end_date($record[WT_EST_TIME_END_DATE]);				}				$class_objects[$record[WT_EST_TIME_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->getwt_est_time_id() != '') {			$qry  = "UPDATE ".TBL_WAIT_ESTIMATION_TIMES.RET."SET".RET."			".WT_EST_TIME_ID." = '".$this->getwt_est_time_id()."',".RET."			".WT_EST_TIME_PARTY_SIZE." = '".$this->getwt_est_time_party_size()."',".RET."			".WT_EST_TIME_TABLE_TYPE." = '".$this->getwt_est_time_table_type()."',".RET."			".WT_EST_TIME_VALUE." = '".$this->getwt_est_time_value()."',".RET."			".WT_EST_TIME_START_DATE." = '".$this->getwt_est_time_start_date()."',".RET."			".WT_EST_TIME_END_DATE." = '".$this->getwt_est_time_end_date()."'".RET.			"WHERE ".WT_EST_TIME_ID." = ".$this->getwt_est_time_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_WAIT_ESTIMATION_TIMES." (".RET.			"".WT_EST_TIME_PARTY_SIZE.", ".WT_EST_TIME_TABLE_TYPE.", ".WT_EST_TIME_VALUE.", ".WT_EST_TIME_START_DATE.", ".WT_EST_TIME_END_DATE.RET.				") VALUES (".RET.			"'".$this->getwt_est_time_party_size()."',".RET.			"'".$this->getwt_est_time_table_type()."',".RET.			"'".$this->getwt_est_time_value()."',".RET.			"'".$this->getwt_est_time_start_date()."',".RET.			"'".$this->getwt_est_time_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->setwt_est_time_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_WAIT_ESTIMATION_TIMES.RET;		$and = "WHERE".RET;		if($array[WT_EST_TIME_ID] != "") {			//$qry .= $and.WT_EST_TIME_ID." = '".$array[WT_EST_TIME_ID]."'".RET;			$qry .= $and.WT_EST_TIME_ID." IN (".$array[WT_EST_TIME_ID].")".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_PARTY_SIZE] != "") {			$qry .= $and.WT_EST_TIME_PARTY_SIZE." = '".$array[WT_EST_TIME_PARTY_SIZE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_TABLE_TYPE] != "") {			$qry .= $and.WT_EST_TIME_TABLE_TYPE." = '".$array[WT_EST_TIME_TABLE_TYPE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_VALUE] != "") {			$qry .= $and.WT_EST_TIME_VALUE." = '".$array[WT_EST_TIME_VALUE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_START_DATE] != "") {			$qry .= $and.WT_EST_TIME_START_DATE." = '".$array[WT_EST_TIME_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[WT_EST_TIME_END_DATE] != "") {			$qry .= $and.WT_EST_TIME_END_DATE." = '".$array[WT_EST_TIME_END_DATE]."'".RET;			$and = "AND".RET;		}		$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($wt_est_time_party_size ,$wt_est_time_table_type ,$wt_est_time_value ,$wt_est_time_start_date ,$wt_est_time_end_date) {		$unique_arr = array();			//$unique_arr[WT_EST_TIME_ID]=$wt_est_time_id;			 $unique_arr[WT_EST_TIME_PARTY_SIZE]=$wt_est_time_party_size;			 $unique_arr[WT_EST_TIME_TABLE_TYPE]=$wt_est_time_table_type;			//$unique_arr[WT_EST_TIME_VALUE]=$wt_est_time_value;			//$unique_arr[WT_EST_TIME_START_DATE]=$wt_est_time_start_date;			//$unique_arr[WT_EST_TIME_END_DATE]=$wt_est_time_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($wt_est_time_party_size ,$wt_est_time_table_type ,$wt_est_time_value ,$wt_est_time_start_date ,$wt_est_time_end_date) {		if(is_not_empty($wt_est_time_party_size)){			if($this->isAlreadyThere($wt_est_time_party_size ,$wt_est_time_table_type ,$wt_est_time_value ,$wt_est_time_start_date ,$wt_est_time_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->setwt_est_time_id("");				$this->setwt_est_time_party_size($wt_est_time_party_size);				$this->setwt_est_time_table_type($wt_est_time_table_type);				$this->setwt_est_time_value($wt_est_time_value);				$this->setwt_est_time_start_date(date(DATE_FORMAT));				$this->insert();				return $this->getwt_est_time_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($wt_est_time_id, $wt_est_time_party_size, $wt_est_time_table_type, $wt_est_time_value, $wt_est_time_start_date, $wt_est_time_end_date) {		if(is_gt_zero_num($wt_est_time_id)){			if ($this->readObject(array(WT_EST_TIME_ID=>$wt_est_time_id))){				$this->setwt_est_time_party_size($wt_est_time_party_size);				$this->setwt_est_time_table_type($wt_est_time_table_type);				$this->setwt_est_time_value($wt_est_time_value);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($wt_est_time_id){		if(is_not_empty($wt_est_time_id)){			//if ($this->readObject(array(WT_EST_TIME_ID=>$wt_est_time_id))){				$qry  = "UPDATE ".TBL_WAIT_ESTIMATION_TIMES.RET."SET".RET."			".TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE." = '".date(EMPTY_DATE_FORMAT)."' WHERE ".WT_EST_TIME_ID." IN ({$wt_est_time_id})";				$res = mysql_query($qry);				if($res){					return 1;				}			//}		}		return 0;	}//..end activate	public function deactivate($wt_est_time_id){		if(is_not_empty($wt_est_time_id)){			//if ($this->readObject(array(WT_EST_TIME_ID=>$wt_est_time_id))){				$qry  = "UPDATE ".TBL_WAIT_ESTIMATION_TIMES.RET."SET".RET."			".TBL_WAIT_ESTIMATION_TIMES_DEACTIVE_DATE." = '".date(DATE_FORMAT)."' WHERE ".WT_EST_TIME_ID." IN ({$wt_est_time_id})";				//echo $qry;				//exit;				$res = mysql_query($qry);				if($res){					return 1;				}			//}		}		return 0;	}//..end deactivate	public static function GetInfo($wt_est_time_id) {		$info = array();		if($wt_est_time_id != ""){			$obj_tbl_wait_estimation_times = new tbl_wait_estimation_times();			if($obj_tbl_wait_estimation_times->readObject(array("wt_est_time_id"=>$wt_est_time_id))){				$info["wt_est_time_id"]=$obj_tbl_wait_estimation_times->getwt_est_time_id();				$info["wt_est_time_party_size"]=$obj_tbl_wait_estimation_times->getwt_est_time_party_size();				$info["wt_est_time_table_type"]=$obj_tbl_wait_estimation_times->getwt_est_time_table_type();				$info["wt_est_time_value"]=$obj_tbl_wait_estimation_times->getwt_est_time_value();				$info["wt_est_time_start_date"]=$obj_tbl_wait_estimation_times->getwt_est_time_start_date();				$info["wt_est_time_end_date"]=$obj_tbl_wait_estimation_times->getwt_est_time_end_date();				$info["isActive"] = 0;				$info["table_type_info"] = tbl_table_type::GetInfo($info["wt_est_time_table_type"]);				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_wait_estimation_times->gettbl_wait_estimation_times_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_wait_estimation_times->gettbl_wait_estimation_times_deactive_date()))== false)){					$info["isActive"] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_wait_estimation_times->gettbl_wait_estimation_times_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info["isActive"] = 1;					}				}			}		unset($obj_tbl_wait_estimation_times);		return $info;		}	}//..End GetInfo	public static function GetFields($data){		global $tbl_wait_estimation_times_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ="SELECT ".$data['key_field'].",".$data['value_field']." FROM ".TBL_WAIT_ESTIMATION_TIMES."";			if(is_gt_zero_num($data['isActive'])){				$qry .= " WHERE ".$tbl_wait_estimation_times_active_condition;			}			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields		 		public static function getEstimatedGroupPartySize_TableType($table_type, $party_size){	 	$record = array('est_time_id'=>0,'est_time'=>0,'first_limit'=>0,'second_limit'=>0);	  if(is_gt_zero_num($table_type) && is_gt_zero_num($party_size)){	  	$qry = "SELECT wt_est_time_id, wt_est_time_value, wt_est_time_table_type, IF( POSITION(  '-'		IN  `wt_est_time_party_size` ) >0, LEFT(  `wt_est_time_party_size` , (		INSTR(  `wt_est_time_party_size` ,  '-' ) -1 ) ) , LEFT(  `wt_est_time_party_size` , (		INSTR(  `wt_est_time_party_size` ,  '+' ) -1 )		)		) AS 		FIRST , (		IF( POSITION(  '-'		IN  `wt_est_time_party_size` ) >0, RIGHT(  `wt_est_time_party_size` , (		INSTR(  `wt_est_time_party_size` ,  '-' ) -1 ) ) , 10000		)		) AS 		SECOND 		FROM  `tbl_wait_estimation_times` 		HAVING  FIRST  <= {$party_size} AND SECOND >= {$party_size}		AND wt_est_time_table_type = {$table_type}"; 		  	$res = mysql_query($qry);		if($res && is_gt_zero_num(mysql_num_rows($res))){			$record['est_time_id']   = mysql_result($res,0,'wt_est_time_id');			$record['est_time']  =	mysql_result($res,0,'wt_est_time_value');			$record['first_limit'] = mysql_result($res,0,'FIRST');			$record['second_limit'] = mysql_result($res,0,'SECOND'); 		}	  		  } 			return $record;	}	}//..End tbl_wait_estimation_times?>