<?php/**********************************************************************tbl_table_status.class.phpGenerated by STRUCTY 2013.04.11 07:17:42.Copyright 2011 Structy, Frédéric Aebi. All rights reserved.**********************************************************************/define('TBL_TABLE_STATUS', 'tbl_table_status'); define('TBL_STS_ID', 'tbl_sts_id'); define('TBL_STS_NAME', 'tbl_sts_name'); define('TBL_STS_DESC', 'tbl_sts_desc'); define('TBL_STS_SORT_ORDER', 'tbl_sts_sort_order'); define('TBL_STS_START_DATE', 'tbl_sts_start_date'); define('TBL_STS_END_DATE', 'tbl_sts_end_date'); define('TBL_TABLE_STATUS_ACTIVE_DATE',  TBL_STS_START_DATE);define('TBL_TABLE_STATUS_DEACTIVE_DATE',  TBL_STS_END_DATE);$tbl_table_status_active_condition= ' ('.TBL_TABLE_STATUS_DEACTIVE_DATE.' is NULL OR '.TBL_TABLE_STATUS_DEACTIVE_DATE.' = 0 OR '.TBL_TABLE_STATUS_DEACTIVE_DATE.' > CURDATE( )) ';/*define('TBL_STATUS_OCCUPIED',10);//..occupieddefine('TBL_STATUS_ORDERED',20);//..ordererdefine('TBL_STATUS_ORDER_CONFIRM',21);//..ordererdefine('TBL_STATUS_ORDER_PICKED',22);//..ordererdefine('TBL_STATUS_ORDER_DELAYED',23);//..ordererdefine('TBL_STATUS_ORDER_READY',24);//..ordererdefine('TBL_STATUS_ORDER_CANCELLED',29);//..ordererdefine('TBL_STATUS_DINING',30);//..check paiddefine('TBL_STATUS_DESERT',40);//..check paiddefine('TBL_STATUS_CHECK',50);//..check paiddefine('TBL_STATUS_DELIVERED',51);//..check paid define('TBL_STATUS_CLEANING',60);//..Cleaningdefine('TBL_STATUS_AVAILABLE',70);//..available*///..changed @25Oct2013define('TBL_STATUS_OCCUPIED',6);//..occupieddefine('TBL_STATUS_ORDERED',7);//..ordererdefine('TBL_STATUS_ORDER_CONFIRM', 13);//..ordererdefine('TBL_STATUS_ORD_CONFIRM_DELAY', 31);define('TBL_STATUS_ORDER_PICKED', 14);//..ordererdefine('TBL_STATUS_ORDER_DELAYED', 15);//..ordererdefine('TBL_STATUS_ORDER_READY', 16);//..ordererdefine('TBL_STATUS_ORDER_CANCELLED',17 );//..ordererdefine('TBL_STATUS_DINING',8);//..check paiddefine('TBL_STATUS_DESERT',9);//..check paiddefine('TBL_STATUS_CHECK',10);//..check paiddefine('TBL_STATUS_DELIVERED',18);//..check paid define('TBL_STATUS_CLEANING',11);//..Cleaningdefine('TBL_STATUS_AVAILABLE',12);//..available  class tbl_table_status {	private $tbl_sts_id;	private $tbl_sts_name;	private $tbl_sts_desc;	private $tbl_sts_sort_order;	private $tbl_sts_start_date;	private $tbl_sts_end_date;	private $tbl_table_status_active_date;	private $tbl_table_status_deactive_date;	public function settbl_sts_id($pArg='0') {$this->tbl_sts_id=$pArg;}	public function settbl_sts_name($pArg='0') {$this->tbl_sts_name=$pArg;}	public function settbl_sts_desc($pArg='0') {$this->tbl_sts_desc=$pArg;}	public function settbl_sts_sort_order($pArg='0') {$this->tbl_sts_sort_order=$pArg;}	public function settbl_sts_start_date($pArg='0') {$this->tbl_sts_start_date=$pArg;}	public function settbl_sts_end_date($pArg='0') {$this->tbl_sts_end_date=$pArg;}	public function settbl_table_status_active_date($pArg='0') {$this->tbl_table_status_active_date=$pArg;}	public function settbl_table_status_deactive_date($pArg='0') {$this->tbl_table_status_deactive_date=$pArg;}	public function gettbl_sts_id() {return $this->tbl_sts_id;}	public function gettbl_sts_name() {return $this->tbl_sts_name;}	public function gettbl_sts_desc() {return $this->tbl_sts_desc;}	public function gettbl_sts_sort_order() {return $this->tbl_sts_sort_order;}	public function gettbl_sts_start_date() {return $this->tbl_sts_start_date;}	public function gettbl_sts_end_date() {return $this->tbl_sts_end_date;}	public function gettbl_table_status_active_date() {return $this->tbl_table_status_active_date;}	public function gettbl_table_status_deactive_date() {return $this->tbl_table_status_deactive_date;}	public function readObject($array = array()) {		$qry = "SELECT *".RET."FROM ".TBL_TABLE_STATUS.RET;		$and = "WHERE".RET;		if($array[TBL_STS_ID] != "") {			$qry .= $and.TBL_STS_ID." = '".$array[TBL_STS_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_NAME] != "") {			$qry .= $and.TBL_STS_NAME." = '".$array[TBL_STS_NAME]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_DESC] != "") {			$qry .= $and.TBL_STS_DESC." = '".$array[TBL_STS_DESC]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_SORT_ORDER] != "") {			$qry .= $and.TBL_STS_SORT_ORDER." = '".$array[TBL_STS_SORT_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_START_DATE] != "") {			$qry .= $and.TBL_STS_START_DATE." = '".$array[TBL_STS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_END_DATE] != "") {			$qry .= $and.TBL_STS_END_DATE." = '".$array[TBL_STS_END_DATE]."'".RET;			$and = "AND".RET;		}	$result = mysql_query($qry);		if($result) {			while ($row = mysql_fetch_array($result)) {				$record = $row;				break;//end after first record			}			if(count($record[0]) == 0) {				return array();			} else {				$this->settbl_sts_id($record[TBL_STS_ID]);				$this->settbl_sts_name($record[TBL_STS_NAME]);				$this->settbl_sts_desc($record[TBL_STS_DESC]);				$this->settbl_sts_sort_order($record[TBL_STS_SORT_ORDER]);				$this->settbl_sts_start_date($record[TBL_STS_START_DATE]);				$this->settbl_sts_end_date($record[TBL_STS_END_DATE]);				$this->settbl_table_status_active_date($record[TBL_TABLE_STATUS_ACTIVE_DATE]);				$this->settbl_table_status_deactive_date($record[TBL_TABLE_STATUS_DEACTIVE_DATE]);				return true;			}		}	}	public static function readArray($array = array(),&$result_found=0,$isArray=1) {		global $tbl_table_status_active_condition;		$qry = "SELECT *".RET."FROM ".TBL_TABLE_STATUS.RET;		$and = "WHERE".RET;		if($array[TBL_STS_ID] != "") {			$qry .= $and.TBL_STS_ID." = '".$array[TBL_STS_ID]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_NAME] != "") {			$qry .= $and.TBL_STS_NAME." = '".$array[TBL_STS_NAME]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_DESC] != "") {			$qry .= $and.TBL_STS_DESC." = '".$array[TBL_STS_DESC]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_SORT_ORDER] != "") {			$qry .= $and.TBL_STS_SORT_ORDER." = '".$array[TBL_STS_SORT_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_START_DATE] != "") {			$qry .= $and.TBL_STS_START_DATE." = '".$array[TBL_STS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_END_DATE] != "") {			$qry .= $and.TBL_STS_END_DATE." = '".$array[TBL_STS_END_DATE]."'".RET;			$and = "AND".RET;		}		if(is_gt_zero_num($array["isActive"])) {			$qry .= $and.$tbl_table_status_active_condition;;			$and = "AND".RET;		}		if(is_not_empty($array[SORT_ON]) && is_not_empty($array[SORT_BY])) {		$qry .=" ORDER BY ".$array[SORT_ON]." ".$array[SORT_BY];		}		if(is_not_empty($array[OFFSET_TITLE]) && is_not_empty($array[LIMIT_TITLE])) {			$qry_with_limit  = $qry." LIMIT ".$array[OFFSET_TITLE].",".$array[LIMIT_TITLE];		}else{			$qry_with_limit  = $qry;		}		$result = mysql_query ($qry_with_limit);		$r1 = mysql_query($qry);		if($r1){			$result_found = mysql_num_rows($r1);		}		$class_objects = array();		if($result) {			while ($record = mysql_fetch_assoc($result)) {				$isActive= 0;				//..check deactive date is not set or 0				if((is_not_empty($record[TBL_TABLE_STATUS_DEACTIVE_DATE])==false) || (is_gt_zero_num(strtotime($record[TBL_TABLE_STATUS_DEACTIVE_DATE]))== false)){					$isActive = 1; 				}else{					//..check the deactive date is greater than todays date					if(strtotime($record[TBL_TABLE_STATUS_DEACTIVE_DATE]) > strtotime(date(DATE_FORMAT))){						$isActive = 1;					}				}				if($isArray){					$class_object = array();					$class_object['tbl_sts_id']=$record[TBL_STS_ID];					$class_object['tbl_sts_name']=$record[TBL_STS_NAME];					$class_object['tbl_sts_desc']=$record[TBL_STS_DESC];					$class_object['tbl_sts_sort_order']=$record[TBL_STS_SORT_ORDER];					$class_object['tbl_sts_start_date']=$record[TBL_STS_START_DATE];					$class_object['tbl_sts_end_date']=$record[TBL_STS_END_DATE];					$class_object['isActive']=$isActive;				}else{					$class_object = new tbl_table_status();					$class_object->settbl_sts_id($record[TBL_STS_ID]);					$class_object->settbl_sts_name($record[TBL_STS_NAME]);					$class_object->settbl_sts_desc($record[TBL_STS_DESC]);					$class_object->settbl_sts_sort_order($record[TBL_STS_SORT_ORDER]);					$class_object->settbl_sts_start_date($record[TBL_STS_START_DATE]);					$class_object->settbl_sts_end_date($record[TBL_STS_END_DATE]);				}				$class_objects[$record[TBL_STS_ID]] = $class_object;			}		}		return $class_objects;	}//..End readArray	public function insert() {		if($this->gettbl_sts_id() != '') {			$qry  = "UPDATE ".TBL_TABLE_STATUS.RET."SET".RET."			".TBL_STS_ID." = '".$this->gettbl_sts_id()."',".RET."			".TBL_STS_NAME." = '".$this->gettbl_sts_name()."',".RET."			".TBL_STS_DESC." = '".$this->gettbl_sts_desc()."',".RET."			".TBL_STS_SORT_ORDER." = '".$this->gettbl_sts_sort_order()."',".RET."			".TBL_STS_START_DATE." = '".$this->gettbl_sts_start_date()."',".RET."			".TBL_STS_END_DATE." = '".$this->gettbl_sts_end_date()."'".RET.			"WHERE ".TBL_STS_ID." = ".$this->gettbl_sts_id().RET;			mysql_query($qry);		} else {			$qry  = "INSERT INTO ".TBL_TABLE_STATUS." (".RET.			"".TBL_STS_NAME.", ".TBL_STS_DESC.", ".TBL_STS_SORT_ORDER.", ".TBL_STS_START_DATE.", ".TBL_STS_END_DATE.RET.				") VALUES (".RET.			"'".$this->gettbl_sts_name()."',".RET.			"'".$this->gettbl_sts_desc()."',".RET.			"'".$this->gettbl_sts_sort_order()."',".RET.			"'".$this->gettbl_sts_start_date()."',".RET.			"'".$this->gettbl_sts_end_date()."'".RET.			")".RET;			$res = mysql_query($qry);			$this->settbl_sts_id(mysql_insert_id());		}	}//..End Insert	public static function delete($array = array()) {		$qry = "DELETE".RET."FROM ".TBL_TABLE_STATUS.RET;		$and = "WHERE".RET;		if($array[TBL_STS_ID] != "") {			//$qry .= $and.TBL_STS_ID." = '".$array[TBL_STS_ID]."'".RET;			$qry .= $and.TBL_STS_ID." IN (".$array[TBL_STS_ID].")".RET;			$and = "AND".RET;		}		if($array[TBL_STS_NAME] != "") {			$qry .= $and.TBL_STS_NAME." = '".$array[TBL_STS_NAME]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_DESC] != "") {			$qry .= $and.TBL_STS_DESC." = '".$array[TBL_STS_DESC]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_SORT_ORDER] != "") {			$qry .= $and.TBL_STS_SORT_ORDER." = '".$array[TBL_STS_SORT_ORDER]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_START_DATE] != "") {			$qry .= $and.TBL_STS_START_DATE." = '".$array[TBL_STS_START_DATE]."'".RET;			$and = "AND".RET;		}		if($array[TBL_STS_END_DATE] != "") {			$qry .= $and.TBL_STS_END_DATE." = '".$array[TBL_STS_END_DATE]."'".RET;			$and = "AND".RET;		}				$res = mysql_query($qry);		if($res){			return OPERATION_SUCCESS;		};		return OPERATION_FAIL;	}//..End Delete	public function isAlreadyThere($tbl_sts_name ,$tbl_sts_desc ,$tbl_sts_sort_order ,$tbl_sts_start_date ,$tbl_sts_end_date) {			$unique_arr = array();			//$unique_arr[TBL_STS_ID]=$tbl_sts_id;			$unique_arr[TBL_STS_NAME]=$tbl_sts_name;			//$unique_arr[TBL_STS_DESC]=$tbl_sts_desc;			//$unique_arr[TBL_STS_SORT_ORDER]=$tbl_sts_sort_order;			//$unique_arr[TBL_STS_START_DATE]=$tbl_sts_start_date;			//$unique_arr[TBL_STS_END_DATE]=$tbl_sts_end_date;		if(is_not_empty($unique_arr)){			return $this->readObject($unique_arr);		}		return false;	}//..isAlreadyThere	public function create($tbl_sts_name ,$tbl_sts_desc ,$tbl_sts_sort_order ,$tbl_sts_start_date ,$tbl_sts_end_date) {		if(is_not_empty($tbl_sts_name)){			if($this->isAlreadyThere($tbl_sts_name ,$tbl_sts_desc ,$tbl_sts_sort_order ,$tbl_sts_start_date ,$tbl_sts_end_date)){				return OPERATION_DUPLICATE;			}else{				$this->settbl_sts_id("");				$this->settbl_sts_name($tbl_sts_name);				$this->settbl_sts_desc($tbl_sts_desc);				$this->settbl_sts_sort_order($tbl_sts_sort_order);				$this->settbl_sts_start_date(date(DATE_FORMAT));				$this->insert();				return $this->gettbl_sts_id();			}		}		return OPERATION_FAIL;	}//..create	public function update($tbl_sts_id, $tbl_sts_name, $tbl_sts_desc, $tbl_sts_sort_order, $tbl_sts_start_date, $tbl_sts_end_date) {		if(is_gt_zero_num($tbl_sts_id)){			if ($this->readObject(array(TBL_STS_ID=>$tbl_sts_id))){				$this->settbl_sts_name($tbl_sts_name);				$this->settbl_sts_desc($tbl_sts_desc);				$this->settbl_sts_sort_order($tbl_sts_sort_order);				$this->insert();				return OPERATION_SUCCESS;			}		}		return OPERATION_FAIL;	}//..update	public function activate($tbl_sts_id){		if(is_gt_zero_num($tbl_sts_id)){			if ($this->readObject(array(TBL_STS_ID=>$tbl_sts_id))){				$qry  = 'UPDATE '.TBL_TABLE_STATUS.RET.'SET'.RET.RET.TBL_TABLE_STATUS_DEACTIVE_DATE.' = \''.date(EMPTY_DATE_FORMAT).'\' WHERE '.TBL_STS_ID.'='.$tbl_sts_id;				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end activate	public function deactivate($tbl_sts_id){		if(is_gt_zero_num($tbl_sts_id)){			if ($this->readObject(array(TBL_STS_ID=>$tbl_sts_id))){				$qry  = 'UPDATE '.TBL_TABLE_STATUS.RET.'SET'.RET.RET.TBL_TABLE_STATUS_DEACTIVE_DATE.' = \''.date(DATE_FORMAT).'\' WHERE '.TBL_STS_ID.'='.$tbl_sts_id;				$res = mysql_query($qry);				if($res){					return 1;				}			}		}		return 0;	}//..end deactivate	public static function GetInfo($tbl_sts_id) {		$info = array();		if($tbl_sts_id != ''){			//$obj_tbl_table_status = new tbl_table_status();		   $tbl_statusinfo = tbl_statuses::GetInfo($tbl_sts_id);			 if($tbl_statusinfo){			 	 $info['tbl_sts_id']= $tbl_statusinfo[STATUS_ID];			 	 $info['tbl_sts_name']= $tbl_statusinfo[STATUS_NAME];			 	 $info['tbl_sts_desc']= $tbl_statusinfo[STATUS_DESC];			 	 $info['tbl_sts_start_date']= $tbl_statusinfo[STATUS_START_DATE];				 $info['tbl_sts_sort_order']=$tbl_statusinfo[STATUS_ID];			 	 $info['tbl_sts_end_date']= $tbl_statusinfo[STATUS_END_DATE];				 $info['isActive'] = $tbl_statusinfo['isActive'];			 }			/*if($obj_tbl_table_status->readObject(array('tbl_sts_id'=>$tbl_sts_id))){				$info['tbl_sts_id']=$obj_tbl_table_status->gettbl_sts_id();				$info['tbl_sts_name']=$obj_tbl_table_status->gettbl_sts_name();				$info['tbl_sts_desc']=$obj_tbl_table_status->gettbl_sts_desc();				$info['tbl_sts_sort_order']=$obj_tbl_table_status->gettbl_sts_sort_order();				$info['tbl_sts_start_date']=$obj_tbl_table_status->gettbl_sts_start_date();				$info['tbl_sts_end_date']=$obj_tbl_table_status->gettbl_sts_end_date();				$info['isActive'] = 0;				//..check deactive date is not set or 0				if((is_not_empty($obj_tbl_table_status->gettbl_table_status_deactive_date())==false)  || (is_gt_zero_num(strtotime($obj_tbl_table_status->gettbl_table_status_deactive_date()))== false)){					$info['isActive'] = 1;				}else{					//..check the deactive date is greater than todays date					if(strtotime($obj_tbl_table_status->gettbl_table_status_deactive_date()) > strtotime(date(DATE_FORMAT))){						$info['isActive'] = 1;					}				}			}		unset($obj_tbl_table_status);		*/		unset($tbl_statusinfo);		return $info; 		} 	}//..End GetInfo	public static function GetFields($data){		global $tbl_table_status_active_condition;		$arr = array();		if(is_not_empty($data)){			$qry ='SELECT '.$data['key_field'].','.$data['value_field'].' FROM '.TBL_TABLE_STATUS;			if(is_gt_zero_num($data['isActive'])){				$qry .= ' WHERE '.$tbl_table_status_active_condition;						}			$qry .= ' ORDER BY '.TBL_STS_SORT_ORDER.' ASC';			$res = mysql_query($qry); 			if($res){				while($row=mysql_fetch_assoc($res)){					$arr[$row[$data['key_field']]] = $row[$data['value_field']];				}			}		}		return $arr;	}//.. End of GetFields	/*	public static function getOrder_Statuses($type,$status_id){	 	 $arr = array(			TBL_STATUS_ORDERED				=>array('title' =>'Ordered','visible'=>1,'isEnable'=>0),			TBL_STATUS_ORDER_CONFIRM	=>array('title' =>'Order Confirm','visible'=>1,'isEnable'=>0),			TBL_STATUS_ORDER_CANCELLED=>array('title' =>'Order Cancelled','visible'=>1,'isEnable'=>0),			TBL_STATUS_ORDER_PICKED		=>array('title' =>'Order Ready To Pick','visible'=>1,'isEnable'=>0) ,		//change @20Aug2013#2		//TBL_STATUS_ORDER_DELAYED	=>'Order Delayed',		//TBL_STATUS_ORDER_READY		=>'Order Ready',						TBL_STATUS_CHECK=>array('title' =>'Order Paid','visible'=>1,'isEnable'=>0) 		);  				if($type == ORDER_TYPE_TAKE_OUT){		$arr[TBL_STATUS_DELIVERED] = array('title' =>'Order Delivered','visible'=>1,'isEnable'=>0) ;	}		$remainarr = array();		$reversearr = array();			$type_prefix = tbl_orders::getOrderTypeTitle($type,1); 	 if(strpos ('Order ','ordered')===true){	 	 echo "x";	 }				foreach($arr as $key=>$val){		$key = intval ($key);		if(is_not_empty($type_prefix)){			 			 if(stristr($val['title'],'Order ')){			 	 $val['title'] = str_ireplace('Order ',$type_prefix.' ',$val['title']);			 }else{			 	 $val['title'] = $type_prefix .' '.$val['title'];			 }			 			 	#if(strpos('Order ',$val['title'])===false){				 	#		$val['title'] = $type_prefix .' '.$val['title'];				#}else{				#		$val['title'] = str_ireplace('Order ',$type_prefix.' ',$val['title']);				#}  			} 		if($status_id != $key){		 	if($status_id < $key){ 				$remainarr[$key] = $val; 	 		}else{   				$reversearr[$key] = $val; 	 		}		} 	}	  			 $reversearr = array_reverse($reversearr,true);	 	 //..enable link	 $remain_cnt = 0;	 foreach($remainarr as $key=>$val){  	 	 if($remain_cnt == 0)  $remainarr[$key]['isEnable'] = 1; 		 if($status_id == TBL_STATUS_ORDER_CANCELLED){		 		$remainarr[$key]['visible'] = 0;		 } 		 $remain_cnt++;	 }	  	 	 $reverse_cnt = 0;	 foreach($reversearr as $key=>$val){	 	if($reverse_cnt == 0)  $reversearr[$key]['isEnable'] = 1; 				if($status_id == TBL_STATUS_ORDERED){		 		$reversearr[$key]['visible'] = 0;		 } 				$reverse_cnt++;	 }	 	 switch($status_id){ 		 case TBL_STATUS_ORDERED : 	 				$remainarr[TBL_STATUS_ORDER_CONFIRM]['isEnable'] = 1;					$remainarr[TBL_STATUS_ORDER_CANCELLED]['isEnable'] = 1;								 break;		 		 case TBL_STATUS_ORDER_CONFIRM : 			$remainarr[TBL_STATUS_ORDER_CANCELLED]['visible'] = 0;			$remainarr[TBL_STATUS_ORDER_PICKED]['isEnable'] = 1;			break;		 case TBL_STATUS_ORDER_PICKED : 		 	$remainarr[TBL_STATUS_CHECK]['isEnable'] = 1;			$remainarr[TBL_STATUS_ORDER_CANCELLED]['visible'] = 0;			break;		 case TBL_STATUS_ORDER_CANCELLED:		  $reversearr[TBL_STATUS_ORDERED]['title'] = 'Restore Order';			$reversearr[TBL_STATUS_ORDER_CONFIRM]['visible'] = 0;		 break;	 } 	 	  //print_r($remainarr);	 	 return array('reverse_order_statuses'=>$reversearr,	 							'remain_order_statuses'=>$remainarr);					//..check paid  			}	*/	 	public static function getOrder_Statuses($type,$status_id){   //echo "<br>$type<hr>";	global $Global_member;  $statuses =  tbl_statuses::getStatusPickerValues("'ORDER','TABLE'",'ORDER');  	foreach($statuses as $key=>$val){		 if($val['id'] != TBL_STATUS_CHECK){ 		 	  if($val['event'] == 'ORDER'){					$arr[$key]=$val;					$arr[$key]['visible']=1; 				}else{					$arr[$key]=$val ;					$arr[$key]['visible']=0;				} 		}	 	} 		 /*if($type == ORDER_TYPE_TAKE_OUT){ 		$arr[] = array('id'=>TBL_STATUS_DELIVERED,'title' =>'Order Delivered','visible'=>1,'isEnable'=>0,'event'=>'ORDER') ;   }*/	//print_r($arr);	$remainarr = array();		$reversearr = array();			$type_prefix = tbl_orders::getOrderTypeTitle($type,1); 	 if(strpos ('Order ','ordered')===true){	 	 //echo "x";	 }				foreach($arr as $key=>$val){		$key = intval ($key);		if(is_not_empty($type_prefix)){			 			 if(stristr($val['title'],'Order ')){			 	 $val['title'] = str_ireplace('Order ',$type_prefix.' ',$val['title']);			 }else{			 	 $val['title'] = $type_prefix .' '.$val['title'];			 }			 				/*if(strpos('Order ',$val['title'])===false){										$val['title'] = $type_prefix .' '.$val['title'];				}else{					$val['title'] = str_ireplace('Order ',$type_prefix.' ',$val['title']);				} */			}							if($status_id != $val['id']){				 $val['clickable'] = 0;				if(tbl_status_trigger::isStatusTriggeredByRole($val['id'],$Global_member['member_role_id'])){					 $val['clickable'] = 1;				}					 	if(tbl_statuses::getStatusPickerKeyByStatus($status_id,"'TABLE','ORDER'",'ORDER') <= $key){ 								$remainarr[$key] = $val; 	 		}else{   				$reversearr[$key] = $val; 	 		}		 }  	}	 	 /* print_r($remainarr);	 print_r($reversearr);   		*/	 $reversearr = array_reverse($reversearr,true); 	 return array('reverse_order_statuses'=>$reversearr,	 							'remain_order_statuses'=>$remainarr);					//..check paid  			}	public static function getMiddleRequestStatuses($init_stage,$last_stage){	 	$middle_status = array();	if(is_gt_zero_num($init_stage) && is_gt_zero_num($last_stage) && ($init_stage != $last_stage)){		$statuses =  tbl_statuses::getStatusPickerValues("'REQUEST'",'REQUEST');		 		foreach($statuses as $key=>$val){ 			 if($val['id'] == $init_stage) $init_key = $key;		}		foreach($statuses as $key=>$val){ 			 if($val['id'] == $last_stage) $last_key = $key;		} 		 		// echo $init_key,'=',$last_key,'<hr>';		foreach($statuses as $key=>$val){  		 //echo $init_key,'<',$key,'>', $last_key, '<br>'; 			if(($init_key <= $key) && ($last_key >= $key)){				//echo '<hr>';				$middle_status[]=$val['id']; 			} 			 		} 	}	return $middle_status;}		public static function getRequest_Statuses($status_id){	global $Global_member;  	  $statuses =  tbl_statuses::getStatusPickerValues("'REQUEST'",'REQUEST');  	foreach($statuses as $key=>$val){		/*if($val['id'] == TBL_STATUS_DESERT || $val['id'] == TBL_STATUS_DINING){			$arr[$key]=$val ;			$arr[$key]['visible']=0;		}else{*/			      	 		 		$arr[$key]=$val;				$arr[$key]['visible']=1;						if($status_id == $val['id']){					$new_key = $key;				}			/*}*/	}  	$usedarr = $remainarr= $lastarr= array();	/*print_r($arr);*/	foreach($arr as $key=>$val){		$key = intval ($key);		 		if($status_id != $val['id']){ 				$val['clickable'] = 0;				if(tbl_status_trigger::isStatusTriggeredByRole($val['id'],$Global_member['member_role_id'])){					 $val['clickable'] = 1;				}							 	if($new_key <  $key){  					$remainarr[$key] = $val; 		 		}else{   					$usedarr[$key] = $val; 		 		} 		}else{ 			 $lastarr[$key] = $val;		} 	}  	 //print_r($remainarr);  exit;	$usedarr = array_reverse($usedarr,true);	$arr = array('used_statuses'=>$usedarr,	 							'remain_statuses'=>$remainarr,								'last_statuses'=>$lastarr); 	// print_r($arr);	return $arr; }}//..End tbl_table_status?>